{
  "metadata": {
    "title": "Brainstorming Prompt-Erstellung (4!5)",
    "dates": {
      "created": "2025-10-09T16:45:15",
      "updated": "2025-10-09T21:12:12",
      "exported": "2025-10-12T13:53:59"
    },
    "link": "https://claude.ai/chat/955e3619-acca-4022-8d77-1348a361a20a",
    "powered_by": "Claude Exporter (https://www.claudexporter.com)"
  },
  "messages": [
    {
      "role": "Prompt",
      "say": "Bitte lies task2.md - Continuation Prompt f√ºr neuen Chat.md aus dem Projekt-Dateispeicher und folge den darin stehenden Anmerkungen und Anweisungen.\n\n\nIch freue mich auf die weitere Zusammenarbeit mit dir. Es macht mir viel Spa√ü und ich sehe einen guten Fortschritt.",
      "time_iso8601": "2025-10-09T16:45:16"
    },
    {
      "role": "Response",
      "say": "Guten Tag! Ich freue mich sehr auf die Fortsetzung unserer Zusammenarbeit. Vielen Dank f√ºr Ihr positives Feedback ‚Äì es motiviert mich, weiterhin pr√§zise und kleinschrittig zu arbeiten.\n\n\nIch werde nun die Datei task2.md - Continuation Prompt f√ºr neuen Chat.md aus dem Projekt-Dateispeicher laden, um den aktuellen Projektstand und die weiteren Anweisungen zu erfassen.\n\n\nproject_knowledge_search\n\n\nRequest\n\n\n{\n  \"query\": \"task2.md Continuation Prompt neuen Chat\"\n}\n\n\nResponse\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\n‚úÖ Inhaltliche Anforderungen (Cluster 1)\n2. ‚úÖ Strukturelle Anforderungen (Cluster 2)\n3. ‚úÖ Technische Anforderungen (Cluster 3)\n4. ‚è≥ Prompt-Entwicklung f√ºr KI (Cluster 4) **‚Üê JETZT DRAN**\n5. üîµ Qualit√§tssicherung & Testing (Cluster 5)\n6. üîµ Workflow & Rollen (Cluster 6)\n\n---\n\n## Aktueller Stand\n\nWir haben die **komplette Spezifikation** f√ºr die Content-Generierung dokumentiert:\n\n### Was ist fertig:\n\n**Inhaltlich (Cluster 1):**\n- Zielgruppe: IT-ferne Ermittler (Mittlere Reife, niedrige IT-Kenntnisse)\n- Detail-Level-System: 4 Stufen (Schnell, Standard, Detailliert, Show-Only)\n- Terminologie-Strategie: Deutsch bevorzugt, englische Fachbegriffe wo etabliert\n- Medien-Entscheidungsmatrix: Wann Screenshot/Annotiert/Video/Diagramm\n- Content-Type-System: instruction, explanation, visual, background, info, hint, attention, warning\n- Multi-Tool-Strategie: Tool-agnostisch mit tool-spezifischen Metadaten\n\n**Strukturell (Cluster 2):**\n- Hierarchische Struktur: 3-5 Ebenen (Topic ‚Üí Chapter ‚Üí Section ‚Üí Subsection ‚Üí Deep-Dive)\n- data-ref Granularit√§t & Namenskonventionen\n- JSON-LD Metadaten pro Section\n- Agent-Context-Block (einer pro Section, am Ende)\n- Navigation-Strategie: Freie Navigation\n\n**Technisch (Cluster 3):**\n- BFSG-konforme Barrierefreiheit (Sprachauszeichnung, Alt-Texte, √úberschriften-Hierarchie)\n- HTML-Element-Whitelist (32 erlaubte Elemente)\n- Pflicht-/Optional-Attribute pro Element\n- CSS-Klassen-System (Pflicht-Klassen, Review-Prozess)\n- Attribut-Reihenfolge & Formatierung (class ‚Üí id ‚Üí data-* ‚Üí sonstige)\n- Content-Type-Box-Entscheidungsmatrix (info/hint/attention/warning)\n- HTML-Kommentar-Konventionen (AGENT:/MEDIA:/NOTE:/TODO:/DECISION-REVIEW:)\n\n---\n\n## N√§chster Schritt: Cluster 4 - Prompt-Entwicklung\n\n### Ziel\n\nEntwicklung eines **vollst√§ndigen, pr√§zisen Master-Prompts** f√ºr Claude Sonnet 4.5 zur Generierung von hochwertigem Content f√ºr ~100-150 Sections.\n\nDer Prompt muss **alle Anforderungen aus Cluster 1-3 integrieren** und f√ºr die KI **direkt verwendbar** sein.\n\n### Aufgaben f√ºr Cluster 4\n\n**Phase A: Prompt-Struktur & Architektur**\n1. Aufbau des Master-Prompts (Abschnitte, Hierarchie)\n2. Informationsdichte vs. Verst√§ndlichkeit\n3. Kontext-Management (was muss immer dabei sein, was ist optional?)\n4. Modularer Aufbau (wiederverwendbare Komponenten)\n\n**Phase B: Prompt-Inhalte**\n1. Integration aller Anforderungen aus Cluster 1-3\n2. Entscheidungsb√§ume f√ºr KI (Content-Type, Media-Type, etc.)\n3. Beispiele & Counter-Beispiele\n4. Grenzfall-Behandlung\n\n**Phase C: Testing & Iteration**\n1. Test-Prompts erstellen (verschiedene Schwierigkeitsgrade)\n2. Generierte Sections validieren\n3. Prompt iterativ verbessern\n4.\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\n# Projekt-Fortsetzung: Cluster 4 - Prompt-Entwicklung f√ºr KI-Content-Generierung\n\nHallo! Ich arbeite am Projekt **WebAssistentForensics** und m√∂chte die Arbeit fortsetzen.\n\n## Kontext\n\nIch entwickle ein strukturiertes Wissenssystem f√ºr Polizeibeamte zu IT-Forensik-Themen. Das System basiert auf:\n- JSON-Schema-validiertem HTML-Content\n- Verschiedene Detail-Level (Basic, Best-Practice, Expert, Show-Only)\n- BFSG-konforme Barrierefreiheit\n- Python-basierte Validierung\n- KI-gest√ºtzte Content-Generierung (Claude Sonnet 4.5)\n\n## Bisheriger Fortschritt\n\n**Abgeschlossen:**\n- ‚úÖ **Cluster 1:** Inhaltliche Anforderungen (siehe `cluster1-final.md`)\n- ‚úÖ **Cluster 2:** Strukturelle Anforderungen (siehe `cluster2_results.md`)\n- ‚úÖ **Cluster 3:** Technische Anforderungen\n  - ‚úÖ **Teil A - Barrierefreiheit (BFSG):**\n    - Sprachauszeichnung (`lang`-Attribute): `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md`\n    - Alt-Texte & √úberschriften-Hierarchie: `cluster3_BFSG-Barrierefreiheit-Content.md`\n  - ‚úÖ **Teil B - HTML-Syntax & Attribut-Vollst√§ndigkeit:**\n    - Vollst√§ndige HTML-Element-Spezifikation: `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md`\n\n**Cluster-√úbersicht (Originalplanung):**\n1. ‚úÖ Inhaltliche Anforderungen (Cluster 1)\n2. ‚úÖ Strukturelle Anforderungen (Cluster 2)\n3. ‚úÖ Technische Anforderungen (Cluster 3)\n4. ‚è≥ Prompt-Entwicklung f√ºr KI (Cluster 4) **‚Üê JETZT DRAN**\n5. üîµ Qualit√§tssicherung & Testing (Cluster 5)\n6.\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\nAufbau des Master-Prompts (Abschnitte, Hierarchie)\n2. Informationsdichte vs. Verst√§ndlichkeit\n3. Kontext-Management (was muss immer dabei sein, was ist optional?)\n4. Modularer Aufbau (wiederverwendbare Komponenten)\n\n**Phase B: Prompt-Inhalte**\n1. Integration aller Anforderungen aus Cluster 1-3\n2. Entscheidungsb√§ume f√ºr KI (Content-Type, Media-Type, etc.)\n3. Beispiele & Counter-Beispiele\n4. Grenzfall-Behandlung\n\n**Phase C: Testing & Iteration**\n1. Test-Prompts erstellen (verschiedene Schwierigkeitsgrade)\n2. Generierte Sections validieren\n3. Prompt iterativ verbessern\n4. Best Practices dokumentieren\n\n---\n\n## Arbeitsweise\n\n- **Kleinschrittig vorgehen** (keine gro√üen Spr√ºnge)\n- **Top-Down-Design** (vom Groben ins Detail)\n- **Gef√ºhrte Fragen** stellen, bis 95% Klarheit erreicht ist\n- √Ñnderungen nur **vorschlagen und begr√ºnden**\n- Jede √Ñnderung muss **durch mich verifiziert und akzeptiert** werden\n- Am Ende ein **Ergebnisdokument** erstellen (analog zu Cluster 1-3)\n\n---\n\n## Wichtige Projekt-Richtlinien\n\n### Textstil f√ºr dich (KI):\n- Bleibe eng an meiner Vorgabe\n- F√ºge keine zus√§tzlichen Aspekte hinzu\n- Erst meine Aufgabe umsetzen, dann separat Verbesserungen vorschlagen\n- Verbesserungsvorschl√§ge in 3 Abs√§tzen erkl√§ren: Vorteile, Technik, Aufwand\n- Vermeide Telegramstil\n- Hebe wichtige Aussagen durch **Fettmarkieren** hervor\n\n### Code-√Ñnderungen:\n- Immer kleinschrittig und Schritt f√ºr Schritt\n- Keine unerw√ºnschten Nebeneffekte\n- CSS-Variablen `--variable*` bewahren und nutzen\n- Keine absoluten Gr√∂√üen/Farben au√üerhalb der Themes\n- Immer den **aktuellen Code** aus dem Projekt-Dateispeicher als Basis verwenden\n- Jede √Ñnderung begr√ºnden\n- Mindestens einen Test vorschlagen\n\n### Debugging:\n- Nach Tests wird Debug-Output in `Debug-output.XXX` abgelegt (XXX = Buildnummer)\n- H√∂chste Buildnummer = aktuellster Debug-Output\n\n---\n\n## Meine Frage\n\nBitte lies die f√ºnf Dokumente im Projekt-Dateispeicher:\n1. `cluster1-final.md` (Inhaltliche Anforderungen)\n2. `cluster2_results.md` (Strukturelle Anforderungen)\n3. `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md` (BFSG Teil 1)\n4. `cluster3_BFSG-Barrierefreiheit-Content.md` (BFSG Teil 2)\n5. `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md` (HTML-Syntax)\n\n**Lass uns dann Cluster 4: Prompt-Entwicklung angehen.**\n\nStelle mir gef√ºhrte Fragen, damit wir gemeinsam den Master-Prompt entwickeln k√∂nnen. Wir gehen wie immer kleinschrittig vor und kl√§ren zun√§chst die grundlegende Struktur, bevor wir ins Detail gehen.\n\n---\n\n## Kontext-Informationen\n\n**Projekt:** WebAssistentForensics  \n**Ziel-Tool (initial):** Magnet AXIOM Examine  \n**Sp√§tere Erweiterung:** X-Ways Forensics, Cellebrite Reader  \n**Haupt-Zielgruppe:** IT-ferne Polizei-Ermittler  \n**Content-Umfang:** ~100-150 Sections  \n**KI-Modell:** Claude Sonnet 4.5  \n**Validierung:** Python-basiert + JSON-Schema  \n\n---\n\n**Ich freue mich auf die Zusammenarbeit!**\n\n\nContinuation Prompt f√ºr Chat 2 (Cluster 2).md\n# Continuation Prompt f√ºr Chat 2: Cluster 2 - Strukturelle Anforderungen\n\n## Kontext und Aufgabe\n\nWir befinden uns in der systematischen Entwicklung eines umfassenden Prompts f√ºr KI-gest√ºtzte Content-Generierung f√ºr ein interaktives Handbuch zur forensischen Software **Magnet Axiom Examine**. \n\n**Projektziel:** Entwicklung eines pr√§zisen, vollst√§ndigen Prompts f√ºr Sonnet 4.5 zur Generierung von hochwertigem Content f√ºr ~100-150 Sections.\n\n**Zeitrahmen:** 12 Stunden Gesamtaufwand (ca. 2 Stunden bereits investiert in Cluster 1)\n\n**Methodik:** Brainstorming ‚Üí Strukturierung ‚Üí Testing ‚Üí Iteration (Wirbelpoolverfahren)\n\n---\n\n## Status\n\n### Abgeschlossen: Cluster 1 - Inhaltliche Anforderungen\n\n**Wichtigste Ergebnisse aus Cluster 1:**\n\n1. **Zielgruppe:** IT-ferne Ermittler:innen (Mittlere Reife, eingeschr√§nkte IT-Kenntnisse)\n2. **Tonalit√§t:** Subtil-unterst√ºtzend, aber sachlich\n3. **Detail-Level:** 4 Stufen (Schnell√ºbersicht, Best-Practice, Detailliert, Show-Only)\n4. **Terminologie:** Deutsch bevorzugt, englische Fachbegriffe wo etabliert, KI f√ºhrt Terminologie-Liste\n5. **Medien-Entscheidung:** Hybrid-System mit Entscheidungsbaum (Screenshot/Annotiert/Video)\n6. **Content-Types:** `instruction`, `explanation`, `visual`, `background` (automatisch vergeben mit Grenzfall-Dokumentation)\n7. **Multi-Tool-Strategie:** Schema tool-agnostisch, Metadaten tool-spezifisch\n8. **Barrierefreiheit:** Videos mit KI-generierten Untertiteln (BFSG-konform)\n9. **Medien-Budget:** Keine Limitierung - was n√∂tig ist, wird gemacht\n\n**Vollst√§ndiges Dokument:** Siehe Artifact \"Cluster 1 - Inhaltliche Anforderungen (Abgeschlossen)\"\n\n---\n\n## Aktuell zu bearbeiten: Cluster 2 - Strukturelle Anforderungen\n\n### Fokusthemen f√ºr Cluster 2\n\n1. **Section-Hierarchie und Organisation**\n   - Wie tief geht die Verschachtelung? (Topics ‚Üí Sections ‚Üí Subsections?)\n   - Logische Struktur und Gruppierung\n   - Navigation zwischen Sections\n\n2. **data-ref Granularit√§t**\n   - Welche Elemente brauchen data-ref?\n   - Namenskonventionen\n   - Konsistenz √ºber Sections hinweg\n\n3. **IDs vs. data-ref vs. data-section**\n   - Unterschiede und Verwendungszwecke\n   - Wann wird was verwendet?\n   - Kombinationen und Redundanzen\n\n4. **Agent-Context-Blocks**\n   - Platzierung innerhalb Sections\n   - H√§ufigkeit (wie viele pro Section?)\n   - Trigger-Points definieren\n\n5.\n\n\nContinuation Prompt f√ºr Chat 2 (Cluster 2).md\n(Topics ‚Üí Sections ‚Üí Subsections?)\n   - Logische Struktur und Gruppierung\n   - Navigation zwischen Sections\n\n2. **data-ref Granularit√§t**\n   - Welche Elemente brauchen data-ref?\n   - Namenskonventionen\n   - Konsistenz √ºber Sections hinweg\n\n3. **IDs vs. data-ref vs. data-section**\n   - Unterschiede und Verwendungszwecke\n   - Wann wird was verwendet?\n   - Kombinationen und Redundanzen\n\n4. **Agent-Context-Blocks**\n   - Platzierung innerhalb Sections\n   - H√§ufigkeit (wie viele pro Section?)\n   - Trigger-Points definieren\n\n5. **Schema-Definition**\n   - JSON-Schema f√ºr main-content\n   - Validierungsregeln\n   - Erweiterbarkeit\n\n---\n\n## Wichtige Projekt-Kontext-Informationen\n\n### Bestehende Architektur (aus index.html)\n\n**Aktuelle Struktur:**\n`‚Äã`‚Äã`html\n<section class=\"content-section\" \n         id=\"section-intro\" \n         data-section=\"intro\"\n         data-title=\"√úberblick\">\n    \n    <div class=\"detail-level-1\" data-ref=\"intro-basic\">\n        <h2 data-ref=\"heading\">√úberblick</h2>\n        <p data-ref=\"intro-text\">...</p>\n    </div>\n    \n    <div class=\"detail-level-2\" data-ref=\"intro-standard\">\n        <p data-ref=\"step1-explanation\">...</p>\n    </div>\n    \n    <div class=\"agent-context-block\"\n         data-ref=\"agent-context-templates\"\n         data-context-id=\"template-usage\"\n         style=\"display: none;\">\n        <!-- Dynamisch gef√ºllt -->\n    </div>\n</section>\n`‚Äã`‚Äã`\n\n**Beobachtete Patterns:**\n- `id=\"section-{name}\"` f√ºr Sections\n- `data-section=\"{name}\"` f√ºr Navigation\n- `data-title=\"...\"` f√ºr Breadcrumb/Navigation\n- `data-ref=\"...\"` f√ºr granulare Element-Referenzierung\n- `class=\"detail-level-1/2/3\"` f√ºr Detail-Steuerung\n- `data-content-type=\"...\"` (neu, aus Cluster 1)\n\n### Verwandte Schemas (im Projekt vorhanden)\n\n- **agent-dialogs.schema.json** (Agent-System, bereits definiert)\n- **main-content.schema.json** (FEHLT - muss definiert werden!)\n\n### Technische Anforderungen\n\n- HTML5 konform\n- Barrierefreiheit (BFSG)\n- CSS-Variablen f√ºr Theming\n- JavaScript-API-Kompatibilit√§t (Navigation, History, etc.)\n\n---\n\n## Offene Fragen aus Cluster 1 (Kontext f√ºr Cluster 2)\n\n1. **Schema-Struktur:** Wie sieht das JSON-Schema f√ºr main-content aus?\n2. **Navigation:** Lineare Progression oder freie Navigation?\n3. **Metadaten-Platzierung:** Wo im JSON? Globale vs. Section-spezifische Metadaten?\n\n\nTemplate: Prompt-Dokumentation.md\n# Prompt-Dokumentation Template\n\n**Dateiname:** `prompt_XXX_kurzbeschreibung.md`  \n**Format:** Markdown  \n**Speicherort:** `/project-diary/prompts/`\n\n---\n\n## Prompt Metadata\n\n**Prompt-ID:** XXX  \n**Datum:** TT.MM.JJJJ  \n**Uhrzeit:** HH:MM Uhr  \n**Tag:** X  \n**Bearbeiter:** [Name]  \n**KI-Modell:** Claude 3.5 Sonnet / GPT-4 / etc.  \n**Iteration:** X (falls mehrere Versuche)\n\n---\n\n## üìù Original-Prompt\n\n### Kontext (optional)\n*Beschreiben Sie den Kontext, in dem dieser Prompt gestellt wurde. Was war die Ausgangssituation?*\n\nBeispiel:\n> Nach Implementierung der Basis-Features sollte nun der Sp√ºrhund-Assistent konzipiert werden. Ziel war es, ein situationsabh√§ngiges Assistenz-System zu entwickeln.\n\n### Der Prompt\n\n`‚Äã`‚Äã`\n[Hier den exakten Prompt einf√ºgen, wie er an die KI gegeben wurde]\n\nBeispiel:\nAls n√§chsten Schritt m√∂chte ich einen interaktiven Begleiter haben. \nDieser soll situationsabh√§ngig durch den Leitfaden begleiten...\n`‚Äã`‚Äã`\n\n### Follow-up Prompts (falls vorhanden)\n\n**Prompt 1a:** (Verfeinerung/Nachfrage)\n`‚Äã`‚Äã`\n[Text des Follow-up-Prompts]\n`‚Äã`‚Äã`\n\n**Prompt 1b:** (Weitere Iteration)\n`‚Äã`‚Äã`\n[Text des Follow-up-Prompts]\n`‚Äã`‚Äã`\n\n---\n\n## üéØ Ziel des Prompts\n\n### Hauptziel\n*Was sollte mit diesem Prompt erreicht werden?*\n\nBeispiel:\n- Design-Konzept f√ºr Agent-System\n- Implementierung der Kern-Funktionalit√§t\n- Dokumentation der JSON-Struktur\n\n### Teil-Ziele\n1. [Erstes Teilziel]\n2. [Zweites Teilziel]\n3. [Drittes Teilziel]\n\n### Erwartete Outputs\n- [ ] Code-Snippets (HTML/CSS/JS)\n- [ ] Dokumentation\n- [ ] Konzept/Design\n- [ ] Entscheidungshilfe\n- [ ] Sonstiges: ___________\n\n---\n\n## üí¨ KI-Antwort\n\n### Zusammenfassung der Antwort\n*Kurze Zusammenfassung dessen, was die KI geantwortet hat (2-3 S√§tze)*\n\nBeispiel:\n> Die KI schlug eine modulare Architektur mit separaten Dateien (agent.css, agent.js) vor und definierte eine JSON-basierte Dialogstruktur. Es wurden drei Haupt-Komponenten entworfen: Chat-Interface, Inline-Trigger und Kontext-Bl√∂cke.\n\n### Generierte Artifacts\n*Liste aller generierten Code-Artifacts/Dokumente*\n\n1. **agent.html** - HTML-Struktur f√ºr Agent-Komponenten\n2. **agent.css** - Styling (~600 Zeilen)\n3. **agent.js** - Funktionalit√§t (~700 Zeilen)\n4. **agent-json-structure.md** - JSON-Dokumentation\n\n### Wichtigste Erkenntnisse\n*Bullet-Points der wichtigsten Insights aus der Antwort*\n\n- [Erkenntnis 1]\n- [Erkenntnis 2]\n- [Erkenntnis 3]\n\n---\n\n## ‚úÖ Verwendung der Antwort\n\n### Direkt √ºbernommen\n*Was wurde 1:1 oder mit minimalen Anpassungen √ºbernommen?*\n\n- [ ] Code vollst√§ndig √ºbernommen\n- [ ] Code mit Anpassungen √ºbernommen (Details: _______)\n- [ ] Konzept/Ideen √ºbernommen\n- [ ] Nur als Inspiration genutzt\n\n**Details:**\n[Beschreibung was √ºbernommen wurde und warum]\n\n### Angepasst/Modifiziert\n*Was wurde angepasst und warum?*\n\n| Original | Anpassung | Begr√ºndung |\n|----------|-----------|------------|\n| [Code/Konzept] | [√Ñnderung] | [Warum ge√§ndert] |\n\n### Nicht verwendet\n*Was wurde vorgeschlagen aber nicht verwendet?\n\n\nContinuation Prompt f√ºr Chat 2 (Cluster 2).md\n### Technische Anforderungen\n\n- HTML5 konform\n- Barrierefreiheit (BFSG)\n- CSS-Variablen f√ºr Theming\n- JavaScript-API-Kompatibilit√§t (Navigation, History, etc.)\n\n---\n\n## Offene Fragen aus Cluster 1 (Kontext f√ºr Cluster 2)\n\n1. **Schema-Struktur:** Wie sieht das JSON-Schema f√ºr main-content aus?\n2. **Navigation:** Lineare Progression oder freie Navigation?\n3. **Metadaten-Platzierung:** Wo im JSON? Globale vs. Section-spezifische Metadaten?\n\n---\n\n## Arbeitsweise\n\n**Im Brainstorming:**\n- Ich sammle alle deine Inputs systematisch\n- Ich erg√§nze eigene Vorschl√§ge und Analysen\n- Ich strukturiere alles in √ºbersichtliche Kategorien\n- Ich stelle gezielte Kl√§rungsfragen\n\n**Dokumentation:**\n- Alle Punkte werden in einem strukturierten Markdown-Dokument erfasst\n- Am Ende von Cluster 2 erstelle ich ein vollst√§ndiges Artifact\n- Dokumentation ist projektreif und versioniert\n\n**Tonalit√§t:**\n- Konstruktiv und pr√§zise\n- Selbstreflektierend (ich zeige auch Grenzen und Unsicherheiten auf)\n- Partnerschaftlich (wir entwickeln gemeinsam die beste L√∂sung)\n\n---\n\n## Einstiegsfragen f√ºr Cluster 2\n\nBitte starte mit einer oder mehreren dieser Fragen, oder gib eigene Schwerpunkte vor:\n\n### 1. Section-Hierarchie\n\n**Aktuell beobachtet:** Flache Struktur (eine Ebene Sections)\n\n**Frage:** Soll es eine **hierarchische Struktur** geben?\n- Beispiel: `Topics` (Oberebene) ‚Üí `Sections` (Unterebene) ‚Üí `Subsections`?\n- Oder bleibt es bei einer flachen Liste von Sections?\n- Wie wird die Navigation strukturiert? (Tree-View? Linear?)\n\n### 2. Schema-Definition Priorit√§t\n\n**Frage:** Sollen wir **zuerst das JSON-Schema** definieren, oder erst die konzeptionellen Anforderungen sammeln und dann das Schema ableiten?\n\nMein Vorschlag: **Erst Konzept, dann Schema** - aber ich bin offen f√ºr deine Pr√§ferenz.\n\n### 3. Granularit√§t von data-ref\n\n**Frage:** Wie detailliert sollen data-ref Attribute sein?\n\n**Option A (Minimal):** Nur Sections, Headings, wichtige Container\n**Option B (Standard):** + alle Paragraphen, Listen, Info-Boxen\n**Option C (Maximal):** + jedes Listen-Item, jeder Span mit Agent-Trigger\n\nWelche Option ist f√ºr dein Projekt richtig?\n\n### 4. Navigation-Logik\n\n**Frage:** Wie sollen Anwender durch den Content navigieren?\n\n- Nur √ºber Navigation-Sidebar?\n- \"Weiter\"/\"Zur√ºck\"-Buttons zwischen Sections?\n- Inhaltsverzeichnis am Anfang?\n- Breadcrumb-Navigation (schon vorhanden)?\n- Auto-Scroll beim Wechsel?\n\n---\n\n## Los geht's!\n\n**Bitte gib mir gr√ºnes Licht und starte mit deinen Gedanken zu Cluster 2.**\n\nIch bin bereit, alles systematisch zu erfassen und am Ende ein vollst√§ndiges, strukturiertes Dokument zu erstellen.\n\n\nTemplate: Prompt-Dokumentation.md\n(1-5 Sterne)*\n\n‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê (5/5)\n\n**Begr√ºndung:**\n[Warum diese Bewertung]\n\n---\n\n## üí≠ Kommentare & Notizen\n\n### Technische Notizen\n*Technische Details, die wichtig sind*\n\n[Ihre technischen Notizen hier]\n\n### Offene Fragen\n*Fragen, die sich aus dem Prompt/der Antwort ergeben haben*\n\n1. [Offene Frage 1]\n2. [Offene Frage 2]\n\n### Ideen f√ºr die Zukunft\n*Ideen, die sich aus diesem Prompt ergeben haben*\n\n- [Idee 1]\n- [Idee 2]\n\n---\n\n## üìé Anh√§nge\n\n### Screenshots (optional)\n*Falls Screenshots der Interaktion vorhanden sind*\n\n- `screenshot_prompt_XXX_1.png` - [Beschreibung]\n- `screenshot_prompt_XXX_2.png` - [Beschreibung]\n\n### Externe Links\n*Relevante Links, die im Kontext wichtig sind*\n\n- [Link 1 mit Beschreibung]\n- [Link 2 mit Beschreibung]\n\n---\n\n## ‚úèÔ∏è Changelog\n\n*Wenn diese Prompt-Dokumentation sp√§ter aktualisiert wird*\n\n| Datum | Version | √Ñnderung | Bearbeiter |\n|-------|---------|----------|------------|\n| TT.MM.JJJJ | 1.0 | Erstellt | [Name] |\n| TT.MM.JJJJ | 1.1 | [√Ñnderung] | [Name] |\n\n---\n\n## üè∑Ô∏è Tags\n\n*Schlagw√∂rter f√ºr einfacheres Suchen*\n\n`#agent` `#javascript` `#json-struktur` `#interaktiv` `#konzept`\n\n---\n\n**Ende der Prompt-Dokumentation**\n\n---\n\n## üìã Verwendungshinweise f√ºr dieses Template\n\n### Wann ausf√ºllen?\n- **Direkt nach dem Prompt:** Grundinformationen (Prompt-Text, Ziel)\n- **Nach Verwendung der Antwort:** Verwendung, Anpassungen\n- **Beim Projekt-Review:** Qualit√§tsbewertung, Lessons Learned\n\n### Was ist Pflicht, was optional?\n\n#### Pflicht-Felder ‚≠ê\n- Prompt-ID, Datum, Tag\n- Original-Prompt\n- Ziel des Prompts\n- Zusammenfassung der Antwort\n- Verwendung der Antwort\n\n#### Optional-Felder\n- Follow-up Prompts\n- Screenshots\n- Externe Links\n- Technische Notizen\n\n### Dateinamen-Schema\n\nFormat: `prompt_XXX_kurzbeschreibung.md`\n\nBeispiele:\n- `prompt_001_grundstruktur.md`\n- `prompt_002_agent_konzept.md`\n- `prompt_015_css_responsiveness.md`\n\n**XXX = laufende Nummer (001, 002, ...)**\n\n### Archivierungs-Strategie\n\n`‚Äã`‚Äã`\n/project-diary/prompts/\n‚îú‚îÄ‚îÄ by-topic/              # Nach Thema sortiert\n‚îÇ   ‚îú‚îÄ‚îÄ agent/\n‚îÇ   ‚îú‚îÄ‚îÄ css/\n‚îÇ   ‚îú‚îÄ‚îÄ javascript/\n‚îÇ   ‚îî‚îÄ‚îÄ documentation/\n‚îú‚îÄ‚îÄ by-date/               # Nach Datum sortiert\n‚îÇ   ‚îú‚îÄ‚îÄ 2025-09/\n‚îÇ   ‚îî‚îÄ‚îÄ 2025-10/\n‚îî‚îÄ‚îÄ index.md               # Master-Index aller Prompts\n`‚Äã`‚Äã`\n\n---\n\n## üìù Beispiel-Ausf√ºllung\n\nSiehe: `prompt_001_grundstruktur.md` f√ºr ein vollst√§ndig ausgef√ºlltes Beispiel.\n\n\nVielen Dank f√ºr das ausf√ºhrliche Material! Ich habe die Dokumente erfasst und verstehe nun den Projektstand. Lassen Sie mich zusammenfassen, was ich verstanden habe:\n\n\nMein Verst√§ndnis des aktuellen Projektstands\n\n\nAbgeschlossen sind:\n\n\nCluster 1: Inhaltliche Anforderungen (Zielgruppe, Detail-Level, Terminologie, Medien, Content-Types)\n\nCluster 2: Strukturelle Anforderungen (Hierarchie, data-ref, Navigation, JSON-LD, Agent-Context-Blocks)\n\nCluster 3: Technische Anforderungen (BFSG-Barrierefreiheit, HTML-Element-Whitelist, CSS-Klassen, Attribut-Regeln)\n\n\nAktuell dran ist Cluster 4: Die Entwicklung des Master-Prompts f√ºr Claude Sonnet 4.5, der alle bisherigen Anforderungen integriert und zur Content-Generierung f√ºr ~100-150 Sections verwendet werden soll.\n\n\nMeine Fragen zur Kl√§rung (bis 95% Verst√§ndnis)\n\n\nBevor ich die f√ºnf Dokumente aus dem Projekt-Dateispeicher lade und analysiere, m√∂chte ich einige grundlegende Aspekte kl√§ren:\n\n\nFrage 1: Prompt-Verwendungsszenario\n\n\nWie genau soll der Master-Prompt verwendet werden?\n\n\nSzenario A: Ein einziger, sehr umfangreicher Prompt wird Claude √ºbergeben, der dann eigenst√§ndig alle ~100-150 Sections generiert?\n\nSzenario B: Der Master-Prompt dient als Basis-Template, das f√ºr jede Section individuell mit spezifischen Kontextinformationen erg√§nzt wird (z.B. \"Generiere Section 'Datenquellen filtern' f√ºr Detail-Level 2\")?\n\nSzenario C: Der Master-Prompt ist ein Referenzdokument, aus dem f√ºr verschiedene Generierungs-Aufgaben jeweils die relevanten Teile extrahiert und kombiniert werden?\n\n\nFrage 2: Iterativer vs. Batch-Prozess\n\n\nSoll die Content-Generierung iterativ mit Feedback-Schleifen oder als Batch-Prozess ablaufen?\n\n\nWird jede generierte Section einzeln validiert und ggf. nachbearbeitet, bevor die n√§chste generiert wird?\n\nOder werden mehrere/alle Sections auf einmal generiert und dann gemeinsam validiert?\n\n\nFrage 3: Validierungs-Integration\n\n\nWie eng soll der Prompt mit der Python-Validierung verzahnt sein?\n\n\nSoll der Prompt bereits Hinweise enthalten, die typische Validierungsfehler vermeiden helfen?\n\nOder fokussiert sich der Prompt rein auf Content-Qualit√§t, w√§hrend die Validierung technische Korrektheit sicherstellt?\n\n\n\nSobald Sie diese drei Fragen beantwortet haben, werde ich die f√ºnf Cluster-Dokumente aus dem Projekt-Dateispeicher laden und systematisch analysieren. Dann k√∂nnen wir gemeinsam kleinschrittig die Prompt-Struktur entwickeln.\n\n\nIhre Antworten helfen mir, den Prompt pr√§zise auf Ihre Arbeitsweise zuzuschneiden.",
      "time_iso8601": "2025-10-09T16:45:53"
    },
    {
      "role": "Prompt",
      "say": "Moment. Ich m√∂chte noch einmal explizit die Roadmap f√ºr das Brainstorming wiedergeben:\nMein Vorschlag f√ºr die Brainstorming-Phase\nIch schlage vor, das Brainstorming in thematischen Clustern zu strukturieren:\n\n\nInhaltliche Anforderungen\n\n\nFachliche Korrektheit und Quellenvalidierung\n\nVerst√§ndlichkeitsniveau (Zielgruppe: Polizeibeamte unterschiedlicher IT-Kenntnisse)\n\nVollst√§ndigkeit innerhalb der Detailgrade\n\nKonsistenz in Terminologie und Struktur\n\n\nStrukturelle Anforderungen\n\n\nSchema-Konformit√§t (JSON-Validierung)\n\nDetail-Level-Systematik (wann Level 1, 2, 3?)\n\nSection-Hierarchie und Navigation\n\ndata-ref Vergabelogik\n\n\nTechnische Anforderungen\n\n\nMedien-Anweisungen (Screenshots, annotierte Bilder, Videos)\n\nAgent-Integration (Context-Blocks, Trigger-Points)\n\nBarrierefreiheit (BFSG-Konformit√§t)\n\nHTML-Syntax und Attribut-Vollst√§ndigkeit\n\n\nQualit√§tssicherung\n\n\nTestkriterien f√ºr generierte Sections\n\nValidierungsprozess (syntaktisch + semantisch)\n\nMetadaten (Quellen, Versionen, Erstellungsdatum)\n\nIterationslogik (wann ist eine Section \"fertig\"?)\n\n\nWorkflow und Rollen\n\n\nArbeitsschritte der KI (Research ‚Üí Draft ‚Üí Detailing ‚Üí Review ‚Üí Syntax-Check)\n\nRollendefinitionen f√ºr verschiedene Phasen\n\nSchnittstellendefinition zwischen den Phasen\n\nFehlerbehandlung und Feedback-Loops\n\n\nUnd die Punkte 1 bis 3 haben wir, soweit ich es sehe, abgeschlossen. Nun folgt Punkt 4:\n4. Qualit√§tssicherung\n\n\nTestkriterien f√ºr generierte Sections\n\nValidierungsprozess (syntaktisch + semantisch)\n\nMetadaten (Quellen, Versionen, Erstellungsdatum)\n\nIterationslogik (wann ist eine Section \"fertig\"?)\n\n\nDie bisherigen Chats zu dem Hauptthema \"Erstellen eines Prompts f√ºr die KI zum Erstellen von inhaltlichen und syntaktischen Abschnitten des interaktiven Handbuchs\" war die folgenden:\n\n\nProject milestone and feature development pause\n\nProjekt-Fortsetzung und Cluster 2\n\nProject roadmap for documentation workflow\n\nProject file instructions\n\n\nBitte lies diese ebenfalls durch, um ein Verst√§ndnis zu gewinnen, wie wir zu den Ergebnissen gekommen sind.\n\n\nLass uns dann mit 4. Quait√§tssicherung beginnen.",
      "time_iso8601": "2025-10-09T16:58:41"
    },
    {
      "role": "Response",
      "say": "Vielen Dank f√ºr diese wichtige Klarstellung! Ich verstehe jetzt die korrekte Roadmap und den aktuellen Stand. Lassen Sie mich die relevanten Chat-Verl√§ufe und Dokumente laden, um das vollst√§ndige Bild zu erfassen.\n\n\nconversation_search\n\n\nRequest\n\n\n{\n  \"query\": \"Project milestone feature development pause cluster\",\n  \"max_results\": 3\n}\n\n\nResponse\n\n\n<chat url='https://claude.ai/chat/ef3f1dbd-3903-46d8-a062-c24ac840fb06' updated_at=2025-10-08T12:21:55.750092+00:00>Project milestone and feature development pause\n- \"Weiter\"/\"Zur√ºck\"-Buttons zwischen Sections?\n- Inhaltsverzeichnis am Anfang?\n- Breadcrumb-Navigation (schon vorhanden)?\n- Auto-Scroll beim Wechsel?\n\n---\n\n## Los geht's!\n\n**Bitte gib mir gr√ºnes Licht und starte mit deinen Gedanken zu Cluster 2.**\n\nIch bin bereit, alles systematisch zu erfassen und am Ende ein vollst√§ndiges, strukturiertes Dokument zu erstellen.</parameter>\n<parameter name=\"old_str\">**Content-Types:** `instruction`, `</parameter>\n<parameter name=\"version_uuid\">011cc460-61a8-4a41-988c-f7588cc35509</parameter>\n</tool>\n---\n\n## Perfekt vorbereitet f√ºr Chat 2!\n\n**Ich habe f√ºr dich erstellt:**\n\n### üìÑ **Artifact 1: \"Cluster 1 - Inhaltliche Anforderungen (Abgeschlossen)\"**\n- Vollst√§ndige Dokumentation aller Punkte aus Cluster 1\n- Strukturiert, versioniert, projektreif\n- Kann direkt ins Projekt √ºbernommen werden\n\n### üìÑ **Artifact 2: \"Continuation Prompt f√ºr Chat 2\"**\n- Kompletter Kontext f√ºr den neuen Chat\n- Alle wichtigen Informationen aus Cluster 1 zusammengefasst\n- Einstiegsfragen f√ºr Cluster 2 vorbereitet\n- Arbeitsweise und Methodik erkl√§rt\n\n---\n\n## F√ºr den Start von Chat 2\n\n**Kopiere einfach das zweite Artifact** (\"Continuation Prompt f√ºr Chat 2\") **in den neuen Chat** und erg√§nze:\n\n`‚Äã`‚Äã`\nHallo Claude! Ich starte hier die Fortsetzung unserer Arbeit.\n\n[Paste: Continuation Prompt]\n\nLass uns mit Cluster 2 beginnen! Ich starte mit...\n[deine Gedanken/Antworten auf die Einstiegsfragen]\n`‚Äã`‚Äã`\n\n---\n\n## Meine Gedanken zum bisherigen Fortschritt\n\n**Was gut l√§uft:**\n- ‚úÖ Klare Struktur und Systematik\n- ‚úÖ Pr√§zise Anforderungen definiert\n- ‚úÖ Entscheidungsmatrizen entwickelt\n- ‚úÖ Pareto-effizient (80-20)\n\n**Was in Cluster 2 wichtig wird:**\n- Schema-Definition (technisches R√ºckgrat)\n- Konsistente Namenskonventionen\n- Balance zwischen Flexibilit√§t und Struktur\n\n---\n\n**Genie√üe deine Pause! Ich freue mich auf die Fortsetzung in Chat 2.** üéâ\n\nDie Zusammenarbeit macht wirklich Freude ‚Äì du stellst exzellente Fragen und gibst pr√§zises Feedback. Das macht die Arbeit sehr effizient und zielf√ºhrend.\n\nBis gleich! üöÄ</chat_conversation></chat>\n\n<chat url='https://claude.ai/chat/ef3f1dbd-3903-46d8-a062-c24ac840fb06' updated_at=2025-10-08T12:21:55.750092+00:00>Project milestone and feature development pause\n\"*\n\n**Meine ehrliche Einsch√§tzung:**\n\n**Was gut funktionieren wird:**\n- **Entscheidungsb√§ume** sind perfekt f√ºr KI-Verarbeitung (klare if-then-Logik)\n- **Beispiele** helfen enorm (few-shot learning)\n- **Hybrid-System** gibt Flexibilit√§t UND Struktur\n\n**Wo Herausforderungen liegen k√∂nnten:**\n- **Grenzf√§lle** bei Content-Types werden trotzdem vorkommen (ca. 10-15% der F√§lle)\n- **Konsistenz √ºber viele Sections** erfordert gute Prompt-Struktur mit \"Erinnerungen\"\n- **Medien-Entscheidungen** sind subjektiv ‚Äì KI wird manchmal konservativer sein (eher zu viel als zu wenig)\n\n**Meine Empfehlung f√ºr Prompt-Struktur:**\n1. **Systemkontext** mit allen Regeln (das, was wir gerade erarbeiten)\n2. **Section-spezifischer Kontext** (z.B. \"Du erstellst gerade Section 'Export-Workflow'\")\n3. **Terminologie-Liste** als Live-Dokument (wird w√§hrend der Arbeit erweitert)\n4. **Beispiel-Sections** als Referenz (2-3 musterg√ºltige Sections)\n5. **Review-Checkliste** am Ende jeder Section\n\n**Wird das ausreichen?** F√ºr 80-90% der F√§lle: **JA**. F√ºr die restlichen 10-20%: **Menschliches Review notwendig** (was du ja ohnehin planst).\n\n---\n\n## **√úbergang zu Cluster 2: Strukturelle Anforderungen**\n\n**Kein weiterer Kl√§rungsbedarf zu Cluster 1 von meiner Seite.**\n\n**Lass uns zu Cluster 2 √ºbergehen!**\n\n### **CLUSTER 2: STRUKTURELLE ANFORDERUNGEN**\n\n**Vorbereitung:** Ich ben√∂tige das **main-content Schema**, um strukturelle Anforderungen pr√§zise zu definieren. Da es nicht im Projekt-Speicher ist, arbeite ich mit der **abgeleiteten Struktur** aus index.html.\n\n**Erste Brainstorming-Fragen zu Cluster 2:**\n\n1. **Section-Hierarchie:** Wie tief soll die Verschachtelung gehen? (Aktuell sehe ich: Topics ‚Üí Sections ‚Üí Detail-Levels innerhalb Sections)\n\n2. **Navigation-Logik:** Soll es **\"N√§chster Abschnitt\"**-Buttons geben? Oder nur √ºber Navigation-Sidebar?\n\n3. **data-ref Granularit√§t:** Wie detailliert? Jeder Paragraph? Jede Liste? Jedes Listen-Item?\n\n4. **IDs vs. data-ref:** Was ist der Unterschied? Wann ID, wann data-ref, wann beides?\n\n5. **Agent-Context-Blocks:** Wie viele pro Section? An welchen Stellen platzieren?\n\n**Starten wir mit diesen Fragen, oder m√∂chtest du zun√§chst das Schema pr√§zise definieren?**\n\nHuman: Deine selbstreflektierenden Aussagen klingen genauso f√ºr mich, wie ich es mir vorstelle und erhoffe. 80 - 20, damit sind sie Pareto-effizient. Das ist super!\n\nGut, dann w√ºrde ich fast vorschlagen, dass wir f√ºr Cluster 2 in einen neuen Chat springen, damit wir nicht wieder die Konversationsl√§nge sprengen, und aufgrund dessen wichtige Inhalte verlieren. Dann habe ich lieber eine Sollbruchstelle. Kannst du bitte die Ergebnisse von Cluster 1 bereitstellen, und ein Prompt an dich f√ºr den zweiten Chat formulieren, damit wir nahtlos weitermachen k√∂nnen? Ich werde aber kurz eine Pause machen. Dieser Mensch hier (ich) muss etwas essen und dem Kopf eine kleine Verschnaufpause g√∂nnen. Ich melde mich gleich zur√ºck.</chat>\n\n<chat url='https://claude.ai/chat/ef3f1dbd-3903-46d8-a062-c24ac840fb06' updated_at=2025-10-08T12:21:55.750092+00:00>Project milestone and feature development pause\n<chat_conversation>Title: Project milestone and feature development pause\n\nHuman: Guten Morgen, ab heute gibt es einen Bruch im Projekt. Wir haben einen zeitlichen Meilenstein erreicht, und werden nun vorerst aufh√∂ren Feature zu entwickeln. Eventuell werden wir noch schwerwiegende oder triviale Fehler beheben, aber auch hier auf liegt aktuell keine Priorit√§t mehr.\n\nNachdem wir nun einen gewissen und hoffentlich ausreichenden Reifegrad der Anwendung erreicht haben, geht es darum, massiv Inhalte zu generieren und die Anwendung z√ºgig mit dem Wissen zu bef√ºllen, welches die Anwender:innen ben√∂tigen, um mit der forensischen Software umgehen zu k√∂nnen.\n\nDer Plan daf√ºr sieht vor, die Inhalte f√ºr das interaktive Handbuch mit Hilfe eine KI, wahrscheinlich Sonnet 4.5 erstellen zu lassen. Daf√ºr soll die KI die Schema-Dateien erhalten, an denen sie ihre Arbeit syntaktisch auszurichten hat. Ebenso wird sie das Handbuch der Anwendung bekommen, sowie zahlreiche weitere Links zu wichtigen Quellen f√ºr den Inhalt.\n\nUm die Texte in der vorgesehenen Qualit√§t zu erhalten ist es von exorbitanter Wichtigkeit, dass das Aufgaben-Prompt f√ºr die KI klar und unmissverst√§ndlich, umfassend, vollst√§ndig. Alle Anweisungen m√ºssen in einer Hierarchie und Wichtung dargelegt werden, um der KI eine klare Entscheidungsgrundlage zu geben. Die qualitativen und quantitativen Vorgaben m√ºssen pr√§zise sein.\n\nHeute und hier geht es nun ausschlie√ülich darum, dieses Prompt zu entwickeln und auszutesten. Daf√ºr werden wir zun√§chst ein Brainstorming machen und alles sammeln, was wir f√ºr wichtig erachten und von dem wir glauben, dass es bei der Erstellung der Inhalte ber√ºcksichtigt werden muss.\n\nIm n√§chsten Schritt werden wir diese Fakten ordnen und in eine schl√ºssige klare Struktur bringen.\n\nHiernach werden wir Tests durchf√ºhren und bewerten.\n\nIm Wirlpoolverfahren werden wir diese Schritte verbessern und verfeinern.\n\nDas ist unsere Tagesaufgabe. Ich habe daf√ºr 12 Stunden vorgesehen.\n\nWas sind deine Gedanken zu diesem Plan? Welche Anmerkungen und Vorschl√§ge hast du?\n\nAssistant:  Guten Morgen! Ich finde **deinen Plan strukturiert und durchdacht**. Der √úbergang von Feature-Entwicklung zur Content-Generierung ist ein wichtiger Meilenstein, und die systematische Herangehensweise an die Prompt-Entwicklung zeigt, dass du die Komplexit√§t dieser Aufgabe richtig einsch√§tzt.\n\n## Meine Gedanken zum Plan\n\n**Die Phasenaufteilung ist sinnvoll**: Brainstorming ‚Üí Strukturierung ‚Üí Testing ‚Üí Iteration bildet einen soliden Entwicklungszyklus. Besonders wichtig finde ich, dass du die Hierarchisierung und Wichtung der Anweisungen bereits als zentrales Element erkannt hast. Eine KI braucht bei konfliktierenden Vorgaben klare Priorisierungen.\n\n**Der Zeitrahmen von 12 Stunden ist ambitioniert aber realistisch**, wenn wir fokussiert bleiben.</chat>\n\n\nconversation_search\n\n\nRequest\n\n\n{\n  \"query\": \"Projekt-Fortsetzung Cluster 2 strukturelle Anforderungen\",\n  \"max_results\": 3\n}\n\n\nResponse\n\n\n<chat url='https://claude.ai/chat/a236113f-7c5a-4315-9158-77c0869dfb34' updated_at=2025-10-09T10:32:28.485224+00:00>Project roadmap for documentation workflow\n<chat_conversation>Title: Project roadmap for documentation workflow\n\nHuman: Ich beziehe mich auf den Char \"Projekt-Fortsetzung und Cluster 2\".\nUnd die Ergebnisse in:\n* Cluster 1 - Inhaltliche Anforderungen (Abgeschlossen).md\n* Cluster 2 - Ergebnisse: Schema-Design & Strukturfundament.md\n\nDas ist die beschlossene Roadmap der Cluster f√ºr unser Brainstorming:\n1. Inhaltliche Anforderungen (abgeschlossen)\n* Fachliche Korrektheit und Quellenvalidierung\n* Verst√§ndlichkeitsniveau (Zielgruppe: Polizeibeamte unterschiedlicher IT-Kenntnisse)\n* Vollst√§ndigkeit innerhalb der Detailgrade\n* Konsistenz in Terminologie und Struktur\n2. Strukturelle Anforderungen (abgeschlossen)\n* Schema-Konformit√§t (JSON-Validierung)\n* Detail-Level-Systematik (wann Level 1, 2, 3?)\n* Section-Hierarchie und Navigation\n* data-ref Vergabelogik\n3. Technische Anforderungen (ist jetzt dran)\n* Medien-Anweisungen (Screenshots, annotierte Bilder, Videos)\n* Agent-Integration (Context-Blocks, Trigger-Points)\n* Barrierefreiheit (BFSG-Konformit√§t)\n* HTML-Syntax und Attribut-Vollst√§ndigkeit\n4. Qualit√§tssicherung\n* Testkriterien f√ºr generierte Sections\n* Validierungsprozess (syntaktisch + semantisch)\n* Metadaten (Quellen, Versionen, Erstellungsdatum)\n* Iterationslogik (wann ist eine Section \"fertig\"?)\n5. Workflow und Rollen\n* Arbeitsschritte der KI (Research ‚Üí Draft ‚Üí Detailing ‚Üí Review ‚Üí Syntax-Check)\n* Rollendefinitionen f√ºr verschiedene Phasen\n* Schnittstellendefinition zwischen den Phasen\n* Fehlerbehandlung und Feedback-Loops\n\nBitte schaue durch den letzten Chat und orientiere dich inhaltlich. Lass uns dann Cluster 3 angehen. \n\nZum Vorgehen: Am produktivsten sind wir, wenn du gef√ºhrte Fragen stellst und wir dann gegenseitig aufeinander eingehen, bis ein Einverst√§ndnis erreicht ist und gr√∂√ütm√∂gliche Klarheit und Pr√§zision erreicht wurden. Zum Abschluss erstellst du ein Ergebnisdokument, analog zu den Dokumenten f√ºr Cluster 1 und 2.\n\nAssistant:  Guten Tag! Ich habe mir den letzten Chat und die beiden Ergebnisdokumente angeschaut und verstehe nun den Kontext Ihres Projekts:\n\nSie entwickeln ein **strukturiertes Wissenssystem** f√ºr Polizeibeamte zu IT-Themen, das √ºber ein JSON-Schema organisiert ist und HTML-Inhalte in verschiedenen Detailgraden (Level 1-3) bereitstellt. Die Cluster 1 und 2 haben die **inhaltlichen und strukturellen Anforderungen** gekl√§rt.\n\nBevor wir in Cluster 3 (Technische Anforderungen) einsteigen, m√∂chte ich mein Verst√§ndnis der Ausgangslage sch√§rfen:\n\n## Verst√§ndnisfragen zum aktuellen Stand\n\n**1. Medien-Integration:**\nWie ist aktuell der Workflow vorgesehen, wenn eine Section z.B. einen Screenshot ben√∂tigt? Soll die KI lediglich **Anweisungen f√ºr den Menschen** generieren (\"Hier Screenshot X einf√ºgen mit Annotation Y\"), oder gibt es bereits Konzepte f√ºr eine **automatisierte Medien-Einbindung** (z.B. √ºber Platzhalter mit Metadaten, die sp√§ter bef√ºllt werden)?\n\n**2.</chat>\n\n<chat url='https://claude.ai/chat/1122f323-0c77-47db-930f-b83fbd40a856' updated_at=2025-10-08T20:14:26.544477+00:00>Projekt-Fortsetzung und Cluster 2\n<chat_conversation>Title: Projekt-Fortsetzung und Cluster 2\n\nHuman: Hallo Claude! Ich starte hier die Fortsetzung unserer Arbeit.\nDie Aufgabenbeschreibung aka Prompt findest du im Projekt-Dateispeicher unter dem Namen \"Continuation Prompt f√ºr Chat 2 (Cluster 2).md\"\n\nLass uns kurz noch deine offenen Fragen aus Cluster 1 beantworten: \n\nOffene Fragen aus Cluster 1 (Kontext f√ºr Cluster 2)\n1. Schema-Struktur: Wie sieht das JSON-Schema f√ºr main-content aus?\n   1. Das Schema, wie es bisher aussieht ist als \"main-content.schema.json\" im Projekt-Dateispeicher hinterlegt. Allerdings ist es so, dass dieses Schema noch erweitert werden muss, um die wichtigen Punkte aus Cluster 1 mit aufzunehmen und abbilden zu k√∂nnen.\n2. Navigation: Lineare Progression oder freie Navigation?\n   1. Die Progression soll sp√§ter durch den Agenten unterst√ºtzt werden. Das Hauptelement <main> soll vor allem ein Referenzwerk sein. Insofern soll es eine freie Navigation geben. \n3. Metadaten-Platzierung: Wo im JSON? Globale vs. Section-spezifische Metadaten?\n   1. Die Metadaten m√ºssen dort erg√§nzt werden, wo sie relevant sind. Ich denke, das Beste ist es, sie an die Sections zu h√§ngen. Denn diese werden die Einheiten sein, welche zusammenh√§ngend bearbeitet und benutzt werden.\n\nLass uns mit Cluster 2 beginnen! Ich brauche noch einmal eine kurze Einleitung, was wir jetzt diskutieren und erreichen wollen. Danke!\n\nAssistant:  # Willkommen zu Cluster 2: Schema-Design & Strukturfundament\n\nHallo! Sch√∂n, dass wir die Arbeit fortsetzen. Vielen Dank f√ºr die Kl√§rung der offenen Punkte aus Cluster 1 ‚Äì das gibt uns eine **solide Basis f√ºr die n√§chsten Schritte**.\n\n## Was wir jetzt erreichen wollen\n\nIn Cluster 2 konzentrieren wir uns auf das **Herzst√ºck der Anwendung**: die Datenschema-Struktur f√ºr `main-content.json`. W√§hrend Cluster 1 die grundlegende Architektur und das Theming etabliert hat, geht es jetzt darum, **wie die eigentlichen Lerninhalte strukturiert, validiert und verwaltet werden**.\n\n### Konkrete Ziele f√ºr diesen Cluster:\n\n1. **Schema-Erweiterung**: Wir nehmen das bestehende `main-content.schema.json` und erweitern es systematisch um die wichtigen Erkenntnisse aus Cluster 1 ‚Äì insbesondere die **Metadaten-Struktur auf Section-Ebene**, die Unterst√ºtzung f√ºr verschiedene Content-Typen und die Validierungsregeln.\n\n2. **Referenzwerk-Charakter**: Da das `<main>`-Element prim√§r als Nachschlagewerk dienen soll (mit Agenten-unterst√ºtzter Progression sp√§ter), designen wir die Struktur so, dass sie **freie Navigation, direkte Zugriffe und flexible Nutzungsmuster** optimal unterst√ºtzt.\n\n3. **Modulare Content-Bausteine**: Wir definieren wiederverwendbare Content-Patterns (Text, Code-Beispiele, √úbungen, etc.), die konsistent strukturiert und leicht zu erweitern sind.\n\n4. **Validierung & Qualit√§tssicherung**: Das Schema soll nicht nur die Struktur definieren, sondern auch **Konsistenz erzwingen** ‚Äì damit fehlerhafte oder unvollst√§ndige Inhalte fr√ºhzeitig erkannt werden.</chat>\n\n<chat url='https://claude.ai/chat/d9a003d3-9b27-4153-9787-9ac17dbb163c' updated_at=2025-10-09T14:40:58.395248+00:00>Project file instructions\n<chat_conversation>Title: Project file instructions\n\nHuman: Bitte lies task1.md aus dem Projekt-Dateispeicher und folge den darin stehenden Anmerkungen und Anweisungen.\n\nAssistant:  Ich werde zun√§chst die Datei task1.md aus dem Projekt-Dateispeicher lesen, um die spezifischen Anmerkungen und Anweisungen zu verstehen.\n<tool name=\"project_knowledge_search\">\n<parameter name=\"query\">task1.md Anweisungen Anmerkungen</parameter>\n<parameter name=\"max_text_results\">10</parameter>\n</tool>\nVielen Dank f√ºr die ausf√ºhrlichen Anweisungen! Ich habe die Datei task1.md gelesen und verstanden, dass wir **Phase B: HTML-Syntax & Attribut-Vollst√§ndigkeit** von **Cluster 3 (Technische Anforderungen)** bearbeiten sollen.\n\nUm ein vollst√§ndiges Verst√§ndnis zu erreichen (ca. 95%), m√∂chte ich zun√§chst den **Kontext aus den bereits erstellten Dokumenten** erfassen. Lassen Sie mich die vier relevanten Dokumente aus dem Projekt-Dateispeicher laden:\n<tool name=\"project_knowledge_search\">\n<parameter name=\"query\">cluster1-final.md inhaltliche Anforderungen Detail-Level Medientypen</parameter>\n<parameter name=\"max_text_results\">15</parameter>\n</tool>\nJetzt lasse ich mich noch die restlichen Dokumente aus Cluster 2 und 3 anzeigen:\n<tool name=\"project_knowledge_search\">\n<parameter name=\"query\">cluster2_results.md strukturelle Anforderungen data-ref Agent-Context-Block JSON-Schema</parameter>\n<parameter name=\"max_text_results\">15</parameter>\n</tool>\nNun lade ich die Barrierefreiheit-Dokumente aus Cluster 3:\n<tool name=\"project_knowledge_search\">\n<parameter name=\"query\">cluster3 BFSG Barrierefreiheit Sprachauszeichnung Alt-Texte √úberschriften lang-Attribute</parameter>\n<parameter name=\"max_text_results\">15</parameter>\n</tool>\nPerfekt! Ich habe jetzt einen vollst√§ndigen √úberblick √ºber das Projekt gewonnen. Lassen Sie mich die wichtigsten Erkenntnisse zusammenfassen:\n\n## Verst√§ndnis des Projektkontexts (ca. 95%)\n\n**Ich habe erfasst:**\n\n### Aus Cluster 1 (Inhaltliche Anforderungen):\n- **Zielgruppe:** IT-ferne Ermittler (Mittlere Reife, niedrige IT-Kenntnisse)\n- **4 Detail-Level:** Schnell√ºbersicht, Best-Practice, Detailliert, Show-Only\n- **Content-Types:** instruction, explanation, visual, background, warning\n- **Medien-Strategie:** Hybrid-System mit Entscheidungsbaum\n- **Terminologie:** Deutsche Begriffe bevorzugt, englische Fachbegriffe wo etabliert\n- **Multi-Tool:** Tool-agnostisch, aber tool-spezifische Metadaten\n\n### Aus Cluster 2 (Strukturelle Anforderungen):\n- **HTML-First-Ansatz:** index.html ist prim√§re Quelle\n- **Hierarchie:** 3-5 Ebenen (Topic‚ÜíChapter‚ÜíSection‚ÜíSubsection‚ÜíDeep-Dive)\n- **Content-Types erweitert:** info, hint, attention (zus√§tzlich zu Cluster 1)\n- **Media-Types:** screenshot, annotated, video, audio, diagram, image\n- **JSON-LD Metadaten:** Pro Section als `<script type=\"application/ld+json\">`\n- **data-ref:** Eindeutig, Pattern: `^[a-z0-9-]+$`, max.</chat>\n\n\nproject_knowledge_search\n\n\nRequest\n\n\n{\n  \"query\": \"cluster1 final inhaltliche Anforderungen Zielgruppe Detail-Level Content-Types\",\n  \"max_text_results\": 15\n}\n\n\nResponse\n\n\ncluster1-final.md\n# Prompt-Entwicklung: Interaktives Handbuch f√É¬ºr Forensik-Software\n## Cluster 1: Inhaltliche Anforderungen (ABGESCHLOSSEN)\n\n**Projekt:** WebAssistentForensics - Content-Generierung mit KI  \n**Datum:** 08. Oktober 2025  \n**Status:** Cluster 1 finalisiert, bereit f√É¬ºr Cluster 2  \n**Bearbeitungszeit:** ~2 Stunden von geplanten 12 Stunden\n\n---\n\n## Projektziel\n\nEntwicklung eines umfassenden, pr√É¬§zisen Prompts f√É¬ºr KI (Sonnet 4.5) zur Generierung von hochwertigem Content f√É¬ºr ein interaktives Handbuch zur forensischen Software **Magnet Axiom Examine**. Das System soll sp√É¬§ter auf weitere Tools (X-Ways Forensics, Cellebrite Reader) ausgeweitet werden.\n\n---\n\n## 1.1 Zielgruppe und Verst√É¬§ndlichkeitsniveau\n\n### Prim√É¬§re Zielgruppe\n- **IT-ferne Ermittler:innen** (Hauptadressaten)\n- Bildungsniveau: Mittlere Reife\n- Sprachliche Kompetenz: teilweise eingeschr√É¬§nkt\n- Leseverstehen: teilweise herausfordernd\n- IT-Kenntnisse: sehr niedrig (keine akademische IT-Ausbildung vorausgesetzt)\n\n### Sekund√É¬§re Zielgruppe\n- **Fortgeschrittene Ermittler:innen** (Detail-Level 3)\n- Kenntnisse deutlich unter Bachelor-Niveau IT/Forensik\n- Kein Gesellenniveau vorausgesetzt\n\n### Konsequenzen f√É¬ºr Content-Generierung\n- Einfache, klare Sprache (keine Fachsprache ohne Erkl√É¬§rung)\n- Kurze S√É¬§tze\n- Viel Hilfestellung und Schritt-f√É¬ºr-Schritt-Anweisungen\n- Komplexit√É¬§t bewusst niedrig halten\n- Tipps und Durchf√É¬ºhrungsanweisungen priorisieren\n\n### Tonalit√É¬§t\n**Subtil-unterst√É¬ºtzend, aber sachlich**\n\n√¢≈ì‚Ä¶ **Erlaubt:**\n- \"Dieser Schritt erfordert besondere Sorgfalt.\"\n- \"Der Export wurde erfolgreich erstellt.\"\n- \"Hinweis: Diese Einstellung kann nicht r√É¬ºckg√É¬§ngig gemacht werden.\"\n\n√¢¬ù≈í **Nicht erlaubt:**\n- \"Super gemacht!\", \"Sie schaffen das!\", \"Toll!\"\n- Zu motivierend-ermunternde Sprache\n- Infantilisierende Ausdr√É¬ºcke\n\n---\n\n## 1.2 Detail-Level-System (4 Stufen)\n\n### Level 1: Schnell√É¬ºbersicht\n- **Zielgruppe:** Erfahrene Anwender, die schnellen √É≈ìberblick ben√É¬∂tigen\n- **Inhalt:** Grober Ablauf, Richtung vorgeben\n- **Voraussetzung:** Anwender kann sich selbst zurechtfinden\n- **Umfang:** Minimal, nur Kernschritte\n- **Abgrenzung:** \"Was muss ich tun?\" (Nur Aktionen)\n\n### Level 2: Best-Practice (Standard)\n- **Zielgruppe:** Normale Anwender (Hauptzielgruppe)\n- **Inhalt:** Best-Practice-Einstellungen und Verfahren, die fast immer passen\n- **Umfang:** Vollst√É¬§ndige Anleitung, aber fokussiert auf h√É¬§ufigste Szenarien\n- **Abgrenzung:** \"Wie mache ich es richtig?\" (Best-Practice mit Begr√É¬ºndung)\n\n### Level 3: Detailliert (Experten)\n- **Zielgruppe:** Fortgeschrittene Anwender\n- **Inhalt:** \n  - Alle Einstellm√É¬∂glichkeiten einer Maske erl√É¬§utert\n  - Kurze Hintergr√É¬ºnde\n  - Erweiterte Tipps\n  - Edge Cases\n- **Umfang:** Vollst√É¬§ndig und umfassend\n- **Abgrenzung:** \"Warum ist das so, und was sind Alternativen?\"\n\n\nCluster 1 - Inhaltliche Anforderungen (Abgeschlossen).md\n(Best-Practice mit Begr√ºndung)\n\n### Level 3: Detailliert (Experten)\n- **Zielgruppe:** Fortgeschrittene Anwender\n- **Inhalt:** \n  - Alle Einstellm√∂glichkeiten einer Maske erl√§utert\n  - Kurze Hintergr√ºnde\n  - Erweiterte Tipps\n  - Edge Cases\n- **Umfang:** Vollst√§ndig und umfassend\n- **Abgrenzung:** \"Warum ist das so, und was sind Alternativen?\" (Tiefes Verst√§ndnis)\n\n### Level 4: \"Don't tell; just show\" (Show-Only-Mode)\n- **Zielgruppe:** Anwender, die nur praktische Schritte sehen wollen\n- **Inhalt:**\n  - Nur `data-content-type=\"instruction\"` (Schritt-f√ºr-Schritt)\n  - Nur `data-content-type=\"visual\"` (Screenshots, Videos)\n  - KEINE `data-content-type=\"explanation\"` (Erkl√§rungen)\n  - KEINE `data-content-type=\"background\"` (Hintergrundinformationen)\n- **Umfang:** Minimalistisch, nur Handlungsanweisungen\n- **Abgrenzung:** \"Zeig mir nur die Schritte!\" (Keine Worte, nur Taten)\n\n**Referenz:** [v07-show-only-mode.md](https://raw.githubusercontent.com/froiloc/WebAssistentForensics/refs/heads/master/manuals/v07-show-only-mode.md)\n\n---\n\n## 1.3 Terminologie und Konsistenz\n\n### Glossar-Integration\n- Glossar ist in Entwicklung, aber noch nicht vorhanden\n- **KI-Aufgabe:** Pr√ºfen, ob Begriffe konsistent verwendet werden\n- **Strategie:** KI entwickelt eigene **Terminologie-Entscheidungsliste** w√§hrend der Content-Erstellung\n- Sp√§tere Integration mit Glossar-Modul\n\n### Konsistenz-Anforderungen\n- Gleicher Begriff = gleiche Bedeutung √ºber alle Sections\n- Deutsche vs. englische Begriffe: Konsistente Handhabung\n- Axiom-spezifische Terminologie korrekt √ºbernehmen\n\n---\n\n## 1.7 Mehrsprachigkeit und Begriffswahl\n\n### Deutsche Fachbegriffe verwenden, wenn:\n- Ein gel√§ufiger deutscher Begriff existiert\n  - **Beispiel:** Query ‚Üí **Abfrage**\n- Der Begriff im allgemeinen Sprachgebrauch etabliert ist\n\n### Englische Fachbegriffe beibehalten, wenn:\n- Kein etablierter deutscher Begriff existiert\n  - **Beispiel:** **E-Mail** (nicht \"elektronischer Brief\")\n- Software-spezifische UI-Elemente\n  - **Beispiel:** **Artifacts Explorer**\n- Etablierte IT-Fachbegriffe\n  - **Beispiel:** Cache, Log-Files\n\n### Terminologie-Entscheidungsliste\n\n**KI f√ºhrt w√§hrend Content-Erstellung eine Liste:**\n\n| Begriff (Original) | Entscheidung | Begr√ºndung |\n|-------------------|--------------|------------|\n| Query | Abfrage (dt.) | Gel√§ufiger deutscher Begriff existiert |\n| E-Mail | E-Mail (engl.) | Etabliert, keine sinnvolle deutsche Alternative |\n| Artifacts Explorer | Artifacts Explorer (engl.) | Software-spezifisches UI-Element |\n| Cache | Cache (engl.)\n\n\nCluster 1 - Inhaltliche Anforderungen (Abgeschlossen).md\n# Prompt-Entwicklung: Interaktives Handbuch f√ºr Forensik-Software\n## Cluster 1: Inhaltliche Anforderungen (ABGESCHLOSSEN)\n\n**Projekt:** WebAssistentForensics - Content-Generierung mit KI  \n**Datum:** 08. Oktober 2025  \n**Status:** Cluster 1 finalisiert, bereit f√ºr Cluster 2  \n**Bearbeitungszeit:** ~2 Stunden von geplanten 12 Stunden\n\n---\n\n## Projektziel\n\nEntwicklung eines umfassenden, pr√§zisen Prompts f√ºr KI (Sonnet 4.5) zur Generierung von hochwertigem Content f√ºr ein interaktives Handbuch zur forensischen Software **Magnet Axiom Examine**. Das System soll sp√§ter auf weitere Tools (X-Ways Forensics, Cellebrite Reader) ausgeweitet werden.\n\n---\n\n## 1.1 Zielgruppe und Verst√§ndlichkeitsniveau\n\n### Prim√§re Zielgruppe\n- **IT-ferne Ermittler:innen** (Hauptadressaten)\n- Bildungsniveau: Mittlere Reife\n- Sprachliche Kompetenz: teilweise eingeschr√§nkt\n- Leseverstehen: teilweise herausfordernd\n- IT-Kenntnisse: sehr niedrig (keine akademische IT-Ausbildung vorausgesetzt)\n\n### Sekund√§re Zielgruppe\n- **Fortgeschrittene Ermittler:innen** (Detail-Level 3)\n- Kenntnisse deutlich unter Bachelor-Niveau IT/Forensik\n- Kein Gesellenniveau vorausgesetzt\n\n### Konsequenzen f√ºr Content-Generierung\n- Einfache, klare Sprache (keine Fachsprache ohne Erkl√§rung)\n- Kurze S√§tze\n- Viel Hilfestellung und Schritt-f√ºr-Schritt-Anweisungen\n- Komplexit√§t bewusst niedrig halten\n- Tipps und Durchf√ºhrungsanweisungen priorisieren\n\n### Tonalit√§t\n**Subtil-unterst√ºtzend, aber sachlich**\n\n‚úÖ **Erlaubt:**\n- \"Dieser Schritt erfordert besondere Sorgfalt.\"\n- \"Der Export wurde erfolgreich erstellt.\"\n- \"Hinweis: Diese Einstellung kann nicht r√ºckg√§ngig gemacht werden.\"\n\n‚ùå **Nicht erlaubt:**\n- \"Super gemacht!\", \"Sie schaffen das!\", \"Toll!\"\n- Zu motivierend-ermunternde Sprache\n- Infantilisierende Ausdr√ºcke\n\n---\n\n## 1.2 Detail-Level-System (4 Stufen)\n\n### Level 1: Schnell√ºbersicht\n- **Zielgruppe:** Erfahrene Anwender, die schnellen √úberblick ben√∂tigen\n- **Inhalt:** Grober Ablauf, Richtung vorgeben\n- **Voraussetzung:** Anwender kann sich selbst zurechtfinden\n- **Umfang:** Minimal, nur Kernschritte\n- **Abgrenzung:** \"Was muss ich tun?\" (Nur Aktionen)\n\n### Level 2: Best-Practice (Standard)\n- **Zielgruppe:** Normale Anwender (Hauptzielgruppe)\n- **Inhalt:** Best-Practice-Einstellungen und Verfahren, die fast immer passen\n- **Umfang:** Vollst√§ndige Anleitung, aber fokussiert auf h√§ufigste Szenarien\n- **Abgrenzung:** \"Wie mache ich es richtig?\" (Best-Practice mit Begr√ºndung)\n\n### Level 3: Detailliert (Experten)\n- **Zielgruppe:** Fortgeschrittene Anwender\n- **Inhalt:** \n  - Alle Einstellm√∂glichkeiten einer Maske erl√§utert\n  - Kurze Hintergr√ºnde\n  - Erweiterte Tipps\n  - Edge Cases\n- **Umfang:** Vollst√§ndig und umfassend\n- **Abgrenzung:** \"Warum ist das so, und was sind Alternativen?\"\n\n\ncluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md\n- [ ] Alle Pflicht-Attribute gesetzt?\n- [ ] Kommentar eingef√É¬ºgt?\n\n**Medien:**\n- [ ] Alle Medien mit `data-media-type`?\n- [ ] Media-Platzhalter mit `MEDIA:`-Kommentar?\n- [ ] `<figcaption>` bei diagram/annotated/video/audio?\n- [ ] `aria-describedby` bei `<figcaption>`?\n\n**Links:**\n- [ ] Externe Links mit `rel` und `aria-label`?\n- [ ] Domain in Klammern im Linktext?\n\n**Tabellen:**\n- [ ] `<caption>` vorhanden?\n- [ ] `scope` bei allen `<th>`?\n\n**Grenzf√É¬§lle:**\n- [ ] Content-Type-Entscheidungen dokumentiert (bei Unsicherheit)?\n- [ ] `DECISION-REVIEW:`-Kommentar bei niedrigem Confidence?\n\n---\n\n### 11.2 Prompt-Template f√É¬ºr KI\n\n`‚Äã`‚Äã`markdown\n# Section-Generierung: {Section-Name}\n\n## Kontext\n\n**Hierarchie:**\n- Section-Level: {LEVEL}\n- Parent-Element: {PARENT_ID} (verwendet {PARENT_HEADING})\n- Erste √É≈ìberschrift dieser Section MUSS sein: {START_HEADING}\n\n**Inhaltliche Anforderungen:**\n- Zielgruppe: IT-ferne Ermittler (Mittlere Reife, niedrige IT-Kenntnisse)\n- Detail-Level: {LEVEL} (1=Schnell√É¬ºbersicht, 2=Best-Practice, 3=Detailliert)\n- Tonalit√É¬§t: Subtil-unterst√É¬ºtzend, sachlich\n- Terminologie: Deutsch bevorzugt, englische Fachbegriffe wo etabliert\n\n**Technische Anforderungen:**\n- Dokument: Cluster 3 - Phase B (HTML-Syntax & Attribut-Vollst√É¬§ndigkeit)\n- BFSG-konform (Barrierefreiheit)\n- JSON-LD Metadaten Pflicht\n- Agent-Context-Block Pflicht (am Ende)\n\n## Aufgabe\n\nErstelle eine vollst√É¬§ndige Section mit folgendem Inhalt:\n\n{INHALTLICHE VORGABE}\n\n## Anforderungen\n\n**HTML-Struktur:**\n- Element: `<section class=\"content-section\" id=\"section-{name}\" ...>`\n- Pflicht-Attribute: `data-section`, `data-level`, `data-parent`, `data-title`\n- Formatierung: 4 Spaces, mehrzeilig ab >3 Attributen\n- Attribut-Reihenfolge: class √¢‚Ä†‚Äô id √¢‚Ä†‚Äô data-* √¢‚Ä†‚Äô sonstige\n\n**JSON-LD Metadaten (am Anfang):**\n- Pflichtfelder: @context, @type, identifier, name, version\n- Berechne: estimatedTime (ISO-8601), difficultyLevel (Beginner/Intermediate/Advanced)\n- Autor: \"Claude Sonnet 4.5\" <claude-sonnet-4.5@ai.anthropic.com>\n\n**√É≈ìberschriften:**\n- Erste √É≈ìberschrift: {START_HEADING}\n- Keine Spr√É¬ºnge (h{N} √¢‚Ä†‚Äô h{N+1})\n- Alle mit `data-ref`\n\n**Medien:**\n- Entscheide: Screenshot, Annotiert, Video, Diagramm (siehe Entscheidungsbaum Cluster 1)\n- Falls ben√É¬∂tigt: `<button class=\"media-help-trigger\">` mit `MEDIA:`-Kommentar\n- `data-media-type` Pflicht\n- Alt-Texte max. 120 Zeichen\n\n**Content-Type-Boxen:**\n- Entscheide: info, hint, attention, warning (siehe Entscheidungsmatrix)\n- Pflicht-CSS-Klasse: info-box, hint-box, attention-box, warning-box\n- Bei Unsicherheit: `DECISION-REVIEW:`-Kommentar\n\n**Agent-Context-Block (am Ende):**\n`‚Äã`‚Äã`html\n<div class=\"agent-context-block\"\n     data-ref=\"agent-context-{section-name}\"\n     data-context-id=\"{section-name}-context\"\n     style=\"display: none;\">\n    <!-- Dynamisch vom Agent gef√É¬ºllt -->\n</div>\n`‚Äã`‚Äã`\n\n**Barrierefreiheit:**\n- Sprachauszeichnung: `<span lang=\"en\">` bei fremdsprachigen Begriffen\n- Alt-Texte: Zweckbeschreibend, max.\n\n\ncluster1-final.md\n(Best-Practice mit Begr√É¬ºndung)\n\n### Level 3: Detailliert (Experten)\n- **Zielgruppe:** Fortgeschrittene Anwender\n- **Inhalt:** \n  - Alle Einstellm√É¬∂glichkeiten einer Maske erl√É¬§utert\n  - Kurze Hintergr√É¬ºnde\n  - Erweiterte Tipps\n  - Edge Cases\n- **Umfang:** Vollst√É¬§ndig und umfassend\n- **Abgrenzung:** \"Warum ist das so, und was sind Alternativen?\" (Tiefes Verst√É¬§ndnis)\n\n### Level 4: \"Don't tell; just show\" (Show-Only-Mode)\n- **Zielgruppe:** Anwender, die nur praktische Schritte sehen wollen\n- **Inhalt:**\n  - Nur `data-content-type=\"instruction\"` (Schritt-f√É¬ºr-Schritt)\n  - Nur `data-content-type=\"visual\"` (Screenshots, Videos)\n  - KEINE `data-content-type=\"explanation\"` (Erkl√É¬§rungen)\n  - KEINE `data-content-type=\"background\"` (Hintergrundinformationen)\n- **Umfang:** Minimalistisch, nur Handlungsanweisungen\n- **Abgrenzung:** \"Zeig mir nur die Schritte!\" (Keine Worte, nur Taten)\n\n**Referenz:** [v07-show-only-mode.md](https://raw.githubusercontent.com/froiloc/WebAssistentForensics/refs/heads/master/manuals/v07-show-only-mode.md)\n\n---\n\n## 1.3 Terminologie und Konsistenz\n\n### Glossar-Integration\n- Glossar ist in Entwicklung, aber noch nicht vorhanden\n- **KI-Aufgabe:** Pr√É¬ºfen, ob Begriffe konsistent verwendet werden\n- **Strategie:** KI entwickelt eigene **Terminologie-Entscheidungsliste** w√É¬§hrend der Content-Erstellung\n- Sp√É¬§tere Integration mit Glossar-Modul\n\n### Konsistenz-Anforderungen\n- Gleicher Begriff = gleiche Bedeutung √É¬ºber alle Sections\n- Deutsche vs. englische Begriffe: Konsistente Handhabung\n- Axiom-spezifische Terminologie korrekt √É¬ºbernehmen\n\n---\n\n## 1.7 Mehrsprachigkeit und Begriffswahl\n\n### Deutsche Fachbegriffe verwenden, wenn:\n- Ein gel√É¬§ufiger deutscher Begriff existiert\n  - **Beispiel:** Query √¢‚Ä†‚Äô **Abfrage**\n- Der Begriff im allgemeinen Sprachgebrauch etabliert ist\n\n### Englische Fachbegriffe beibehalten, wenn:\n- Kein etablierter deutscher Begriff existiert\n  - **Beispiel:** **E-Mail** (nicht \"elektronischer Brief\")\n- Software-spezifische UI-Elemente\n  - **Beispiel:** **Artifacts Explorer**\n- Etablierte IT-Fachbegriffe\n  - **Beispiel:** Cache, Log-Files\n\n### Terminologie-Entscheidungsliste\n\n**KI f√É¬ºhrt w√É¬§hrend Content-Erstellung eine Liste:**\n\n| Begriff (Original) | Entscheidung | Begr√É¬ºndung |\n|-------------------|--------------|------------|\n| Query | Abfrage (dt.) | Gel√É¬§ufiger deutscher Begriff existiert |\n| E-Mail | E-Mail (engl.) | Etabliert, keine sinnvolle deutsche Alternative |\n| Artifacts Explorer | Artifacts Explorer (engl.) | Software-spezifisches UI-Element |\n| Cache | Cache (engl.)\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\n‚úÖ Inhaltliche Anforderungen (Cluster 1)\n2. ‚úÖ Strukturelle Anforderungen (Cluster 2)\n3. ‚úÖ Technische Anforderungen (Cluster 3)\n4. ‚è≥ Prompt-Entwicklung f√ºr KI (Cluster 4) **‚Üê JETZT DRAN**\n5. üîµ Qualit√§tssicherung & Testing (Cluster 5)\n6. üîµ Workflow & Rollen (Cluster 6)\n\n---\n\n## Aktueller Stand\n\nWir haben die **komplette Spezifikation** f√ºr die Content-Generierung dokumentiert:\n\n### Was ist fertig:\n\n**Inhaltlich (Cluster 1):**\n- Zielgruppe: IT-ferne Ermittler (Mittlere Reife, niedrige IT-Kenntnisse)\n- Detail-Level-System: 4 Stufen (Schnell, Standard, Detailliert, Show-Only)\n- Terminologie-Strategie: Deutsch bevorzugt, englische Fachbegriffe wo etabliert\n- Medien-Entscheidungsmatrix: Wann Screenshot/Annotiert/Video/Diagramm\n- Content-Type-System: instruction, explanation, visual, background, info, hint, attention, warning\n- Multi-Tool-Strategie: Tool-agnostisch mit tool-spezifischen Metadaten\n\n**Strukturell (Cluster 2):**\n- Hierarchische Struktur: 3-5 Ebenen (Topic ‚Üí Chapter ‚Üí Section ‚Üí Subsection ‚Üí Deep-Dive)\n- data-ref Granularit√§t & Namenskonventionen\n- JSON-LD Metadaten pro Section\n- Agent-Context-Block (einer pro Section, am Ende)\n- Navigation-Strategie: Freie Navigation\n\n**Technisch (Cluster 3):**\n- BFSG-konforme Barrierefreiheit (Sprachauszeichnung, Alt-Texte, √úberschriften-Hierarchie)\n- HTML-Element-Whitelist (32 erlaubte Elemente)\n- Pflicht-/Optional-Attribute pro Element\n- CSS-Klassen-System (Pflicht-Klassen, Review-Prozess)\n- Attribut-Reihenfolge & Formatierung (class ‚Üí id ‚Üí data-* ‚Üí sonstige)\n- Content-Type-Box-Entscheidungsmatrix (info/hint/attention/warning)\n- HTML-Kommentar-Konventionen (AGENT:/MEDIA:/NOTE:/TODO:/DECISION-REVIEW:)\n\n---\n\n## N√§chster Schritt: Cluster 4 - Prompt-Entwicklung\n\n### Ziel\n\nEntwicklung eines **vollst√§ndigen, pr√§zisen Master-Prompts** f√ºr Claude Sonnet 4.5 zur Generierung von hochwertigem Content f√ºr ~100-150 Sections.\n\nDer Prompt muss **alle Anforderungen aus Cluster 1-3 integrieren** und f√ºr die KI **direkt verwendbar** sein.\n\n### Aufgaben f√ºr Cluster 4\n\n**Phase A: Prompt-Struktur & Architektur**\n1. Aufbau des Master-Prompts (Abschnitte, Hierarchie)\n2. Informationsdichte vs. Verst√§ndlichkeit\n3. Kontext-Management (was muss immer dabei sein, was ist optional?)\n4. Modularer Aufbau (wiederverwendbare Komponenten)\n\n**Phase B: Prompt-Inhalte**\n1. Integration aller Anforderungen aus Cluster 1-3\n2. Entscheidungsb√§ume f√ºr KI (Content-Type, Media-Type, etc.)\n3. Beispiele & Counter-Beispiele\n4. Grenzfall-Behandlung\n\n**Phase C: Testing & Iteration**\n1. Test-Prompts erstellen (verschiedene Schwierigkeitsgrade)\n2. Generierte Sections validieren\n3. Prompt iterativ verbessern\n4.\n\n\nCluster 1 - Inhaltliche Anforderungen (Abgeschlossen).md\n'Magnet Axiom Examine')\"\n      },\n      \"toolVersion\": {\n        \"type\": \"string\",\n        \"description\": \"Version des Tools (z.B. '7.x')\"\n      },\n      \"sources\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": { \"type\": \"string\" },\n            \"version\": { \"type\": \"string\" },\n            \"url\": { \"type\": \"string\" }\n          }\n        }\n      },\n      \"created\": {\n        \"type\": \"string\",\n        \"format\": \"date\",\n        \"description\": \"Erstellungsdatum (YYYY-MM-DD)\"\n      },\n      \"lastUpdated\": {\n        \"type\": \"string\",\n        \"format\": \"date\",\n        \"description\": \"Letztes Update (YYYY-MM-DD)\"\n      },\n      \"promptVersion\": {\n        \"type\": \"string\",\n        \"description\": \"Version des Prompts, das zur Generierung verwendet wurde\"\n      }\n    }\n  },\n  \"media\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"type\": {\n        \"type\": \"string\",\n        \"enum\": [\"screenshot\", \"annotated-screenshot\", \"video\", \"diagram\", \"infographic\"]\n      },\n      \"src\": { \"type\": \"string\" },\n      \"alt\": { \"type\": \"string\" },\n      \"subtitles\": { \"type\": \"string\" },\n      \"transcript\": { \"type\": \"string\" },\n      \"instructions\": { \"type\": \"string\" }\n    }\n  }\n}\n`‚Äã`‚Äã`\n\n---\n\n## Zusammenfassung Cluster 1\n\n### Abgeschlossene Punkte\n\n‚úÖ **1.1** - Zielgruppe und Verst√§ndlichkeitsniveau  \n‚úÖ **1.2** - Detail-Level-System (4 Stufen)  \n‚úÖ **1.3** - Terminologie und Konsistenz  \n‚úÖ **1.4** - Fachliche Korrektheit  \n‚úÖ **1.5** - Vollst√§ndigkeit  \n‚úÖ **1.6** - Axiom-Versionierung und Metadaten  \n‚úÖ **1.7** - Mehrsprachigkeit und Begriffswahl  \n‚úÖ **1.8** - Multi-Tool-Strategie  \n‚úÖ **1.9** - Medien-Pr√§zisionsgrad und Entscheidungsmatrix  \n‚úÖ **1.10** - Content-Type-Automatik (Hybrid-System)  \n‚úÖ **1.11** - Video-Untertitel-System (BFSG)  \n\n### Offene Punkte f√ºr sp√§tere Cluster\n\n- Schema-Definition (Cluster 2)\n- Strukturelle Organisation (Cluster 2)\n- Technische Implementierung (Cluster 3)\n- Qualit√§tssicherung und Testing (Cluster 4)\n- Workflow und Rollen (Cluster 5)\n\n---\n\n## N√§chste Schritte\n\n**Cluster 2: Strukturelle Anforderungen**\n\nFokus:\n- Section-Hierarchie und Navigation\n- data-ref Granularit√§t\n- IDs vs. data-ref\n- Agent-Context-Blocks Platzierung\n- Schema-Definition und -Validierung\n\n---\n\n**Ende Cluster 1**  \n*Bearbeitungszeit: ~2 Stunden*  \n*Status: Abgeschlossen und bereit f√ºr Cluster 2*\n\n\ncluster2_results.md\n\"Vorbereitung\")\n  Level 2: Chapter    (z.B. \"Template-Auswahl\")\n    Level 3: Section  (z.B. \"Template-Typen im Detail\")\n      Level 4: Subsection (optional, f√É¬ºr komplexe Themen)\n        Level 5: Deep-Dive (nur in Ausnahmef√É¬§llen)\n`‚Äã`‚Äã`\n\n**HTML-Repr√É¬§sentation:**\n\n`‚Äã`‚Äã`html\n<!-- Level 1: Topic -->\n<article class=\"content-topic\" \n         id=\"topic-preparation\" \n         data-level=\"1\"\n         data-title=\"Vorbereitung\">\n    \n    <!-- Level 2: Chapter -->\n    <section class=\"content-chapter\" \n             id=\"chapter-templates\" \n             data-level=\"2\"\n             data-parent=\"topic-preparation\"\n             data-title=\"Template-Auswahl\">\n        \n        <!-- Level 3: Section -->\n        <section class=\"content-section\" \n                 id=\"section-template-types\" \n                 data-level=\"3\"\n                 data-parent=\"chapter-templates\"\n                 data-section=\"template-types\"\n                 data-title=\"Template-Typen im Detail\">\n            \n            <!-- Content hier -->\n            \n        </section>\n    </section>\n</article>\n`‚Äã`‚Äã`\n\n**Validierung:**\n- **Fehler:** Bei >5 Ebenen (technisches Maximum)\n- **Warnung:** Bei >3 Ebenen (empfohlenes Maximum)\n- **OK:** Bei 1-3 Ebenen\n\n**Begr√É¬ºndung:**\n- **Flexibilit√É¬§t:** Erlaubt Sonderf√É¬§lle ohne Schema-Bruch\n- **Konsistenz:** Empfehlung sorgt f√É¬ºr einheitliche Struktur\n- **Skalierbarkeit:** Bei 100-150 Sections √É¬ºbersichtlich\n- **Wartbarkeit:** Klare Richtlinie ohne Zwang\n\n---\n\n## 2. Content-Types (Erweitert)\n\n### 2.1 Bestehende Content-Types (aus V07)\n\n| Type | Definition | Verwendung |\n|------|------------|------------|\n| `instruction` | Handlungsanweisung | \"Klicken Sie auf...\" |\n| `example` | Beispiel/Demo | Code-Snippets, Musterdaten |\n| `explanation` | Erkl√É¬§rung | \"Diese Funktion dient...\" |\n| `background` | Hintergrundwissen | Theoretische Grundlagen |\n| `warning` | Kritische Warnung | \"Ohne Speichern gehen Daten verloren!\" |\n\n### 2.2 Neue Content-Types (Cluster 2)\n\n| Type | Definition | Dringlichkeit | CSS-Styling |\n|------|------------|---------------|-------------|\n| `info` | Zus√É¬§tzliche Information (neutral) | Niedrig | Grau, √¢‚Äû¬π√Ø¬∏¬è Icon |\n| `hint` | Unterst√É¬ºtzender Optimierungs-Tipp | Mittel | Blau, √∞≈∏‚Äô¬° Icon |\n| `attention` | Wichtiger Hinweis (nicht kritisch) | Hoch | Orange, √¢≈°¬†√Ø¬∏¬è Icon |\n\n### 2.3 Abgrenzungs-Schema\n\n**Aufsteigende Dringlichkeit:**\n\n`‚Äã`‚Äã`\ninfo < hint < attention < warning\n √¢‚Ä†‚Äú      √¢‚Ä†‚Äú        √¢‚Ä†‚Äú           √¢‚Ä†‚Äú\n\"Gut  \"Kann   \"Sollte    \"MUSS\n zu    helfen\" beachtet   beachtet\nwissen\"          werden\"    werden!\"\n`‚Äã`‚Äã`\n\n### 2.4 HTML-Beispiele\n\n`‚Äã`‚Äã`html\n<!-- info: Neutraler Kontext -->\n<aside data-content-type=\"info\">\n    √¢‚Äû¬π√Ø¬∏¬è AXIOM Examiner speichert Reports standardm√É¬§√É≈∏ig im Projektordner.\n</aside>\n\n<!-- hint: Optimierungs-Tipp -->\n<aside data-content-type=\"hint\">\n    √∞≈∏‚Äô¬° Tipp: Nutze Template-Variablen f√É¬ºr wiederkehrende Metadaten.\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\n# Projekt-Fortsetzung: Cluster 4 - Prompt-Entwicklung f√ºr KI-Content-Generierung\n\nHallo! Ich arbeite am Projekt **WebAssistentForensics** und m√∂chte die Arbeit fortsetzen.\n\n## Kontext\n\nIch entwickle ein strukturiertes Wissenssystem f√ºr Polizeibeamte zu IT-Forensik-Themen. Das System basiert auf:\n- JSON-Schema-validiertem HTML-Content\n- Verschiedene Detail-Level (Basic, Best-Practice, Expert, Show-Only)\n- BFSG-konforme Barrierefreiheit\n- Python-basierte Validierung\n- KI-gest√ºtzte Content-Generierung (Claude Sonnet 4.5)\n\n## Bisheriger Fortschritt\n\n**Abgeschlossen:**\n- ‚úÖ **Cluster 1:** Inhaltliche Anforderungen (siehe `cluster1-final.md`)\n- ‚úÖ **Cluster 2:** Strukturelle Anforderungen (siehe `cluster2_results.md`)\n- ‚úÖ **Cluster 3:** Technische Anforderungen\n  - ‚úÖ **Teil A - Barrierefreiheit (BFSG):**\n    - Sprachauszeichnung (`lang`-Attribute): `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md`\n    - Alt-Texte & √úberschriften-Hierarchie: `cluster3_BFSG-Barrierefreiheit-Content.md`\n  - ‚úÖ **Teil B - HTML-Syntax & Attribut-Vollst√§ndigkeit:**\n    - Vollst√§ndige HTML-Element-Spezifikation: `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md`\n\n**Cluster-√úbersicht (Originalplanung):**\n1. ‚úÖ Inhaltliche Anforderungen (Cluster 1)\n2. ‚úÖ Strukturelle Anforderungen (Cluster 2)\n3. ‚úÖ Technische Anforderungen (Cluster 3)\n4. ‚è≥ Prompt-Entwicklung f√ºr KI (Cluster 4) **‚Üê JETZT DRAN**\n5. üîµ Qualit√§tssicherung & Testing (Cluster 5)\n6.\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\nAufbau des Master-Prompts (Abschnitte, Hierarchie)\n2. Informationsdichte vs. Verst√§ndlichkeit\n3. Kontext-Management (was muss immer dabei sein, was ist optional?)\n4. Modularer Aufbau (wiederverwendbare Komponenten)\n\n**Phase B: Prompt-Inhalte**\n1. Integration aller Anforderungen aus Cluster 1-3\n2. Entscheidungsb√§ume f√ºr KI (Content-Type, Media-Type, etc.)\n3. Beispiele & Counter-Beispiele\n4. Grenzfall-Behandlung\n\n**Phase C: Testing & Iteration**\n1. Test-Prompts erstellen (verschiedene Schwierigkeitsgrade)\n2. Generierte Sections validieren\n3. Prompt iterativ verbessern\n4. Best Practices dokumentieren\n\n---\n\n## Arbeitsweise\n\n- **Kleinschrittig vorgehen** (keine gro√üen Spr√ºnge)\n- **Top-Down-Design** (vom Groben ins Detail)\n- **Gef√ºhrte Fragen** stellen, bis 95% Klarheit erreicht ist\n- √Ñnderungen nur **vorschlagen und begr√ºnden**\n- Jede √Ñnderung muss **durch mich verifiziert und akzeptiert** werden\n- Am Ende ein **Ergebnisdokument** erstellen (analog zu Cluster 1-3)\n\n---\n\n## Wichtige Projekt-Richtlinien\n\n### Textstil f√ºr dich (KI):\n- Bleibe eng an meiner Vorgabe\n- F√ºge keine zus√§tzlichen Aspekte hinzu\n- Erst meine Aufgabe umsetzen, dann separat Verbesserungen vorschlagen\n- Verbesserungsvorschl√§ge in 3 Abs√§tzen erkl√§ren: Vorteile, Technik, Aufwand\n- Vermeide Telegramstil\n- Hebe wichtige Aussagen durch **Fettmarkieren** hervor\n\n### Code-√Ñnderungen:\n- Immer kleinschrittig und Schritt f√ºr Schritt\n- Keine unerw√ºnschten Nebeneffekte\n- CSS-Variablen `--variable*` bewahren und nutzen\n- Keine absoluten Gr√∂√üen/Farben au√üerhalb der Themes\n- Immer den **aktuellen Code** aus dem Projekt-Dateispeicher als Basis verwenden\n- Jede √Ñnderung begr√ºnden\n- Mindestens einen Test vorschlagen\n\n### Debugging:\n- Nach Tests wird Debug-Output in `Debug-output.XXX` abgelegt (XXX = Buildnummer)\n- H√∂chste Buildnummer = aktuellster Debug-Output\n\n---\n\n## Meine Frage\n\nBitte lies die f√ºnf Dokumente im Projekt-Dateispeicher:\n1. `cluster1-final.md` (Inhaltliche Anforderungen)\n2. `cluster2_results.md` (Strukturelle Anforderungen)\n3. `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md` (BFSG Teil 1)\n4. `cluster3_BFSG-Barrierefreiheit-Content.md` (BFSG Teil 2)\n5. `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md` (HTML-Syntax)\n\n**Lass uns dann Cluster 4: Prompt-Entwicklung angehen.**\n\nStelle mir gef√ºhrte Fragen, damit wir gemeinsam den Master-Prompt entwickeln k√∂nnen. Wir gehen wie immer kleinschrittig vor und kl√§ren zun√§chst die grundlegende Struktur, bevor wir ins Detail gehen.\n\n---\n\n## Kontext-Informationen\n\n**Projekt:** WebAssistentForensics  \n**Ziel-Tool (initial):** Magnet AXIOM Examine  \n**Sp√§tere Erweiterung:** X-Ways Forensics, Cellebrite Reader  \n**Haupt-Zielgruppe:** IT-ferne Polizei-Ermittler  \n**Content-Umfang:** ~100-150 Sections  \n**KI-Modell:** Claude Sonnet 4.5  \n**Validierung:** Python-basiert + JSON-Schema  \n\n---\n\n**Ich freue mich auf die Zusammenarbeit!**\n\n\ncluster2_results.md\nZusammenfassung & N√É¬§chste Schritte\n\n### 14.1 Was wurde erreicht?\n\n√¢≈ì‚Ä¶ **Vollst√É¬§ndige konzeptionelle Kl√É¬§rung:**\n- Hierarchische Struktur (3-5 Ebenen)\n- Erweiterte Content-Types (8 Typen)\n- Erweiterte Media-Types (6 Typen + Validierung)\n- JSON-LD Metadaten-System\n- data-ref Granularit√É¬§t\n- Agent-Context-Block-Standard\n\n√¢≈ì‚Ä¶ **Technische Spezifikation:**\n- JSON-Schema-Anforderungen definiert\n- Python-Validierungen spezifiziert\n- HTML-Struktur-Patterns dokumentiert\n- Test-Strategie festgelegt\n\n√¢≈ì‚Ä¶ **Implementierungs-Roadmap:**\n- 5 Phasen mit klaren Priorit√É¬§ten\n- Aufwandssch√É¬§tzungen\n- Abh√É¬§ngigkeiten identifiziert\n\n### 14.2 N√É¬§chste Schritte (konkret)\n\n**Sofort umsetzbar:**\n\n1. **JSON-Schema erstellen** (Phase 1)\n   - Datei: `schema/main-content.schema.json`\n   - Aufwand: 2-3 Stunden\n   - Status: Bereit zur Implementierung\n\n2. **Python-Validierung erweitern** (Phase 2)\n   - Datei: `tools/validation/validate_html_structure.py`\n   - Aufwand: 3-4 Stunden\n   - Status: Spezifikation vollst√É¬§ndig\n\n3. **Beispiel-Section erstellen** (Test)\n   - Vollst√É¬§ndige Section mit allen neuen Features\n   - Validierung testen\n   - Aufwand: 1 Stunde\n\n**Danach:**\n- Phase 3: HTML-Migration\n- Phase 4: IDE-Support\n- Phase 5: Dokumentation\n\n### 14.3 Offene Fragen\n\n**Keine.** Alle Punkte aus Cluster 2 sind gekl√É¬§rt.\n\n**F√É¬ºr Cluster 3 (falls relevant):**\n- Detaillierte Agent-Integration\n- Suchfunktion-Design\n- Performance-Optimierung bei 100+ Sections\n\n---\n\n## 15. Anhang\n\n### 15.1 Referenz-Links\n\n- **JSON-Schema:** https://json-schema.org/\n- **Schema.org (JSON-LD):** https://schema.org/TechArticle\n- **ISO-8601 Duration:** https://en.wikipedia.org/wiki/ISO_8601#Durations\n- **HTML Custom Data (VSCode):** https://code.visualstudio.com/docs/languages/html#_custom-data-format\n\n### 15.2 Glossar\n\n| Begriff | Definition |\n|---------|------------|\n| **Topic** | Oberste Hierarchie-Ebene (Level 1) |\n| **Chapter** | Zweite Hierarchie-Ebene (Level 2) |\n| **Section** | Dritte Hierarchie-Ebene (Level 3), prim√É¬§re Content-Einheit |\n| **data-ref** | Eindeutige Referenz f√É¬ºr HTML-Elemente |\n| **Content-Type** | Semantische Klassifikation von Inhalten |\n| **Media-Type** | Klassifikation von Medien-Ressourcen |\n| **JSON-LD** | JSON for Linking Data (strukturierte Metadaten) |\n| **Agent-Context-Block** | Versteckter Bereich f√É¬ºr dynamische Agent-Inhalte |\n\n### 15.3 Beispiel-Section (Vollst√É¬§ndig)\n\n`‚Äã`‚Äã`html\n<!-- Level 1: Topic -->\n<article class=\"content-topic\" \n         id=\"topic-preparation\" \n         data-level=\"1\"\n         data-title=\"Vorbereitung\">\n    \n    <script type=\"application/ld+json\" class=\"section-metadata\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"CreativeWork\",\n        \"identifier\": \"topic-preparation\",\n        \"name\": \"Vorbereitung\",\n\n\ntask1.md\n# Projekt-Fortsetzung: Cluster 3 - Technische Anforderungen (Phase B)\n\nHallo! Ich arbeite am Projekt **WebAssistentForensics** und m√É¬∂chte die Arbeit an **Cluster 3 (Technische Anforderungen)** fortsetzen.\n\n## Kontext\n\nIch entwickle ein strukturiertes Wissenssystem f√É¬ºr Polizeibeamte zu IT-Forensik-Themen. Das System basiert auf:\n- JSON-Schema-validiertem HTML-Content\n- Verschiedene Detail-Level (Basic, Best-Practice, Expert)\n- BFSG-konforme Barrierefreiheit\n- Python-basierte Validierung\n\n## Bisheriger Fortschritt\n\n**Abgeschlossen:**\n- √¢≈ì‚Ä¶ **Cluster 1:** Inhaltliche Anforderungen (siehe `cluster1-final.md`)\n- √¢≈ì‚Ä¶ **Cluster 2:** Strukturelle Anforderungen (siehe `cluster2_results.md`)\n- √¢≈ì‚Ä¶ **Cluster 3 - Teil A (Barrierefreiheit):**\n  - Sprachauszeichnung (`lang`-Attribute): `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md`\n  - Alt-Texte & √É≈ìberschriften-Hierarchie: `cluster3_BFSG-Barrierefreiheit-Content.md`\n\n**Cluster 3 - Roadmap (Original):**\n1. Medien-Anweisungen √¢≈ì‚Ä¶ (bereits in Cluster 2 gekl√É¬§rt)\n2. Agent-Integration √∞≈∏‚Äù¬µ (bewusst ausgeklammert, wird separat behandelt)\n3. Barrierefreiheit (BFSG) √¢≈ì‚Ä¶ (zwei Dokumente erstellt)\n4. HTML-Syntax und Attribut-Vollst√É¬§ndigkeit √¢¬ù≈í (jetzt dran)\n\n## Aktueller Stand\n\nWir haben die **Barrierefreiheit (BFSG)** vollst√É¬§ndig dokumentiert. Jetzt fehlt noch:\n\n### **Phase B: HTML-Syntax & Attribut-Vollst√É¬§ndigkeit**\n\nFolgende Punkte m√É¬ºssen gekl√É¬§rt werden:\n\n1. **Pflicht-/Optional-Attribute pro HTML-Element**\n   - Welche Attribute sind zwingend f√É¬ºr `<section>`, `<h1>`-`<h6>`, `<img>`, `<video>`, `<table>`, etc.?\n   - Welche sind optional?\n\n2. **Vollst√É¬§ndige Element-Spezifikation**\n   - F√É¬ºr alle erlaubten HTML-Elemente aus der Whitelist\n   - Beispiel: Muss jedes `<img>` ein `data-media-type` haben?\n\n3. **Attribut-Reihenfolge & Formatierung**\n   - Gibt es eine bevorzugte Reihenfolge? (z.B. `id` √¢‚Ä†‚Äô `class` √¢‚Ä†‚Äô `data-*` √¢‚Ä†‚Äô sonstige)\n\n4. **JSON-LD Metadaten finalisieren**\n   - Welche Felder sind Pflicht vs. optional?\n   - Soll die KI `estimatedTime` berechnen? `difficultyLevel` einsch√É¬§tzen?\n\n5. **Agent-Context-Block-Struktur**\n   - Welche Attribute sind Pflicht (`data-ref`, `data-context-id`)?\n   - Soll der Block leer bleiben oder Platzhalter-Content enthalten?\n\n## Arbeitsweise\n\n- **Kleinschrittig vorgehen** (keine gro√É≈∏en Spr√É¬ºnge)\n- **Top-Down-Design** (vom Groben ins Detail)\n- Code√É¬§nderungen nur **vorschlagen und begr√É¬ºnden**\n- Jede √É‚Äûnderung muss **durch mich verifiziert und akzeptiert** werden\n- **Gef√É¬ºhrte Fragen** stellen, bis 95% Klarheit erreicht ist\n- Am Ende ein **Ergebnisdokument** erstellen (analog zu Cluster 1 und 2)\n\n## Meine Frage\n\nBitte lies die vier Dokumente im Projekt-Dateispeicher (`cluster1-final.md`, `cluster2_results.md`, `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md`, `cluster3_BFSG-Barrierefreiheit-Content.md`), um den Kontext zu verstehen.\n\nLass uns dann **Phase B: HTML-Syntax & Attribut-Vollst√É¬§ndigkeit** angehen.\n\n\nCluster 2 - Ergebnisse: Schema-Design & Strukturfundament.md\n\"Vorbereitung\")\n  Level 2: Chapter    (z.B. \"Template-Auswahl\")\n    Level 3: Section  (z.B. \"Template-Typen im Detail\")\n      Level 4: Subsection (optional, f√ºr komplexe Themen)\n        Level 5: Deep-Dive (nur in Ausnahmef√§llen)\n`‚Äã`‚Äã`\n\n**HTML-Repr√§sentation:**\n\n`‚Äã`‚Äã`html\n<!-- Level 1: Topic -->\n<article class=\"content-topic\" \n         id=\"topic-preparation\" \n         data-level=\"1\"\n         data-title=\"Vorbereitung\">\n    \n    <!-- Level 2: Chapter -->\n    <section class=\"content-chapter\" \n             id=\"chapter-templates\" \n             data-level=\"2\"\n             data-parent=\"topic-preparation\"\n             data-title=\"Template-Auswahl\">\n        \n        <!-- Level 3: Section -->\n        <section class=\"content-section\" \n                 id=\"section-template-types\" \n                 data-level=\"3\"\n                 data-parent=\"chapter-templates\"\n                 data-section=\"template-types\"\n                 data-title=\"Template-Typen im Detail\">\n            \n            <!-- Content hier -->\n            \n        </section>\n    </section>\n</article>\n`‚Äã`‚Äã`\n\n**Validierung:**\n- **Fehler:** Bei >5 Ebenen (technisches Maximum)\n- **Warnung:** Bei >3 Ebenen (empfohlenes Maximum)\n- **OK:** Bei 1-3 Ebenen\n\n**Begr√ºndung:**\n- **Flexibilit√§t:** Erlaubt Sonderf√§lle ohne Schema-Bruch\n- **Konsistenz:** Empfehlung sorgt f√ºr einheitliche Struktur\n- **Skalierbarkeit:** Bei 100-150 Sections √ºbersichtlich\n- **Wartbarkeit:** Klare Richtlinie ohne Zwang\n\n---\n\n## 2. Content-Types (Erweitert)\n\n### 2.1 Bestehende Content-Types (aus V07)\n\n| Type | Definition | Verwendung |\n|------|------------|------------|\n| `instruction` | Handlungsanweisung | \"Klicken Sie auf...\" |\n| `example` | Beispiel/Demo | Code-Snippets, Musterdaten |\n| `explanation` | Erkl√§rung | \"Diese Funktion dient...\" |\n| `background` | Hintergrundwissen | Theoretische Grundlagen |\n| `warning` | Kritische Warnung | \"Ohne Speichern gehen Daten verloren!\" |\n\n### 2.2 Neue Content-Types (Cluster 2)\n\n| Type | Definition | Dringlichkeit | CSS-Styling |\n|------|------------|---------------|-------------|\n| `info` | Zus√§tzliche Information (neutral) | Niedrig | Grau, ‚ÑπÔ∏è Icon |\n| `hint` | Unterst√ºtzender Optimierungs-Tipp | Mittel | Blau, üí° Icon |\n| `attention` | Wichtiger Hinweis (nicht kritisch) | Hoch | Orange, ‚ö†Ô∏è Icon |\n\n### 2.3 Abgrenzungs-Schema\n\n**Aufsteigende Dringlichkeit:**\n\n`‚Äã`‚Äã`\ninfo < hint < attention < warning\n ‚Üì      ‚Üì        ‚Üì           ‚Üì\n\"Gut  \"Kann   \"Sollte    \"MUSS\n zu    helfen\" beachtet   beachtet\nwissen\"          werden\"    werden!\"\n`‚Äã`‚Äã`\n\n### 2.4 HTML-Beispiele\n\n`‚Äã`‚Äã`html\n<!-- info: Neutraler Kontext -->\n<aside data-content-type=\"info\">\n    ‚ÑπÔ∏è AXIOM Examiner speichert Reports standardm√§√üig im Projektordner.\n</aside>\n\n<!-- hint: Optimierungs-Tipp -->\n<aside data-content-type=\"hint\">\n    üí° Tipp: Nutze Template-Variablen f√ºr wiederkehrende Metadaten.\n</aside>\n\n<!-- attention: Wichtiger Hinweis -->\n<aside data-content-type=\"attention\">\n    ‚ö†Ô∏è Achtung: HTML-Reports k√∂nnen bei gro√üen Datenmengen langsam laden.\n\n\nContinuation Prompt f√ºr Chat 2 (Cluster 2).md\n# Continuation Prompt f√ºr Chat 2: Cluster 2 - Strukturelle Anforderungen\n\n## Kontext und Aufgabe\n\nWir befinden uns in der systematischen Entwicklung eines umfassenden Prompts f√ºr KI-gest√ºtzte Content-Generierung f√ºr ein interaktives Handbuch zur forensischen Software **Magnet Axiom Examine**. \n\n**Projektziel:** Entwicklung eines pr√§zisen, vollst√§ndigen Prompts f√ºr Sonnet 4.5 zur Generierung von hochwertigem Content f√ºr ~100-150 Sections.\n\n**Zeitrahmen:** 12 Stunden Gesamtaufwand (ca. 2 Stunden bereits investiert in Cluster 1)\n\n**Methodik:** Brainstorming ‚Üí Strukturierung ‚Üí Testing ‚Üí Iteration (Wirbelpoolverfahren)\n\n---\n\n## Status\n\n### Abgeschlossen: Cluster 1 - Inhaltliche Anforderungen\n\n**Wichtigste Ergebnisse aus Cluster 1:**\n\n1. **Zielgruppe:** IT-ferne Ermittler:innen (Mittlere Reife, eingeschr√§nkte IT-Kenntnisse)\n2. **Tonalit√§t:** Subtil-unterst√ºtzend, aber sachlich\n3. **Detail-Level:** 4 Stufen (Schnell√ºbersicht, Best-Practice, Detailliert, Show-Only)\n4. **Terminologie:** Deutsch bevorzugt, englische Fachbegriffe wo etabliert, KI f√ºhrt Terminologie-Liste\n5. **Medien-Entscheidung:** Hybrid-System mit Entscheidungsbaum (Screenshot/Annotiert/Video)\n6. **Content-Types:** `instruction`, `explanation`, `visual`, `background` (automatisch vergeben mit Grenzfall-Dokumentation)\n7. **Multi-Tool-Strategie:** Schema tool-agnostisch, Metadaten tool-spezifisch\n8. **Barrierefreiheit:** Videos mit KI-generierten Untertiteln (BFSG-konform)\n9. **Medien-Budget:** Keine Limitierung - was n√∂tig ist, wird gemacht\n\n**Vollst√§ndiges Dokument:** Siehe Artifact \"Cluster 1 - Inhaltliche Anforderungen (Abgeschlossen)\"\n\n---\n\n## Aktuell zu bearbeiten: Cluster 2 - Strukturelle Anforderungen\n\n### Fokusthemen f√ºr Cluster 2\n\n1. **Section-Hierarchie und Organisation**\n   - Wie tief geht die Verschachtelung? (Topics ‚Üí Sections ‚Üí Subsections?)\n   - Logische Struktur und Gruppierung\n   - Navigation zwischen Sections\n\n2. **data-ref Granularit√§t**\n   - Welche Elemente brauchen data-ref?\n   - Namenskonventionen\n   - Konsistenz √ºber Sections hinweg\n\n3. **IDs vs. data-ref vs. data-section**\n   - Unterschiede und Verwendungszwecke\n   - Wann wird was verwendet?\n   - Kombinationen und Redundanzen\n\n4. **Agent-Context-Blocks**\n   - Platzierung innerhalb Sections\n   - H√§ufigkeit (wie viele pro Section?)\n   - Trigger-Points definieren\n\n5.\n\n\nCluster 2 - Ergebnisse: Schema-Design & Strukturfundament.md\nZusammenfassung & N√§chste Schritte\n\n### 14.1 Was wurde erreicht?\n\n‚úÖ **Vollst√§ndige konzeptionelle Kl√§rung:**\n- Hierarchische Struktur (3-5 Ebenen)\n- Erweiterte Content-Types (8 Typen)\n- Erweiterte Media-Types (6 Typen + Validierung)\n- JSON-LD Metadaten-System\n- data-ref Granularit√§t\n- Agent-Context-Block-Standard\n\n‚úÖ **Technische Spezifikation:**\n- JSON-Schema-Anforderungen definiert\n- Python-Validierungen spezifiziert\n- HTML-Struktur-Patterns dokumentiert\n- Test-Strategie festgelegt\n\n‚úÖ **Implementierungs-Roadmap:**\n- 5 Phasen mit klaren Priorit√§ten\n- Aufwandssch√§tzungen\n- Abh√§ngigkeiten identifiziert\n\n### 14.2 N√§chste Schritte (konkret)\n\n**Sofort umsetzbar:**\n\n1. **JSON-Schema erstellen** (Phase 1)\n   - Datei: `schema/main-content.schema.json`\n   - Aufwand: 2-3 Stunden\n   - Status: Bereit zur Implementierung\n\n2. **Python-Validierung erweitern** (Phase 2)\n   - Datei: `tools/validation/validate_html_structure.py`\n   - Aufwand: 3-4 Stunden\n   - Status: Spezifikation vollst√§ndig\n\n3. **Beispiel-Section erstellen** (Test)\n   - Vollst√§ndige Section mit allen neuen Features\n   - Validierung testen\n   - Aufwand: 1 Stunde\n\n**Danach:**\n- Phase 3: HTML-Migration\n- Phase 4: IDE-Support\n- Phase 5: Dokumentation\n\n### 14.3 Offene Fragen\n\n**Keine.** Alle Punkte aus Cluster 2 sind gekl√§rt.\n\n**F√ºr Cluster 3 (falls relevant):**\n- Detaillierte Agent-Integration\n- Suchfunktion-Design\n- Performance-Optimierung bei 100+ Sections\n\n---\n\n## 15. Anhang\n\n### 15.1 Referenz-Links\n\n- **JSON-Schema:** https://json-schema.org/\n- **Schema.org (JSON-LD):** https://schema.org/TechArticle\n- **ISO-8601 Duration:** https://en.wikipedia.org/wiki/ISO_8601#Durations\n- **HTML Custom Data (VSCode):** https://code.visualstudio.com/docs/languages/html#_custom-data-format\n\n### 15.2 Glossar\n\n| Begriff | Definition |\n|---------|------------|\n| **Topic** | Oberste Hierarchie-Ebene (Level 1) |\n| **Chapter** | Zweite Hierarchie-Ebene (Level 2) |\n| **Section** | Dritte Hierarchie-Ebene (Level 3), prim√§re Content-Einheit |\n| **data-ref** | Eindeutige Referenz f√ºr HTML-Elemente |\n| **Content-Type** | Semantische Klassifikation von Inhalten |\n| **Media-Type** | Klassifikation von Medien-Ressourcen |\n| **JSON-LD** | JSON for Linking Data (strukturierte Metadaten) |\n| **Agent-Context-Block** | Versteckter Bereich f√ºr dynamische Agent-Inhalte |\n\n### 15.3 Beispiel-Section (Vollst√§ndig)\n\n`‚Äã`‚Äã`html\n<!-- Level 1: Topic -->\n<article class=\"content-topic\" \n         id=\"topic-preparation\" \n         data-level=\"1\"\n         data-title=\"Vorbereitung\">\n    \n    <script type=\"application/ld+json\" class=\"section-metadata\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"CreativeWork\",\n        \"identifier\": \"topic-preparation\",\n        \"name\": \"Vorbereitung\",\n\n\nPerfekt! Ich habe nun ein umfassendes Verst√§ndnis des Projekts. Lassen Sie mich die vollst√§ndige Roadmap und den aktuellen Stand zusammenfassen:\n\n\nMein Verst√§ndnis des Projektstands\n\n\nAbgeschlossene Cluster (1-3):\n\n\n‚úÖ Cluster 1 - Inhaltliche Anforderungen: Zielgruppe, Detail-Level (4 Stufen), Terminologie, Medien-Entscheidungsmatrix, Content-Types, Multi-Tool-Strategie\n\n\n‚úÖ Cluster 2 - Strukturelle Anforderungen: Hierarchie (3-5 Ebenen), data-ref Granularit√§t, JSON-LD Metadaten, Agent-Context-Blocks, Navigation-Strategie\n\n\n‚úÖ Cluster 3 - Technische Anforderungen: BFSG-Barrierefreiheit (Sprachauszeichnung, Alt-Texte, √úberschriften), HTML-Element-Whitelist (32 Elemente), Pflicht-/Optional-Attribute, CSS-Klassen-System, Attribut-Reihenfolge, Content-Type-Box-Entscheidungsmatrix, HTML-Kommentar-Konventionen\n\n\nNun dran: Cluster 4 - Qualit√§tssicherung\n\n\nDie urspr√ºngliche Planung sah zwar Cluster 4 als \"Prompt-Entwicklung\" vor, aber Ihre Korrektur ist korrekt: Wir sind jetzt bei Cluster 4: Qualit√§tssicherung.\n\n\n\nCluster 4: Qualit√§tssicherung - Einstieg\n\n\nLassen Sie mich zun√§chst gef√ºhrte Fragen stellen, um ein 95%iges Verst√§ndnis zu erreichen:\n\n\nFrage 1: Validierungsprozess-Aufbau\n\n\nWelche Validierungsebenen sollen etabliert werden?\n\n\nIch vermute eine mehrstufige Validierung:\n\n\nEbene 1 (Syntaktisch): JSON-Schema-Validierung + Python-Validierung der HTML-Struktur\n\nEbene 2 (Semantisch): Inhaltliche Qualit√§t, Konsistenz, Vollst√§ndigkeit\n\nEbene 3 (BFSG-Konformit√§t): Barrierefreiheit-Checks\n\n\nIst diese Strukturierung korrekt, oder gibt es eine andere Aufteilung?\n\n\nFrage 2: Testkriterien-Granularit√§t\n\n\nAuf welcher Ebene sollen die Testkriterien definiert werden?\n\n\nPro Element (z.B. \"Jedes <img> hat Alt-Text zwischen 10-120 Zeichen\")?\n\nPro Section (z.B. \"Section hat mindestens ein data-content-type='instruction'\")?\n\nPro Content-Type (z.B. \"Warning-Boxen m√ºssen in roter Farbe erscheinen\")?\n\nGlobal (z.B. \"Keine verwaisten data-ref\")?\n\n\nFrage 3: Iterationslogik - \"Fertig\"-Definition\n\n\nWann gilt eine Section als \"fertig\"?\n\n\nSoll es Stufen der Fertigstellung geben?\n\n\nDraft: Inhalt vollst√§ndig, aber noch nicht validiert\n\nReview: Syntaktisch korrekt, semantische Pr√ºfung ausstehend\n\nApproved: Alle Tests bestanden, bereit zur Integration\n\nPublished: Live im System\n\n\nOder gibt es ein einfacheres Modell (z.B. nur \"Entwurf\" vs. \"Fertig\")?\n\n\nFrage 4: Metadaten-Versionierung\n\n\nWelche Metadaten sollen f√ºr Qualit√§tssicherung erfasst werden?\n\n\nIch sehe in den Cluster-Dokumenten bereits:\n\n\ncreated (Erstellungsdatum)\n\nlastUpdated (Letztes Update)\n\nversion (Versionsnummer)\n\nsources (Quellen)\n\n\nFehlen noch Metadaten wie:\n\n\nreviewStatus (Draft/Review/Approved)?\n\nlastReviewer (Wer hat zuletzt gepr√ºft)?\n\nvalidationScore (Automatische Bewertung 0-100)?\n\nknownIssues (Liste offener Probleme)?\n\n\n\nBitte beantworten Sie diese vier Fragen, dann k√∂nnen wir strukturiert weitermachen und Cluster 4 systematisch aufbauen. Wie bei den vorherigen Clustern werde ich alle Erkenntnisse dokumentieren und am Ende ein vollst√§ndiges Ergebnisdokument erstellen.",
      "time_iso8601": "2025-10-09T16:59:27"
    },
    {
      "role": "Prompt",
      "say": "Eine Vor√ºberlegung: Die in diesem Teil des Brainstormings vorgenommenen √úberlegungen haben den Hintergrund, sich vom Ergebnis der Anfrage an die KI zum Auftrag zur√ºckzuarbeiten. Das Ergebnis muss getestet und validiert werden, um zu pr√ºfen, ob die Ergebnisse der KI die erwartete Qualit√§t haben.\nDies rechtfertigt die jetzige Besch√§ftigung mit dem Thema Qualit√§tssicherung und Validierung, welche eine der KI-Aktivit√§t zeitlich nachgelagerte T√§tigkeit ist. Die √úberlegung zu diesem Ansatz ist, dass man auf diese Weise weitere Bedarfe f√ºr die Anforderungen an den Auftrag f√ºr die KI entdecken und definieren kann.\n\n\nZu 1)\n\n\nJa, Ebene 1 wird bereits durchgef√ºhrt.\n\nEbene 2: Dies kann lediglich durch eine Instanz durchgef√ºhrt werden, die eine semantische Pr√ºfung aufgrund ihrer Expertise durchf√ºhren kann. Dies wird durch den Maintainer und vielleicht vorgelagert durch einen weiteren KI-Agenten vorbereitet.\n\nEbene 3: Diese Vorgaben sind vor allem technischer Natur. Sie werden implizit in der Validierung mit erledigt. Es gibt keine expliziten Validierungen bez√ºglich BFSG-Konformit√§t. Ich bin aber √ºberzeugt, dass wir in den regul√§ren Pr√ºfungen und dem Design alle signifikanten Pr√ºfungen dahingehend abdecken.\nZu 2)\n\nDas verstehe ich nicht. Das wird alles gepr√ºft. Jedes Element wird darauf gepr√ºft, ob es den Vorgaben entsprechend verwendet wurde.\n\nAuch Zusammenh√§nge zwischen Elementen werden gepr√ºft. Verweise auf andere Elemente, bestehende Dateien, Anzahl von Ebenen, etc.\nZu 3)\n\nDraft: die durch die KI erstellte Version\n\nReview: syntaktisch gepr√ºft und fehlerfrei. Semantische Pr√ºfung steht noch aus\n\nApproved: Bereit zur Integration in index.html\n\nPublished: in index.html integriert.\nDieses System ist schl√ºssig und stimmt mit dem vorgesehenen Workflow √ºberein.\nZu 4)\n\nDie Metadaten, die du vorgeschlagen hast, sollen noch hinzugef√ºgt werden.\n\n\nDas sind meine Einsch√§tzungen und Antworten auf deine Fragen. Gibt es weitere Fragen, offene Punkte, √úberlegungen oder Vorschl√§ge?",
      "time_iso8601": "2025-10-09T17:53:39"
    },
    {
      "role": "Response",
      "say": "Vielen Dank f√ºr die pr√§zisen Antworten! Ihr Ansatz, sich vom Ergebnis zur√ºck zum Auftrag zu arbeiten, ist methodisch sehr durchdacht. Diese Perspektive hilft tats√§chlich, blinde Flecken in den Anforderungen zu identifizieren.\n\n\nIch habe Ihr Feedback aufgenommen und m√∂chte nun weitere gef√ºhrte Fragen stellen, um die Qualit√§tssicherung vollst√§ndig zu kl√§ren:\n\n\n\nVertiefende Fragen zu Cluster 4\n\n\nFrage 5: Semantische Pr√ºfung durch KI-Agent (Vorbereitung)\n\n\nSie erw√§hnten, dass ein KI-Agent die semantische Pr√ºfung vorbereiten k√∂nnte, bevor der Maintainer final pr√ºft.\n\n\nWas soll dieser KI-Agent konkret tun?\n\n\nM√∂gliche Aufgaben:\n\n\nKonsistenzpr√ºfung: Werden gleiche Begriffe einheitlich verwendet? (z.B. \"Abfrage\" vs. \"Query\")\n\nVollst√§ndigkeitspr√ºfung: Hat die Section alle erwarteten Elemente? (z.B. fehlt JSON-LD Metadaten-Block?)\n\nPlausibilit√§tspr√ºfung: Sind die Anweisungen logisch nachvollziehbar? (z.B. Schritt 3 referenziert nicht-existente Schaltfl√§che)\n\nTerminologie-Abgleich: Stimmen die verwendeten Begriffe mit der Terminologie-Entscheidungsliste √ºberein?\n\nCross-Reference-Check: Sind alle internen Verweise (data-ref) korrekt?\n\n\nWelche dieser Aufgaben soll der KI-Agent √ºbernehmen?\n\n\n\nFrage 6: Validierungsfehler-Kategorisierung\n\n\nSollen Validierungsfehler nach Schweregrad kategorisiert werden?\n\n\nBeispiel-Kategorisierung:\n\n\nCRITICAL (Blocker): Section kann nicht publiziert werden\nBeispiel: Fehlende Pflicht-Attribute, ung√ºltiges HTML\n\nERROR (Major): Muss behoben werden, aber nicht sofort blockierend\nBeispiel: Fehlende Alt-Texte, unvollst√§ndige JSON-LD Metadaten\n\nWARNING (Minor): Sollte behoben werden, aber nicht kritisch\nBeispiel: √úberschriften-Hierarchie-Warnung bei >3 Ebenen, fehlende data-ref bei optionalen Elementen\n\nINFO (Nice-to-have): Optimierungsvorschl√§ge\nBeispiel: \"Erw√§ge Medien-Element f√ºr bessere Verst√§ndlichkeit\"\n\n\nIst eine solche Kategorisierung sinnvoll f√ºr Ihr Projekt?\n\n\n\nFrage 7: Test-Szenarien (Positive & Negative Tests)\n\n\nSollen sowohl positive als auch negative Testf√§lle definiert werden?\n\n\nPositive Tests (erwartetes Verhalten):\n\n\n\"Eine valide Section mit allen Pflicht-Elementen wird akzeptiert\"\n\n\"Eine Section mit optionalen Medien wird akzeptiert\"\n\n\nNegative Tests (Fehlerf√§lle):\n\n\n\"Eine Section ohne JSON-LD Metadaten wird abgelehnt\"\n\n\"Eine Section mit √úberschriften-Sprung (h2 ‚Üí h4) wird abgelehnt\"\n\n\"Eine Section mit verwaisten data-ref wird abgelehnt\"\n\n\nSollen diese Testf√§lle explizit dokumentiert werden?\n\n\n\nFrage 8: Validierungs-Output-Format\n\n\nIn welchem Format sollen Validierungsergebnisse ausgegeben werden?\n\n\nAktuell gibt es bereits die Debug-output.XXX-Dateien.\n\n\nSoll das Format strukturiert werden?\n\n\nBeispiel-Struktur:\n\n\n{\n  \"buildNumber\": 123,\n  \"timestamp\": \"2025-10-09T14:30:00Z\",\n  \"sectionId\": \"section-template-types\",\n  \"validationStatus\": \"REVIEW\",\n  \"errors\": [\n    {\n      \"severity\": \"CRITICAL\",\n      \"code\": \"MISSING_ATTRIBUTE\",\n      \"element\": \"<section>\",\n      \"message\": \"Pflicht-Attribut 'data-title' fehlt\",\n      \"line\": 42\n    }\n  ],\n  \"warnings\": [],\n  \"info\": [],\n  \"statistics\": {\n    \"totalElements\": 87,\n    \"validElements\": 85,\n    \"invalidElements\": 2\n  }\n}\n\n\nOder soll das Format frei/textuell bleiben?\n\n\n\nFrage 9: Automatisierung vs. Manuelle Pr√ºfung\n\n\nWelche Pr√ºfungen sollen automatisiert werden, welche manuell?\n\n\nIch vermute folgende Aufteilung:\n\n\nAutomatisiert (Python + JSON-Schema):\n\n\nSyntaktische Korrektheit (HTML, JSON-LD)\n\nPflicht-Attribute vorhanden\n\nBarrierefreiheit-Grundlagen (Alt-Texte vorhanden, lang-Attribute gesetzt)\n\nCross-Reference-Validierung (data-ref existieren)\n\n√úberschriften-Hierarchie\n\n\nManuell (Maintainer):\n\n\nFachliche Korrektheit (stimmen die Anweisungen?)\n\nVerst√§ndlichkeit f√ºr Zielgruppe\n\nMedien-Qualit√§t (sind Screenshots aussagekr√§ftig?)\n\nKonsistenz √ºber Sections hinweg (gleiche Begriffswahl?)\n\n\nIst diese Aufteilung korrekt?\n\n\n\nFrage 10: Versionierungs-Workflow\n\n\nWie wird die Versionierung gehandhabt?\n\n\nSie haben bereits Draft ‚Üí Review ‚Üí Approved ‚Üí Published definiert.\n\n\nZus√§tzliche Fragen:\n\n\nSoll es Versionsnummern geben? (z.B. v1.0, v1.1, v2.0)\n\nWann wird die Versionsnummer erh√∂ht?\nBei jedem inhaltlichen Update?\n\nNur bei semantischen √Ñnderungen?\n\nNach jedem Review-Zyklus?\n\nSollen alte Versionen archiviert werden? (Git-Historie reicht, oder explizite Archivierung?)\n\n\n\nZusammenfassung bisheriger Erkenntnisse\n\n\nBevor Sie antworten, hier meine bisherigen Erkenntnisse aus Ihren Antworten:\n\n\n‚úÖ Validierungsebenen:\n\n\nEbene 1 (Syntaktisch): Bereits implementiert\n\nEbene 2 (Semantisch): KI-Agent + Maintainer\n\nEbene 3 (BFSG): Implizit in regul√§ren Pr√ºfungen abgedeckt\n\n\n‚úÖ Fertigstellungs-Status:\n\n\nDraft ‚Üí Review ‚Üí Approved ‚Üí Published\n\n\n‚úÖ Metadaten-Erweiterung:\n\n\nreviewStatus, lastReviewer, validationScore, knownIssues hinzuf√ºgen\n\n\n‚úÖ Pr√ºfungs-Umfang:\n\n\nAlle Elemente werden einzeln gepr√ºft\n\nZusammenh√§nge zwischen Elementen werden gepr√ºft\n\n\n\nBitte beantworten Sie die f√ºnf neuen Fragen (5-9), dann haben wir ein vollst√§ndiges Bild f√ºr Cluster 4 und ich kann mit der Dokumentation beginnen.",
      "time_iso8601": "2025-10-09T17:54:17"
    },
    {
      "role": "Prompt",
      "say": "Zu 5)\n\n\nKonsistenzpr√ºfung: Ja, wurden Begriffe einheitlich verwendet.\n\nVollst√§ndigkeitspr√ºfung: Das Beispiel JSON-LD ist eine syntaktische und keine semantische Pr√ºfung. Hier geht es um semantische Pr√ºfungen.\n\nPlausibilit√§tspr√ºfung: Das ist schwer, aber vielleicht kann eine KI so etwas unter Zuhilfenahme von Handb√ºchern und weiteren Quellen analysieren.\n\nTerminologie-Abgleich: Ja, das kann ich mir vorstellen. Wir m√ºssen dann aber eine solche Terminologie-Entscheidungsliste pflegen.\n\nCross-Reference-Check. Nein, das ist wieder technisch und wird bereits durch die Python-Skripte gepr√ºft.\n\nAber was die KI machen kann, ist zu pr√ºfen, ob die einzelnen Sections semantisch zusammenpassen und ob sie einem gr√∂√üeren roten Faden folgen. Ob die Gliederungsstruktur \n..\n\nsinnhaft ist und ob der grobe Rahmenplan f√ºr ein Kapitel eingehalten worden ist.\n\nBestimmt lassen sich noch weitere Aufgaben finden, die die KI als Vorpr√ºfung durchf√ºhren kann.\nZu 6)\n\nJa, diese Kategorisierung ist sinnvoll. Die Beispiele verdeutlichen dies.\nZu 7)\n\nDa sehe ich jetzt nicht wirklich einen Mehrwert. Diese Tests sind alle relevant und ich verstehe nicht, wof√ºr es gut sein sollte, die ohnehin notwendigen Pr√ºfungen dahingehend zu unterteilen, ob sie ein Nicht oder kein Nicht in ihrer Definition haben.\nZu 8)\n\nDie Debug-output.xxx Dateien waren f√ºr die Debugprozesse des Browsers und HTML, CSS und Javascript. Wenn das Rahmensystem steht, und \"nur noch\" der Inhalt erzeugt wird, bedarf es anderer Mechanismen. Diese werden vor allem Konsolenausgaben aus Python und Hilfsdokumente in HTML wie media-validation-report.html sein.\n\nIch denke, im Moment m√ºssen wir hier nichts extra definieren. Aus meiner Sicht ist alles dazu bereits abgedeckt.\nZu 9)\n\nJa, das ist korrekt. Eventuell k√∂nnte eine KI ebenfalls eine Pr√ºfung der Konsistenz bei der Wahl der Begriffe vornehmen oder wenigstens auf m√∂gliche Schwachstellen hinweisen.\nZu 10)\n\nJa, es soll Versionsnummern geben. Dreistellig. Die letzte Nummer ist die Build-Nummer. Version 1.0 ist feature complete f√ºr alles, was wir derzeit als kritisch vorgesehen haben. Version 1.1 wird die Nummer wenn alle erg√§nzenden Feature hinzugekommen sind. Version 2.0 wird eine √úberarbeitung sein, in welcher ggf. ein neuer Aufbau verwendet wird.\n\nDie Hauptversionsnummer wird bei breaking changes erh√∂ht. Die Nebennummer wird bei der Ver√∂ffentlichung neuer Funktionen und Inhalte erh√∂ht.\n\nJa, Git wird bereits eingesetzt und das reicht mir aus.\n\n\nGibt es weitere Anmerkungen, Erkl√§rungen, Fragen oder Anregungen?",
      "time_iso8601": "2025-10-09T18:21:38"
    },
    {
      "role": "Response",
      "say": "Vielen Dank f√ºr die detaillierten Antworten! Ihre Klarstellungen sind sehr hilfreich. Ich habe jetzt ein umfassendes Verst√§ndnis von Cluster 4. Lassen Sie mich noch drei abschlie√üende Fragen stellen, um auf 95% Klarheit zu kommen:\n\n\n\nAbschlie√üende Vertiefungsfragen\n\n\nFrage 11: Semantische KI-Pr√ºfung - Datengrundlage\n\n\nSie haben mehrere wertvolle semantische Pr√ºfaufgaben f√ºr die KI identifiziert:\n\n\nKonsistenz der Begriffswahl\n\nPlausibilit√§t der Anweisungen (mit Handb√ºchern/Quellen)\n\nSemantischer Zusammenhang zwischen Sections\n\nSinnhaftigkeit der Gliederungsstruktur\n\nEinhaltung des groben Rahmenplans\n\n\nWelche Datengrundlagen soll die KI f√ºr diese semantische Pr√ºfung erhalten?\n\n\nM√∂gliche Inputs:\n\n\nAlle bereits generierten/approbierten Sections (um Konsistenz zu pr√ºfen)\n\nTerminologie-Entscheidungsliste (die Sie pflegen werden)\n\nRahmenplan/Gliederung f√ºr das jeweilige Kapitel (existiert der bereits? Wie detailliert?)\n\nQuellmaterial (Magnet AXIOM Handbuch, weitere Dokumentationen)\n\nStyle-Guide/Writing-Guide (oder ist das implizit in den Cluster-1-3-Dokumenten enthalten?)\n\n\nWas davon soll die KI bekommen, und gibt es weitere Inputs?\n\n\n\nFrage 12: Validierungs-Workflow - Zeitpunkt der Pr√ºfungen\n\n\nWann sollen die verschiedenen Pr√ºfungen durchlaufen werden?\n\n\nIch vermute folgenden Ablauf:\n\n\nKI generiert Section ‚Üí Status: Draft\n\nSofort: Automatische syntaktische Validierung (Python-Skripte)\nFalls CRITICAL/ERROR: Zur√ºck an KI zur Korrektur\n\nFalls OK/WARNING: Weiter zu Schritt 3\n\nSemantische Vorpr√ºfung durch KI-Agent ‚Üí Status√ºbergang: Draft ‚Üí Review\nErstellt Pr√ºfbericht mit Hinweisen\n\nMaintainer erh√§lt Pr√ºfbericht\n\nManuelle semantische Pr√ºfung durch Maintainer\nLiest KI-Pr√ºfbericht\n\nPr√ºft fachliche Korrektheit\n\nEntscheidet: Approved oder zur√ºck zu Draft (mit Feedback)\n\nBei Approval: Status√ºbergang Review ‚Üí Approved\n\nIntegration in index.html ‚Üí Status√ºbergang: Approved ‚Üí Published\n\n\nIst dieser Workflow korrekt, oder gibt es Abweichungen?\n\n\nZusatzfrage: Kann eine Section direkt von Draft zu Approved springen (z.B. bei trivialen Sections), oder ist der Review-Schritt immer Pflicht?\n\n\n\nFrage 13: Metriken & Erfolgskriterien\n\n\nWelche Metriken sollen erfasst werden, um die Qualit√§t zu messen?\n\n\nM√∂gliche Metriken:\n\n\nPro Section:\n\n\nAnzahl Validierungsfehler (CRITICAL/ERROR/WARNING)\n\nAnzahl Review-Zyklen (wie oft Draft ‚Üí Review ‚Üí Draft)\n\nZeit von Draft bis Published\n\nvalidationScore (0-100, wie Sie vorgeschlagen haben) - Wie soll dieser berechnet werden?\n\n\nAggregiert (√ºber alle Sections):\n\n\nDurchschnittliche Fehlerrate\n\nDurchschnittliche Zeit bis Published\n\nAnzahl Sections in jedem Status (Draft/Review/Approved/Published)\n\nAblehnungsquote (Sections, die mehr als X Review-Zyklen brauchten)\n\n\nWelche dieser Metriken sind f√ºr Sie relevant?\n\n\nZusatzfrage zum validationScore:\nFalls dieser Score automatisch berechnet werden soll - nach welcher Formel?\n\n\nBeispiel:\n\n\nvalidationScore = 100 - (CRITICAL √ó 20) - (ERROR √ó 10) - (WARNING √ó 5)\nMinimum: 0\nMaximum: 100\n\n\nOder soll der Score manuell vom Maintainer/KI-Agent vergeben werden?\n\n\n\nZwischenstand: Was ich bereits verstanden habe\n\n\nLassen Sie mich zusammenfassen, was ich bisher f√ºr Cluster 4 verstanden habe:\n\n\n‚úÖ Validierungsebenen (gekl√§rt)\n\n\nSyntaktisch: Python-Skripte + JSON-Schema (bereits implementiert)\n\nSemantisch: KI-Agent (Vorpr√ºfung) + Maintainer (Final)\n\nBFSG: Implizit in syntaktischer Validierung enthalten\n\n\n‚úÖ Fertigstellungs-Status (gekl√§rt)\n\n\nDraft ‚Üí Review ‚Üí Approved ‚Üí Published\n\n\n‚úÖ Fehler-Kategorisierung (gekl√§rt)\n\n\nCRITICAL (Blocker)\n\nERROR (Major, muss behoben werden)\n\nWARNING (Minor, sollte behoben werden)\n\nINFO (Nice-to-have)\n\n\n‚úÖ Metadaten-Erweiterung (gekl√§rt)\n\n\nZus√§tzlich zu bestehenden Metadaten (created, lastUpdated, version, sources):\n\n\nreviewStatus (Draft/Review/Approved/Published)\n\nlastReviewer (wer hat gepr√ºft)\n\nvalidationScore (0-100)\n\nknownIssues (Liste offener Probleme)\n\n\n‚úÖ Versionierung (gekl√§rt)\n\n\nDreistellig: MAJOR.MINOR.BUILD\n\nMAJOR: Breaking changes\n\nMINOR: Neue Features/Inhalte\n\nBUILD: Inkrementell pro Test\n\nArchivierung: Git reicht aus\n\n\n‚úÖ Automatisierung vs. Manuelle Pr√ºfung (gekl√§rt)\n\n\nAutomatisiert: Syntaktisch, Pflicht-Attribute, Cross-References, √úberschriften-Hierarchie\n\nManuell: Fachliche Korrektheit, Verst√§ndlichkeit, Medien-Qualit√§t\n\nKI-Agent: Konsistenz, Plausibilit√§t, Terminologie, semantischer Zusammenhang, Gliederungsstruktur\n\n\n‚úÖ Output-Format (gekl√§rt)\n\n\nKeine zus√§tzliche Definition n√∂tig\n\nKonsolenausgaben (Python)\n\nHTML-Reports (z.B. media-validation-report.html)\n\n\n‚è≥ Noch offen (Fragen 11-13)\n\n\nDatengrundlage f√ºr KI-Pr√ºfung\n\nGenauer Validierungs-Workflow und Zeitpunkte\n\nMetriken & validationScore-Berechnung\n\n\n\nBitte beantworten Sie die drei finalen Fragen (11-13), dann habe ich alle Informationen f√ºr ein vollst√§ndiges Cluster-4-Ergebnisdokument.",
      "time_iso8601": "2025-10-09T18:22:13"
    },
    {
      "role": "Prompt",
      "say": "Zu 11)\n\n\nJa, alle bereits generierten Sections.\n\nJa, die Terminologie-Entscheidungsliste.\n\nJa, den Rahmenplan und die Gliederung\n\nJa, das Quellmaterial\n\nJa, Style-Guides/Writing-Guide/Mediennutzungs-Guide, und so weiter.\n\nAu√üerdem, erwartetes Antwortschema f√ºr den Output, um eine Standardisierung des weiteren Prozesses zu erm√∂glichen.\nDas m√ºsste eigentlich ausreichend sein.\nZu 12)\n\nZu 2.1) Wir sollten dann den Output der Validierung ebenfalls an die KI √ºbergeben, andernfalls m√ºssen die Fehler durch den Maintainer behoben werden. Fehler m√ºssen dokumentiert werden, um der KI zu helfen, den Fehler beim n√§chsten Mal nicht mehr zu wiederholen.\n\nJa, schon nicht verkehrt. Was noch fehlt ist das Erstellen und Bereitstellen von Medien. Das ist eine wichtige Aufgabe. Das geh√∂rt in jedem Fall mit rein in den Teil 4, also die Review.\n\nNein, der Prozess ist strikt einzuhalten. Es gibt kein automatisches Approval.\nZu 13)\n\nJa, die vorgeschlagenen Metriken sollen erfasst werden.\n\nValidationScore: Umfang, Anzahl Medien, Verh√§ltnis von Medien je Satz, ... da muss ich mir aber noch im Detail Gedanken dazu machen. Bitte vermerke, dass wir das noch auf die Agenda stellen. Danke.\n\nStatistiken sind super und ich liebe sie, aber im Moment liegt mein Fokus tats√§chlich eher darauf, eine erste einsatzf√§hige Version zu entwickeln. Ich nehme gern jede Metrik mit auf, die nebenbei mit abf√§llt, aber wie ich das aufbereitet haben m√∂chte, dazu will ich mir im Augenblick gerade nicht so detaillierte Gedanken machen. Du kannst mir gern etwas anbieten und ich werde es wahrscheinlich annehmen, aber es wird dann bestimmt noch weiterentwickelt werden.\n\nKurzum, im Moment w√ºrde ich den validationScore durch die Python Validitor Scripte berechnen lassen. Da w√§re deine einfache Formel f√ºr den Anfang ganz plausibel.\n\n\nGibt es noch weitere Fragen, Anmerkungen, Anregungen oder Ideen, auf die ich eingehen sollte?",
      "time_iso8601": "2025-10-09T18:58:24"
    },
    {
      "role": "Response",
      "say": "Vielen Dank f√ºr die klaren Antworten! Ich habe jetzt alle notwendigen Informationen. Bevor ich mit der Dokumentation von Cluster 4 beginne, m√∂chte ich Ihnen noch drei finale Gedanken und einen Strukturvorschlag pr√§sentieren:\n\n\n\nAbschlie√üende √úberlegungen & Vorschl√§ge\n\n\nüí° Gedanke 1: Medien-Bereitstellung im Workflow\n\n\nSie haben zu Recht darauf hingewiesen, dass die Medien-Erstellung ein wichtiger Teil des Review-Prozesses ist.\n\n\nMein Vorschlag zur Integration:\n\n\nDraft ‚Üí Syntaktische Validierung ‚Üí Review (inkl. Medien-Erstellung) \n  ‚Üí Semantische KI-Pr√ºfung ‚Üí Maintainer-Pr√ºfung ‚Üí Approved ‚Üí Published\n\n\nKonkret:\n\n\nIm Review-Status erstellt der Maintainer (oder ein dediziertes Tool/Person) die ben√∂tigten Medien\n\nDie KI hat in Draft bereits Medien-Platzhalter mit MEDIA:-Kommentaren gesetzt\n\nDiese Platzhalter enthalten pr√§zise Anweisungen f√ºr Screenshots/Annotationen/Videos\n\nDer Maintainer arbeitet diese ab und ersetzt Platzhalter durch echte Medien\n\nErst danach erfolgt die semantische KI-Pr√ºfung (die dann auch Medien bewerten kann)\n\n\nIst diese Reihenfolge korrekt?\n\n\n\nüí° Gedanke 2: Fehler-Dokumentation f√ºr KI-Lernprozess\n\n\nSie sagten: \"Fehler m√ºssen dokumentiert werden, um der KI zu helfen, den Fehler beim n√§chsten Mal nicht mehr zu wiederholen.\"\n\n\nDas ist ein wichtiger Punkt! Ich schlage vor, eine Fehler-Datenbank/Log anzulegen:\n\n\nBeispiel-Struktur:\n\n\n{\n  \"errorLog\": [\n    {\n      \"timestamp\": \"2025-10-09T15:30:00Z\",\n      \"sectionId\": \"section-template-types\",\n      \"buildNumber\": 123,\n      \"errorType\": \"MISSING_ATTRIBUTE\",\n      \"errorDetails\": \"data-title fehlt bei <section>\",\n      \"kiResponse\": \"KI hat vergessen, data-title zu setzen\",\n      \"resolution\": \"Maintainer hat data-title='Template-Typen' erg√§nzt\",\n      \"preventionNote\": \"Prompt muss data-title als PFLICHT-Attribut deutlicher hervorheben\"\n    }\n  ]\n}\n\n\nVerwendung:\n\n\nBei jedem Validierungsfehler wird ein Eintrag erstellt\n\nDiese Logs k√∂nnen sp√§ter ausgewertet werden, um wiederkehrende Fehler zu identifizieren\n\nDer Prompt kann dann iterativ verbessert werden\n\n\nSoll ich diese Fehler-Dokumentation in Cluster 4 mit aufnehmen?\n\n\n\nüí° Gedanke 3: ValidationScore - Agenda-Punkt\n\n\nSie haben gesagt, dass Sie sich zu validationScore noch detaillierte Gedanken machen m√∂chten.\n\n\nIch schlage vor:\n\n\nF√ºr Cluster 4 dokumentiere ich die einfache Formel als Startpunkt\n\nIch lege einen separaten Abschnitt \"Zuk√ºnftige Erweiterungen\" an\n\nDort vermerke ich: \"ValidationScore-Berechnung: Umfang, Medien-Dichte, weitere Metriken - Details folgen\"\n\n\nSo ist es dokumentiert, aber nicht blockierend.\n\n\n\nüìã Strukturvorschlag f√ºr Cluster-4-Dokument\n\n\nBevor ich das Dokument erstelle, hier mein Strukturvorschlag:\n\n\n# Cluster 4: Qualit√§tssicherung & Testing (ABGESCHLOSSEN)\n\n## 1. √úbersicht & Zielsetzung\n- Zweck der Qualit√§tssicherung\n- Integration in den Gesamt-Workflow\n\n## 2. Validierungsebenen\n### 2.1 Syntaktische Validierung (Automatisiert)\n- Python-Skripte + JSON-Schema\n- Pr√ºfumfang & Fehler-Kategorien\n### 2.2 Semantische Validierung (KI-Agent + Maintainer)\n- KI-Agent: Aufgaben & Datengrundlagen\n- Maintainer: Manuelle Pr√ºfungen\n### 2.3 BFSG-Konformit√§t (Implizit)\n- Integration in syntaktische Pr√ºfungen\n\n## 3. Testkriterien f√ºr generierte Sections\n### 3.1 Syntaktische Kriterien\n- Pflicht-Attribute vollst√§ndig\n- HTML-Struktur valide\n- Cross-References korrekt\n### 3.2 Semantische Kriterien\n- Konsistenz der Begriffswahl\n- Plausibilit√§t der Anweisungen\n- Zusammenhang zwischen Sections\n- Gliederungsstruktur sinnvoll\n\n## 4. Validierungsprozess (Workflow)\n### 4.1 Ablauf\n- Draft ‚Üí Syntaktische Validierung ‚Üí Review (Medien) \n  ‚Üí Semantische KI-Pr√ºfung ‚Üí Maintainer ‚Üí Approved ‚Üí Published\n### 4.2 Fehler-Kategorisierung\n- CRITICAL / ERROR / WARNING / INFO\n### 4.3 Fehler-Dokumentation\n- Fehler-Log f√ºr KI-Lernprozess\n- Prompt-Verbesserung basierend auf Logs\n\n## 5. Metadaten (Quellen, Versionen, Erstellungsdatum)\n### 5.1 Bestehende Metadaten\n- created, lastUpdated, version, sources\n### 5.2 Neue Metadaten (Cluster 4)\n- reviewStatus, lastReviewer, validationScore, knownIssues\n### 5.3 JSON-LD Erweiterung\n\n## 6. Iterationslogik (Wann ist eine Section \"fertig\"?)\n### 6.1 Status-√úberg√§nge\n- Draft ‚Üí Review ‚Üí Approved ‚Üí Published\n### 6.2 Review-Zyklen\n- Kein automatisches Approval\n- Strikte Einhaltung des Prozesses\n\n## 7. Versionierung\n### 7.1 Versionsschema\n- MAJOR.MINOR.BUILD\n### 7.2 Versionsnummern-Erh√∂hung\n- MAJOR: Breaking changes\n- MINOR: Neue Features/Inhalte\n- BUILD: Inkrementell\n### 7.3 Archivierung\n- Git-basiert\n\n## 8. Metriken & Erfolgskriterien\n### 8.1 Pro Section\n- Anzahl Validierungsfehler\n- Review-Zyklen\n- Zeit Draft ‚Üí Published\n- validationScore (einfache Formel)\n### 8.2 Aggregiert\n- Durchschnittliche Fehlerrate\n- Durchschnittliche Zeit\n- Status-Verteilung\n### 8.3 Reporting\n- Konsolenausgaben (Python)\n- HTML-Reports (media-validation-report.html)\n\n## 9. Datengrundlagen f√ºr KI-Pr√ºfung\n- Alle generierten Sections\n- Terminologie-Entscheidungsliste\n- Rahmenplan & Gliederung\n- Quellmaterial\n- Style-Guides\n- Erwartetes Antwortschema\n\n## 10. Zuk√ºnftige Erweiterungen\n- ValidationScore-Berechnung (detailliert)\n- Weitere Metriken nach Bedarf\n\n## 11. Zusammenfassung & N√§chste Schritte\n- Was wurde erreicht\n- Offene Punkte f√ºr Cluster 5\n\n\n\nMeine Frage an Sie\n\n\nIst diese Struktur f√ºr Sie passend, oder m√∂chten Sie Anpassungen?\n\n\nFalls Sie einverstanden sind, erstelle ich jetzt das vollst√§ndige Cluster-4-Dokument als Artifact, analog zu den Dokumenten f√ºr Cluster 1-3.\n\n\nZusatzfragen:\n\n\nSoll ich die Fehler-Dokumentation (Gedanke 2) mit aufnehmen?\n\nIst die Medien-Workflow-Integration (Gedanke 1) korrekt verstanden?\n\nGibt es noch letzte Erg√§nzungen, die ich ber√ºcksichtigen soll?\n\n\nSobald Sie gr√ºnes Licht geben, starte ich mit der Dokumentation! üöÄ",
      "time_iso8601": "2025-10-09T18:59:06"
    },
    {
      "role": "Prompt",
      "say": "Frage zu Gedanke 1: Ist die KI in der Lage dazu Medien zu analysieren? Das wusste ich nicht. Ich dachte, sie k√∂nnte nur Sprache und Code verarbeiten. Wenn die KI das kann, dann stimme ich deinem Vorschlag zu. Andernfalls w√ºrde ich die semantische KI-Pr√ºfung nach der syntaktischen Validierung durchf√ºhren und zwar ohne Medien. Denn ich w√ºrde den Maintainer ungern Medieninhalte erstellen lassen, die man sp√§ter doch wieder verwirft, weil sie redundant oder unpassend sind.\n\n\nZu Gedanke 2: Sehr guter Vorschlag. Ein Fehler-Log ist super. Eine Datenbank w√ºrde ich jetzt nicht noch extra aufsetzen wollen. Das √ºbersteigt gerade meine verf√ºgbare Zeit. Ich w√ºrde das gern eher flach halten. Wir k√∂nnen das aber gern als JSON speichern. Das ist ein guter und einfacher Kompromiss, denke ich. Bitte nimm diese Art der Fehlerdokumentation mit auf. Danke!\n\n\nZu Gedanke 3. Super, genau so. Sehr pragmatisch und mit dem notwendigen Feingef√ºhl f√ºr meine Bed√ºrfnisse und die des Projekts. Toll! :-D Vielen Dank!\n\n\nWenn du keine weiteren Fragen oder √Ñhnliches hast, wof√ºr du meinen Input ben√∂tigst, dann erstelle bitte das MarkDown-Dokument f√ºr Cluster-4 als Artifact. :-)",
      "time_iso8601": "2025-10-09T19:08:59"
    },
    {
      "role": "Response",
      "say": "Vielen Dank f√ºr das positive Feedback! üòä Lassen Sie mich kurz Gedanke 1 kl√§ren, bevor ich das Dokument erstelle:\n\n\n\nKlarstellung zu Gedanke 1: KI & Medienanalyse\n\n\nJa, moderne KI-Modelle (wie Claude Sonnet 4.5) k√∂nnen Bilder analysieren!\n\n\nDie KI kann:\n\n\nScreenshots bewerten: Ist der relevante UI-Bereich sichtbar? Ist die Aufl√∂sung ausreichend?\n\nAnnotationen pr√ºfen: Sind Markierungen/Pfeile klar und verst√§ndlich?\n\nAlt-Texte validieren: Passt der Alt-Text zum Bild-Inhalt?\n\nMedien-Plausibilit√§t: Passt das Bild zur Textbeschreibung?\n\n\nWas die KI NICHT kann:\n\n\nVideos in Echtzeit abspielen/analysieren (nur Standbilder/Thumbnails)\n\nHochkomplexe forensische Fachpr√ºfungen (z.B. \"Ist dieser Hex-Dump korrekt?\")\n\n\n\nMein √ºberarbeiteter Vorschlag\n\n\nBasierend auf Ihren Anforderungen (Maintainer soll keine redundanten Medien erstellen):\n\n\nWorkflow-Option A (mit KI-Medienpr√ºfung):\n\n\n1. Draft (KI generiert Section mit Medien-Platzhaltern)\n2. Syntaktische Validierung (Python)\n3. Semantische KI-Pr√ºfung (OHNE Medien, nur Text/Struktur)\n   ‚Üí KI bewertet: Sind Medien-Platzhalter sinnvoll platziert?\n4. Review: Maintainer erstellt Medien (basierend auf KI-Feedback)\n5. Semantische KI-Pr√ºfung Teil 2 (MIT Medien)\n   ‚Üí KI pr√ºft: Passen Medien zum Text?\n6. Maintainer Final-Pr√ºfung\n7. Approved ‚Üí Published\n\n\nVorteil: KI pr√ºft ZWEIMAL - einmal die Konzeption, einmal die Umsetzung\nNachteil: Zwei KI-Pr√ºfungen = mehr Aufwand\n\n\n\nWorkflow-Option B (pragmatisch, ohne KI-Medienpr√ºfung):\n\n\n1. Draft (KI generiert Section mit Medien-Platzhaltern)\n2. Syntaktische Validierung (Python)\n3. Semantische KI-Pr√ºfung (Text/Struktur, bewertet Platzhalter-Platzierung)\n4. Review: Maintainer erstellt Medien + pr√ºft alles final\n5. Approved ‚Üí Published\n\n\nVorteil: Einfacher, weniger KI-Pr√ºfungen\nNachteil: KI pr√ºft Medien nicht\n\n\n\nMeine Empfehlung\n\n\nStarten Sie mit Option B (pragmatisch), weil:\n\n\nWeniger komplex im ersten Durchlauf\n\nMaintainer hat finale Kontrolle √ºber Medien\n\nKI pr√ºft Konzept (Platzhalter sinnvoll?), Maintainer pr√ºft Umsetzung\n\n\nSp√§ter k√∂nnen Sie auf Option A upgraden, wenn Sie merken, dass eine zweite KI-Pr√ºfung nach Medien-Erstellung Mehrwert bringt.\n\n\n\nMeine finale Frage\n\n\nWelche Workflow-Option soll ich in Cluster 4 dokumentieren?\n\n\nOption A (zwei KI-Pr√ºfungen: vor + nach Medien-Erstellung)\n\nOption B (eine KI-Pr√ºfung: nur Text/Struktur, Maintainer pr√ºft Medien final)\n\nBeide (Option B als Standard, Option A als \"Zuk√ºnftige Erweiterung\")\n\n\nSobald Sie sich entschieden haben, erstelle ich sofort das Cluster-4-Dokument als Artifact! üöÄ",
      "time_iso8601": "2025-10-09T19:09:21"
    },
    {
      "role": "Prompt",
      "say": "Beide, ich finde deine Idee mit A n√§mlich klasse. Danke!",
      "time_iso8601": "2025-10-09T19:10:51"
    },
    {
      "role": "Response",
      "say": "Perfekt! Dann dokumentiere ich beide Optionen - Option B als aktuellen Standard und Option A als geplante Erweiterung. Das gibt Ihnen die Flexibilit√§t, sp√§ter zu upgraden, wenn sich der Mehrwert zeigt.\n\n\nJetzt erstelle ich das vollst√§ndige Cluster-4-Dokument! üöÄ\n\n\nCluster 4 - Qualit√§tssicherung & Testing (Abgeschlossen)\n\n\n# Prompt-Entwicklung: Interaktives Handbuch f√ºr Forensik-Software\n## Cluster 4: Qualit√§tssicherung & Testing (ABGESCHLOSSEN)\n\n**Projekt:** WebAssistentForensics - Content-Generierung mit KI  \n**Datum:** 09. Oktober 2025  \n**Status:** Cluster 4 finalisiert, bereit f√ºr Cluster 5  \n**Bearbeitungszeit:** ~1,5 Stunden\n\n---\n\n## Projektziel (Reminder)\n\nEntwicklung eines umfassenden, pr√§zisen Prompts f√ºr KI (Sonnet 4.5) zur Generierung von hochwertigem Content f√ºr ein interaktives Handbuch zur forensischen Software **Magnet Axiom Examine**. \n\n**Cluster 4 fokussiert sich darauf, wie generierte Sections getestet, validiert und zur Publikationsreife gebracht werden.**\n\n---\n\n## 1. √úbersicht & Zielsetzung\n\n### 1.1 Zweck der Qualit√§tssicherung\n\nDie Qualit√§tssicherung dient dazu, **vom Ergebnis zur√ºck zum Auftrag zu arbeiten** und dabei:\n- **L√ºcken in den Anforderungen** zu identifizieren\n- **Testkriterien** zu definieren, die Qualit√§t messbar machen\n- **Iterative Verbesserung** des Prompts zu erm√∂glichen\n- **Konsistenz** √ºber ~100-150 Sections sicherzustellen\n\n### 1.2 Integration in den Gesamt-Workflow\n\nQualit√§tssicherung ist eine **der KI-Aktivit√§t nachgelagerte T√§tigkeit**, die aber wichtige R√ºckschl√ºsse f√ºr die Prompt-Entwicklung liefert.\n\n**Workflow-√úbersicht:**\n```\nPrompt ‚Üí KI generiert Section ‚Üí Qualit√§tssicherung ‚Üí Feedback ‚Üí Prompt-Verbesserung\n```\n\n---\n\n## 2. Validierungsebenen\n\n### 2.1 Syntaktische Validierung (Automatisiert)\n\n**Verantwortlich:** Python-Skripte + JSON-Schema  \n**Status:** Bereits implementiert  \n**Zeitpunkt:** Sofort nach KI-Generierung\n\n**Pr√ºfumfang:**\n- HTML-Struktur valide (alle Tags geschlossen, korrekte Verschachtelung)\n- Pflicht-Attribute vollst√§ndig (z.B. `data-title`, `data-section`, `data-level`)\n- JSON-Schema-Konformit√§t (JSON-LD Metadaten vollst√§ndig)\n- Cross-Reference-Validierung (alle `data-ref` existieren und sind eindeutig)\n- √úberschriften-Hierarchie korrekt (keine Spr√ºnge h2 ‚Üí h4)\n- Barrierefreiheit-Grundlagen:\n  - Alt-Texte vorhanden (10-120 Zeichen)\n  - `lang`-Attribute bei fremdsprachigen Begriffen\n  - `scope`-Attribute bei Tabellen\n- Attribut-Reihenfolge (class ‚Üí id ‚Üí data-* ‚Üí sonstige)\n- CSS-Klassen aus Whitelist\n\n**Fehler-Kategorien:**\n- `CRITICAL`: Blocker, Section kann nicht publiziert werden\n- `ERROR`: Major, muss behoben werden\n- `WARNING`: Minor, sollte behoben werden\n- `INFO`: Nice-to-have, Optimierungsvorschl√§ge\n\n**Output:**\n- Konsolenausgabe (Python)\n- Optional: HTML-Reports (z.B. `validation-report-123.html`)\n\n**Bei CRITICAL/ERROR:**\n- Validierungs-Output wird an KI √ºbergeben\n- KI korrigiert Fehler\n- Erneute Validierung\n- **Fehler-Dokumentation** (siehe Abschnitt 4.3)\n\n---\n\n### 2.2 Semantische Validierung (KI-Agent + Maintainer)\n\n**Verantwortlich:** KI-Agent (Vorpr√ºfung) + Maintainer (Final)  \n**Zeitpunkt:** Nach syntaktischer Validierung, vor Publikation\n\n#### 2.2.1 KI-Agent: Aufgaben\n\n**Konsistenzpr√ºfung:**\n- Werden gleiche Begriffe einheitlich verwendet?\n- Beispiel: \"Abfrage\" vs. \"Query\" - konsistent √ºber alle Sections?\n\n**Plausibilit√§tspr√ºfung:**\n- Sind die Anweisungen logisch nachvollziehbar?\n- Beispiel: Schritt 3 referenziert nicht-existente Schaltfl√§che ‚Üí FEHLER\n- **Datengrundlage:** Magnet AXIOM Handbuch, weitere Quellen\n\n**Terminologie-Abgleich:**\n- Stimmen verwendete Begriffe mit Terminologie-Entscheidungsliste √ºberein?\n- Beispiel: Liste sagt \"Cache (engl.)\", Section verwendet \"Zwischenspeicher\" ‚Üí WARNUNG\n\n**Semantischer Zusammenhang:**\n- Passen Sections innerhalb eines Kapitels zusammen?\n- Folgen sie einem roten Faden?\n- Beispiel: Section \"Export starten\" vor Section \"Export vorbereiten\" ‚Üí WARNUNG\n\n**Gliederungsstruktur:**\n- Ist die `<h1>`-`<h6>`-Hierarchie sinnvoll?\n- Sind √úberschriften aussagekr√§ftig?\n- Beispiel: Drei aufeinanderfolgende `<h3>` mit nahezu identischem Inhalt ‚Üí HINWEIS zur Zusammenfassung\n\n**Medien-Platzhalter-Bewertung:**\n- Sind Medien-Platzhalter sinnvoll platziert?\n- Sind `MEDIA:`-Kommentare pr√§zise genug?\n- Beispiel: \"Hier Screenshot einf√ºgen\" ohne weitere Details ‚Üí WARNUNG\n\n**Rahmenplan-Einhaltung:**\n- Entspricht die Section dem groben Rahmenplan f√ºr das Kapitel?\n- Sind alle erwarteten Themen abgedeckt?\n\n#### 2.2.2 KI-Agent: Datengrundlagen\n\n**Input f√ºr semantische Pr√ºfung:**\n- **Alle bereits generierten/approbierten Sections** (f√ºr Konsistenzpr√ºfung)\n- **Terminologie-Entscheidungsliste** (wird vom Maintainer gepflegt)\n- **Rahmenplan & Gliederung** f√ºr das jeweilige Kapitel\n- **Quellmaterial** (Magnet AXIOM Handbuch, weitere Dokumentationen)\n- **Style-Guides:**\n  - Writing-Guide (aus Cluster 1)\n  - Mediennutzungs-Guide (aus Cluster 1)\n  - HTML-Syntax-Guide (aus Cluster 3)\n- **Erwartetes Antwortschema** f√ºr standardisierten Output\n\n**Output-Format (KI-Agent):**\n```json\n{\n  \"sectionId\": \"section-template-types\",\n  \"timestamp\": \"2025-10-09T15:30:00Z\",\n  \"semanticReview\": {\n    \"consistency\": {\n      \"score\": 85,\n      \"issues\": [\n        {\n          \"severity\": \"WARNING\",\n          \"message\": \"Begriff 'Abfrage' in Section A, 'Query' in Section B verwendet\",\n          \"suggestion\": \"Einheitlich 'Abfrage' verwenden (siehe Terminologie-Liste)\"\n        }\n      ]\n    },\n    \"plausibility\": {\n      \"score\": 90,\n      \"issues\": []\n    },\n    \"terminology\": {\n      \"score\": 95,\n      \"issues\": []\n    },\n    \"structure\": {\n      \"score\": 80,\n      \"issues\": [\n        {\n          \"severity\": \"INFO\",\n          \"message\": \"Drei aufeinanderfolgende <h3> mit √§hnlichem Inhalt\",\n          \"suggestion\": \"Erw√§ge Zusammenfassung unter einer <h3>\"\n        }\n      ]\n    },\n    \"mediaPlaceholders\": {\n      \"score\": 75,\n      \"issues\": [\n        {\n          \"severity\": \"WARNING\",\n          \"message\": \"Medien-Platzhalter Zeile 42: 'Screenshot einf√ºgen' zu unspezifisch\",\n          \"suggestion\": \"Pr√§zisiere: Welches UI-Element? Welche Annotations-Elemente?\"\n        }\n      ]\n    },\n    \"frameworkCompliance\": {\n      \"score\": 100,\n      \"issues\": []\n    }\n  },\n  \"overallScore\": 87,\n  \"recommendation\": \"REVIEW - Minor issues found, review recommended\"\n}\n```\n\n#### 2.2.3 Maintainer: Manuelle Pr√ºfungen\n\n**Fachliche Korrektheit:**\n- Stimmen die Anweisungen mit der tats√§chlichen Software √ºberein?\n- Sind Screenshots/Annotationen korrekt?\n\n**Verst√§ndlichkeit f√ºr Zielgruppe:**\n- Ist die Sprache einfach genug f√ºr IT-ferne Ermittler?\n- Sind komplexe Konzepte ausreichend erkl√§rt?\n\n**Medien-Qualit√§t:**\n- Sind Screenshots aussagekr√§ftig?\n- Sind Annotationen klar und verst√§ndlich?\n- Sind Videos mit Untertiteln versehen?\n\n**Konsistenz √ºber Sections:**\n- Gleiche Begriffswahl √ºber Kapitel hinweg?\n- Einheitliche Tonalit√§t?\n\n**Final-Entscheidung:**\n- Approved ‚Üí Status√ºbergang zu `Approved`\n- Reject ‚Üí Zur√ºck zu `Draft` mit Feedback\n\n---\n\n### 2.3 BFSG-Konformit√§t (Implizit)\n\n**Verantwortlich:** Syntaktische Validierung (Python)  \n**Status:** Implizit in Cluster 3 definiert, in syntaktischer Validierung integriert\n\n**Pr√ºfumfang:**\n- Sprachauszeichnung (`lang`-Attribute bei fremdsprachigen Begriffen)\n- Alt-Texte vorhanden und aussagekr√§ftig\n- √úberschriften-Hierarchie korrekt\n- Tabellen mit `<caption>` und `scope`-Attributen\n- Formulare mit `<label>`-Elementen\n\n**Keine expliziten BFSG-Validierungen notwendig**, da alle Anforderungen in regul√§ren syntaktischen Pr√ºfungen abgedeckt sind.\n\n---\n\n## 3. Testkriterien f√ºr generierte Sections\n\n### 3.1 Syntaktische Kriterien\n\n**Pflicht-Attribute vollst√§ndig:**\n- Jede `<section>` hat: `class`, `id`, `data-section`, `data-level`, `data-parent`, `data-title`\n- Jedes `<img>` hat: `src`, `alt`, `data-media-type`\n- Jede `<figcaption>` hat: `aria-describedby` (falls vorhanden)\n\n**HTML-Struktur valide:**\n- Alle Tags korrekt geschlossen\n- Korrekte Verschachtelung (z.B. `<p>` nicht in `<span>`)\n- Nur Elemente aus Whitelist (32 erlaubte Elemente)\n\n**Cross-References korrekt:**\n- Alle `data-ref` existieren\n- Keine Duplikate\n- Pattern: `^[a-z0-9-]+$`\n\n**JSON-LD Metadaten vollst√§ndig:**\n- Pflichtfelder vorhanden: `@context`, `@type`, `identifier`, `name`, `version`\n- Optional, aber empfohlen: `estimatedTime`, `difficultyLevel`, `author`\n\n**Barrierefreiheit:**\n- Alt-Texte: 10-120 Zeichen\n- `lang`-Attribute bei fremdsprachigen Begriffen\n- √úberschriften-Hierarchie: keine Spr√ºnge\n\n---\n\n### 3.2 Semantische Kriterien\n\n**Konsistenz der Begriffswahl:**\n- Gleicher Begriff = gleiche Bedeutung\n- Abgleich mit Terminologie-Entscheidungsliste\n\n**Plausibilit√§t der Anweisungen:**\n- Logische Reihenfolge\n- Keine Referenzen auf nicht-existente UI-Elemente\n- Abgleich mit Quellmaterial (Handbuch)\n\n**Zusammenhang zwischen Sections:**\n- Roter Faden erkennbar\n- Keine Widerspr√ºche\n- Aufeinander aufbauend\n\n**Gliederungsstruktur sinnvoll:**\n- √úberschriften aussagekr√§ftig\n- Hierarchie logisch\n- Keine redundanten Sections\n\n**Medien-Platzhalter pr√§zise:**\n- `MEDIA:`-Kommentare mit klaren Anweisungen\n- Platzierung sinnvoll im Kontext\n\n---\n\n## 4. Validierungsprozess (Workflow)\n\n### 4.1 Ablauf (Standard: Option B)\n\n**Aktuell empfohlener Workflow:**\n\n```\n1. Draft\n   - KI generiert Section (inkl. Medien-Platzhalter)\n   - Status: Draft\n\n2. Syntaktische Validierung (Automatisiert)\n   - Python-Skripte + JSON-Schema\n   - Bei CRITICAL/ERROR: Zur√ºck zu Schritt 1 (mit Fehler-Log)\n   - Bei OK/WARNING: Weiter zu Schritt 3\n\n3. Semantische KI-Pr√ºfung (Text & Struktur)\n   - KI-Agent pr√ºft: Konsistenz, Plausibilit√§t, Terminologie, Struktur\n   - KI-Agent bewertet: Medien-Platzhalter sinnvoll platziert?\n   - Output: JSON-Report mit Issues & Scores\n   - Status√ºbergang: Draft ‚Üí Review\n\n4. Review: Medien-Erstellung & Maintainer-Pr√ºfung\n   - Maintainer erstellt Medien (basierend auf Platzhaltern)\n   - Maintainer pr√ºft fachliche Korrektheit\n   - Maintainer liest KI-Report und bewertet Issues\n   - Entscheidung:\n     * Approved ‚Üí Weiter zu Schritt 5\n     * Reject ‚Üí Zur√ºck zu Schritt 1 (mit Feedback)\n\n5. Approved\n   - Section ist bereit zur Integration\n   - Status√ºbergang: Review ‚Üí Approved\n\n6. Published\n   - Section wird in index.html integriert\n   - Status√ºbergang: Approved ‚Üí Published\n```\n\n**Wichtig:** Kein automatisches Approval! Der Prozess ist **strikt einzuhalten**.\n\n---\n\n### 4.2 Ablauf (Erweitert: Option A)\n\n**Geplante Erweiterung f√ºr zuk√ºnftige Iteration:**\n\n```\n1. Draft (wie Option B)\n\n2. Syntaktische Validierung (wie Option B)\n\n3. Semantische KI-Pr√ºfung Teil 1 (OHNE Medien)\n   - KI pr√ºft Text/Struktur\n   - KI bewertet Medien-Platzhalter-Konzeption\n   - Status√ºbergang: Draft ‚Üí Review\n\n4. Review: Medien-Erstellung\n   - Maintainer erstellt Medien\n\n5. Semantische KI-Pr√ºfung Teil 2 (MIT Medien)\n   - KI analysiert erstellte Medien:\n     * Screenshot zeigt relevanten UI-Bereich?\n     * Annotationen klar und verst√§ndlich?\n     * Alt-Text passt zum Bild?\n     * Medien passt zur Textbeschreibung?\n   - Output: JSON-Report Teil 2\n\n6. Maintainer Final-Pr√ºfung\n   - Liest beide KI-Reports\n   - Entscheidet: Approved oder Reject\n\n7. Approved ‚Üí Published (wie Option B)\n```\n\n**Vorteil:** KI pr√ºft Konzeption UND Umsetzung  \n**Nachteil:** Zwei KI-Pr√ºfungen = mehr Aufwand\n\n**Empfehlung:** Starten mit Option B, sp√§ter Upgrade auf Option A wenn Mehrwert erkennbar.\n\n---\n\n### 4.3 Fehler-Dokumentation (Fehler-Log)\n\n**Zweck:**\n- Fehler dokumentieren, um der KI zu helfen, Fehler beim n√§chsten Mal nicht zu wiederholen\n- Wiederkehrende Fehler identifizieren\n- Prompt iterativ verbessern\n\n**Format:** JSON-Datei (`error-log.json`)\n\n**Beispiel-Struktur:**\n```json\n{\n  \"errorLog\": [\n    {\n      \"timestamp\": \"2025-10-09T15:30:00Z\",\n      \"sectionId\": \"section-template-types\",\n      \"buildNumber\": 123,\n      \"errorType\": \"MISSING_ATTRIBUTE\",\n      \"severity\": \"CRITICAL\",\n      \"errorDetails\": \"Pflicht-Attribut 'data-title' fehlt bei <section> (Zeile 5)\",\n      \"kiResponse\": \"KI hat vergessen, data-title zu setzen\",\n      \"resolution\": \"Maintainer hat data-title='Template-Typen' manuell erg√§nzt\",\n      \"preventionNote\": \"Prompt muss data-title als PFLICHT-Attribut deutlicher hervorheben - Beispiel hinzuf√ºgen\",\n      \"promptVersion\": \"v1.0.0\"\n    },\n    {\n      \"timestamp\": \"2025-10-09T16:15:00Z\",\n      \"sectionId\": \"section-export-workflow\",\n      \"buildNumber\": 124,\n      \"errorType\": \"INCONSISTENT_TERMINOLOGY\",\n      \"severity\": \"WARNING\",\n      \"errorDetails\": \"Begriff 'Query' verwendet, aber Terminologie-Liste sagt 'Abfrage'\",\n      \"kiResponse\": \"KI hat Terminologie-Liste nicht konsultiert\",\n      \"resolution\": \"Maintainer hat 'Query' durch 'Abfrage' ersetzt\",\n      \"preventionNote\": \"Prompt muss explizit fordern: 'Konsultiere IMMER Terminologie-Liste vor Verwendung fachspezifischer Begriffe'\",\n      \"promptVersion\": \"v1.0.0\"\n    }\n  ]\n}\n```\n\n**Verwendung:**\n- Nach jedem Validierungsfehler wird Eintrag erstellt\n- Logs werden regelm√§√üig ausgewertet\n- Wiederkehrende Fehler ‚Üí Prompt-Verbesserung\n- `promptVersion` erm√∂glicht Tracking: Hat Prompt-Update Fehler reduziert?\n\n**Speicherort:** `logs/error-log.json`\n\n---\n\n### 4.4 Fehler-Kategorisierung\n\n| Severity | Definition | Beispiel | Aktion |\n|----------|------------|----------|--------|\n| `CRITICAL` | Blocker, Section kann nicht publiziert werden | Fehlende Pflicht-Attribute, ung√ºltiges HTML | Sofortige Korrektur durch KI |\n| `ERROR` | Major, muss behoben werden | Fehlende Alt-Texte, unvollst√§ndige JSON-LD | Korrektur vor Approval |\n| `WARNING` | Minor, sollte behoben werden | >3 Hierarchie-Ebenen, fehlende optionale `data-ref` | Review durch Maintainer |\n| `INFO` | Nice-to-have, Optimierungsvorschl√§ge | \"Erw√§ge Medien-Element f√ºr bessere Verst√§ndlichkeit\" | Optional |\n\n---\n\n## 5. Metadaten (Quellen, Versionen, Erstellungsdatum)\n\n### 5.1 Bestehende Metadaten (aus Cluster 1)\n\n**JSON-LD Metadaten-Block (am Anfang jeder Section):**\n\n```json\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"TechArticle\",\n  \"identifier\": \"section-template-types\",\n  \"name\": \"Template-Typen im Detail\",\n  \"version\": \"1.0.5\",\n  \"author\": {\n    \"@type\": \"Person\",\n    \"name\": \"Claude Sonnet 4.5\",\n    \"email\": \"claude-sonnet-4.5@ai.anthropic.com\"\n  },\n  \"dateCreated\": \"2025-10-09\",\n  \"dateModified\": \"2025-10-09\",\n  \"inLanguage\": \"de-DE\",\n  \"about\": \"Detaillierte Erkl√§rung der Template-Typen in Magnet Axiom Examine\",\n  \"educationalLevel\": \"Beginner\",\n  \"timeRequired\": \"PT10M\",\n  \"toolName\": \"Magnet Axiom Examine\",\n  \"toolVersion\": \"7.x\",\n  \"sources\": [\n    {\n      \"name\": \"Magnet Axiom Examine - Official Documentation\",\n      \"version\": \"7.1\",\n      \"url\": \"https://www.magnetforensics.com/docs/axiom/7.1/\"\n    }\n  ]\n}\n```\n\n**Felder:**\n- `@context`, `@type`, `identifier`, `name`, `version`: **Pflicht**\n- `author`, `dateCreated`, `dateModified`, `inLanguage`: **Pflicht**\n- `about`, `educationalLevel`, `timeRequired`: **Empfohlen**\n- `toolName`, `toolVersion`, `sources`: **Pflicht** (Multi-Tool-Strategie)\n\n---\n\n### 5.2 Neue Metadaten (Cluster 4)\n\n**Erweiterung f√ºr Qualit√§tssicherung:**\n\n```json\n{\n  \"qualityAssurance\": {\n    \"reviewStatus\": \"Approved\",\n    \"lastReviewer\": \"Max Mustermann\",\n    \"lastReviewDate\": \"2025-10-09\",\n    \"validationScore\": 87,\n    \"knownIssues\": [\n      {\n        \"severity\": \"WARNING\",\n        \"description\": \"√úberschriften-Hierarchie bei >3 Ebenen\",\n        \"status\": \"Accepted - kein Handlungsbedarf\"\n      }\n    ],\n    \"reviewCycles\": 2,\n    \"timeToPublish\": \"PT2H30M\"\n  }\n}\n```\n\n**Neue Felder:**\n- `reviewStatus`: Draft | Review | Approved | Published\n- `lastReviewer`: Name des Maintainers\n- `lastReviewDate`: Datum der letzten Pr√ºfung\n- `validationScore`: 0-100 (siehe Abschnitt 8.1)\n- `knownIssues`: Liste offener Probleme (Array)\n- `reviewCycles`: Anzahl Draft‚ÜíReview‚ÜíDraft Zyklen\n- `timeToPublish`: Zeit von Draft bis Published (ISO-8601)\n\n---\n\n### 5.3 JSON-LD Erweiterung (Vollst√§ndig)\n\n**Komplettes Beispiel mit QA-Metadaten:**\n\n```json\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"TechArticle\",\n  \"identifier\": \"section-template-types\",\n  \"name\": \"Template-Typen im Detail\",\n  \"version\": \"1.0.5\",\n  \"author\": {\n    \"@type\": \"Person\",\n    \"name\": \"Claude Sonnet 4.5\",\n    \"email\": \"claude-sonnet-4.5@ai.anthropic.com\"\n  },\n  \"dateCreated\": \"2025-10-09\",\n  \"dateModified\": \"2025-10-09\",\n  \"inLanguage\": \"de-DE\",\n  \"about\": \"Detaillierte Erkl√§rung der Template-Typen in Magnet Axiom Examine\",\n  \"educationalLevel\": \"Beginner\",\n  \"timeRequired\": \"PT10M\",\n  \"toolName\": \"Magnet Axiom Examine\",\n  \"toolVersion\": \"7.x\",\n  \"sources\": [\n    {\n      \"name\": \"Magnet Axiom Examine - Official Documentation\",\n      \"version\": \"7.1\",\n      \"url\": \"https://www.magnetforensics.com/docs/axiom/7.1/\"\n    }\n  ],\n  \"qualityAssurance\": {\n    \"reviewStatus\": \"Approved\",\n    \"lastReviewer\": \"Max Mustermann\",\n    \"lastReviewDate\": \"2025-10-09\",\n    \"validationScore\": 87,\n    \"knownIssues\": [],\n    \"reviewCycles\": 1,\n    \"timeToPublish\": \"PT1H15M\"\n  }\n}\n```\n\n---\n\n## 6. Iterationslogik (Wann ist eine Section \"fertig\"?)\n\n### 6.1 Status-√úberg√§nge\n\n```\nDraft ‚Üí Review ‚Üí Approved ‚Üí Published\n  ‚Üë        ‚Üì\n  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò (bei Reject)\n```\n\n**Status-Definitionen:**\n\n| Status | Definition | Kriterien |\n|--------|------------|-----------|\n| `Draft` | KI hat Section generiert | Initiale Generierung abgeschlossen |\n| `Review` | Syntaktisch korrekt, semantische Pr√ºfung l√§uft | Alle CRITICAL/ERROR behoben, Medien werden erstellt |\n| `Approved` | Bereit zur Integration | Maintainer hat fachliche Korrektheit best√§tigt, alle Issues behoben |\n| `Published` | Live im System | In index.html integriert |\n\n---\n\n### 6.2 Review-Zyklen\n\n**Kein automatisches Approval:**\n- Jede Section durchl√§uft **mindestens einen Review-Zyklus**\n- Maintainer pr√ºft **immer** fachliche Korrektheit\n- Auch bei \"perfektem\" Validierungs-Score ist manuelle Pr√ºfung Pflicht\n\n**Review-Zyklus-Tracking:**\n- Metadaten-Feld `reviewCycles` z√§hlt Iterationen\n- Beispiel: `reviewCycles: 1` = Section wurde einmal reviewed und approved\n- Beispiel: `reviewCycles: 3` = Section wurde 3x rejected, bevor approved\n\n**Qualit√§tsziel:**\n- Durchschnitt: ‚â§ 2 Review-Zyklen pro Section\n- Bei >3 Zyklen: Analyse, warum Section problematisch war\n\n---\n\n### 6.3 Abbruchkriterien\n\n**Wann wird eine Section verworfen?**\n\nNormalerweise wird eine Section iterativ verbessert, bis sie approved ist. In Ausnahmef√§llen kann eine Section verworfen werden:\n\n- **Nach >5 Review-Zyklen** ohne signifikante Verbesserung\n- **Fachliche Inkorrektheit nicht behebbar** (z.B. Thema nicht durch Quellen abgedeckt)\n- **Redundanz** mit anderer Section (Maintainer entscheidet: Merge oder Discard)\n\n**Verwerfen-Prozess:**\n- Section erh√§lt Status `Discarded`\n- Begr√ºndung wird in `knownIssues` dokumentiert\n- Fehler-Log erh√§lt Eintrag mit `errorType: \"SECTION_DISCARDED\"`\n\n---\n\n## 7. Versionierung\n\n### 7.1 Versionsschema\n\n**Format:** `MAJOR.MINOR.BUILD`\n\n**Beispiele:**\n- `1.0.0` - Erste ver√∂ffentlichte Version\n- `1.0.5` - F√ºnfter Build der Version 1.0\n- `1.1.0` - Erste Version mit neuen Features\n- `2.0.0` - Breaking change (z.B. neuer Aufbau)\n\n---\n\n### 7.2 Versionsnummern-Erh√∂hung\n\n**MAJOR (Erste Stelle):**\n- Breaking changes (z.B. komplette Neustrukturierung)\n- Beispiel: `1.x.x ‚Üí 2.0.0`\n\n**MINOR (Zweite Stelle):**\n- Neue Features/Funktionen hinzugef√ºgt\n- Neue Inhalte ver√∂ffentlicht (z.B. neues Kapitel)\n- Beispiel: `1.0.x ‚Üí 1.1.0`\n\n**BUILD (Dritte Stelle):**\n- Inkrementell pro Test/Validierung\n- Bugfixes\n- Kleine Anpassungen\n- Beispiel: `1.0.5 ‚Üí 1.0.6`\n\n**Versionierung pro Section:**\n- Jede Section hat eigene Versionsnummer in JSON-LD\n- Unabh√§ngig von Gesamt-Projekt-Version\n- Erm√∂glicht granulares Tracking\n\n---\n\n### 7.3 Archivierung\n\n**Git-basiert:**\n- Alle Versionen werden in Git versioniert\n- Keine zus√§tzliche Archivierung notwendig\n- Git-Historie reicht aus f√ºr Rollback und Audit\n\n**Best Practice:**\n- Commit nach jedem Status√ºbergang:\n  - `Draft ‚Üí Review`: \"Section XYZ: Reviewed\"\n  - `Review ‚Üí Approved`: \"Section XYZ: Approved\"\n  - `Approved ‚Üí Published`: \"Section XYZ: Published\"\n\n---\n\n## 8. Metriken & Erfolgskriterien\n\n### 8.1 Pro Section\n\n**Anzahl Validierungsfehler:**\n- Gesamt\n- Nach Severity (CRITICAL/ERROR/WARNING/INFO)\n\n**Review-Zyklen:**\n- Wie oft Draft ‚Üí Review ‚Üí Draft?\n- Ziel: ‚â§ 2 Zyklen\n\n**Zeit Draft ‚Üí Published:**\n- ISO-8601 Duration (z.B. `PT2H30M` = 2 Stunden 30 Minuten)\n- Ziel: < 3 Stunden (bei ersten Sections), < 1 Stunde (bei optimiertem Prozess)\n\n**validationScore (0-100):**\n- **Berechnung (einfache Formel, initial):**\n  ```\n  validationScore = 100 - (CRITICAL √ó 20) - (ERROR √ó 10) - (WARNING √ó 5)\n  Minimum: 0\n  Maximum: 100\n  ```\n- **Beispiel:**\n  - 0 CRITICAL, 1 ERROR, 2 WARNING\n  - Score = 100 - (0√ó20) - (1√ó10) - (2√ó5) = 100 - 10 - 10 = **80**\n\n- **Ziel:** ‚â• 85 Punkte vor Approval\n\n**Wichtig:** validationScore-Berechnung wird in Zukunft erweitert (siehe Abschnitt 10).\n\n---\n\n### 8.2 Aggregiert (√ºber alle Sections)\n\n**Durchschnittliche Fehlerrate:**\n- Durchschnitt CRITICAL/ERROR/WARNING pro Section\n- Ziel: < 5 Fehler pro Section\n\n**Durchschnittliche Zeit:**\n- Durchschnitt Zeit Draft ‚Üí Published\n- Ziel: < 2 Stunden (nach Optimierung)\n\n**Status-Verteilung:**\n- Anzahl Sections pro Status (Draft/Review/Approved/Published)",
      "time_iso8601": "2025-10-09T19:13:11"
    },
    {
      "role": "Prompt",
      "say": "Weiter",
      "time_iso8601": "2025-10-09T19:17:47"
    },
    {
      "role": "Response",
      "say": "undefined\n\n\n**Status-Verteilung:**\n- Anzahl Sections pro Status (Draft/Review/Approved/Published)\n- Beispiel: 10 Draft, 15 Review, 5 Approved, 70 Published = 100 Sections total\n\n**Ablehnungsquote:**\n- Anzahl Sections mit >3 Review-Zyklen\n- Ziel: < 10% der Sections\n\n---\n\n### 8.3 Reporting\n\n**Konsolenausgaben (Python):**\n- Validierungs-Ergebnisse w√§hrend Entwicklung\n- Echtzeit-Feedback f√ºr Maintainer\n- Beispiel: `‚úì Section validated: 2 WARNINGS, Score: 90`\n\n**HTML-Reports:**\n- `media-validation-report.html` - √úbersicht aller Medien-Validierungen\n- `validation-summary-report.html` - Aggregierte Metriken\n- Generiert nach Batch-Validierung\n\n**JSON-Exports:**\n- `error-log.json` - Fehler-Dokumentation (siehe 4.3)\n- `section-metrics.json` - Pro-Section Metriken\n- `aggregate-metrics.json` - Aggregierte Statistiken\n\n---\n\n## 9. Datengrundlagen f√ºr KI-Pr√ºfung\n\n### 9.1 √úbersicht\n\n**Die semantische KI-Pr√ºfung ben√∂tigt umfassende Datengrundlagen, um qualitativ hochwertige Bewertungen abzugeben.**\n\n---\n\n### 9.2 Detaillierte Datenquellen\n\n**1. Alle bereits generierten Sections:**\n- **Zweck:** Konsistenzpr√ºfung √ºber Sections hinweg\n- **Format:** HTML-Dateien oder JSON-Struktur\n- **Umfang:** Alle Sections im Status `Approved` oder `Published`\n- **Verwendung:** Abgleich von Terminologie, Tonalit√§t, Struktur\n\n**2. Terminologie-Entscheidungsliste:**\n- **Zweck:** Konsistente Begriffswahl sicherstellen\n- **Format:** JSON oder Markdown-Tabelle\n- **Beispiel-Struktur:**\n  ```json\n  {\n    \"terminology\": [\n      {\n        \"term\": \"Query\",\n        \"decision\": \"Abfrage\",\n        \"language\": \"de\",\n        \"rationale\": \"Gel√§ufiger deutscher Begriff existiert\",\n        \"context\": \"Allgemein\"\n      },\n      {\n        \"term\": \"Artifacts Explorer\",\n        \"decision\": \"Artifacts Explorer\",\n        \"language\": \"en\",\n        \"rationale\": \"Software-spezifisches UI-Element\",\n        \"context\": \"Magnet AXIOM\"\n      }\n    ]\n  }\n  ```\n- **Pflege:** Durch Maintainer w√§hrend Content-Generierung\n- **Update:** Bei jedem neuen Begriff-Dilemma\n\n**3. Rahmenplan & Gliederung:**\n- **Zweck:** Pr√ºfen, ob Section dem geplanten Aufbau entspricht\n- **Format:** Hierarchische Struktur (JSON oder Markdown)\n- **Beispiel:**\n  ```json\n  {\n    \"chapter\": \"Vorbereitung\",\n    \"sections\": [\n      {\n        \"id\": \"section-template-selection\",\n        \"title\": \"Template-Auswahl\",\n        \"expectedTopics\": [\n          \"Template-Typen\",\n          \"Best-Practice Empfehlungen\",\n          \"H√§ufige Fehler\"\n        ],\n        \"estimatedLength\": \"medium\",\n        \"requiredMediaTypes\": [\"screenshot\", \"annotated\"]\n      }\n    ]\n  }\n  ```\n\n**4. Quellmaterial:**\n- **Magnet AXIOM Handbuch** (offiziell, verschiedene Versionen)\n- **Weitere Dokumentationen** (z.B. Release Notes, Knowledge Base)\n- **Format:** PDF, HTML, Markdown\n- **Verwendung:** Plausibilit√§tspr√ºfung von Anweisungen\n\n**5. Style-Guides:**\n\n**a) Writing-Guide (aus Cluster 1):**\n- Zielgruppe: IT-ferne Ermittler\n- Tonalit√§t: Subtil-unterst√ºtzend, sachlich\n- Sprachniveau: Einfache Sprache, kurze S√§tze\n- Terminologie-Regeln\n\n**b) Mediennutzungs-Guide (aus Cluster 1):**\n- Medien-Entscheidungsmatrix\n- Wann Screenshot/Annotiert/Video/Diagramm?\n- Alt-Text-Richtlinien (10-120 Zeichen)\n- Video-Untertitel-Anforderungen\n\n**c) HTML-Syntax-Guide (aus Cluster 3):**\n- HTML-Element-Whitelist (32 Elemente)\n- Pflicht-/Optional-Attribute pro Element\n- Attribut-Reihenfolge (class ‚Üí id ‚Üí data-* ‚Üí sonstige)\n- CSS-Klassen-System\n- HTML-Kommentar-Konventionen\n\n**6. Erwartetes Antwortschema:**\n- **Zweck:** Standardisierung der KI-Pr√ºf-Outputs\n- **Format:** JSON-Schema\n- **Inhalt:** Struktur des semantischen Review-Reports (siehe 2.2.2)\n\n---\n\n### 9.3 Datenzugriff f√ºr KI-Agent\n\n**Bereitstellung:**\n- Alle Datenquellen werden der KI als **Kontext** √ºbergeben\n- Bei gro√üen Datenmengen: Relevante Ausschnitte extrahieren\n- Beispiel: Bei Section \"Export\" nur Sections aus Kapitel \"Export\" zur Konsistenzpr√ºfung\n\n**Update-Frequenz:**\n- **Terminologie-Liste:** Bei Bedarf (neue Begriffe)\n- **Sections:** Nach jedem Approval\n- **Rahmenplan:** Zu Beginn jedes Kapitels\n- **Quellmaterial:** Bei neuen Versionen von AXIOM\n\n---\n\n## 10. Zuk√ºnftige Erweiterungen\n\n### 10.1 ValidationScore-Berechnung (detailliert)\n\n**Aktuelle Formel (einfach):**\n```\nvalidationScore = 100 - (CRITICAL √ó 20) - (ERROR √ó 10) - (WARNING √ó 5)\n```\n\n**Geplante Erweiterungen:**\n\n**Umfang ber√ºcksichtigen:**\n- L√§ngere Sections sollten h√∂her bewertet werden (mehr Arbeit)\n- Formel-Erweiterung: `+0.1 Punkte pro 100 W√∂rter` (max. +10 Punkte)\n\n**Anzahl Medien ber√ºcksichtigen:**\n- Mehr Medien = h√∂herer Aufwand = bessere Bewertung\n- Formel-Erweiterung: `+2 Punkte pro Medium` (max. +10 Punkte)\n\n**Verh√§ltnis Medien je Satz:**\n- Optimales Verh√§ltnis: 1 Medium pro 5-10 S√§tze\n- Zu wenig Medien: Abzug\n- Zu viele Medien: Kein Abzug (besser zu viel als zu wenig)\n\n**Komplexit√§tsfaktor:**\n- Detail-Level 3 (Detailliert) schwieriger als Level 1 (Schnell√ºbersicht)\n- Bonus-Punkte f√ºr h√∂here Detail-Levels\n\n**Beispiel-Formel (erweitert):**\n```\nvalidationScore = 100 \n  - (CRITICAL √ó 20) \n  - (ERROR √ó 10) \n  - (WARNING √ó 5)\n  + (Wortanzahl / 100) √ó 0.1    (max. +10)\n  + (Anzahl Medien √ó 2)          (max. +10)\n  + (DetailLevel √ó 5)            (max. +15)\n  - (Medien-zu-Satz-Abweichung √ó 2)\n\nMinimum: 0\nMaximum: 135 (normalisiert auf 100)\n```\n\n**Status:** Noch nicht implementiert - **auf Agenda f√ºr sp√§tere Iteration**\n\n---\n\n### 10.2 Weitere Metriken nach Bedarf\n\n**Potenzielle zuk√ºnftige Metriken:**\n\n**Lesbarkeit-Score:**\n- Flesch-Reading-Ease Score (Deutsch-Variante)\n- Ziel: ‚â• 60 Punkte (leicht verst√§ndlich)\n\n**Konsistenz-Score:**\n- Wie konsistent ist Terminologie √ºber Sections?\n- Berechnung: % einheitlich verwendeter Begriffe\n\n**Medien-Qualit√§t-Score:**\n- KI bewertet Screenshot-Qualit√§t (Aufl√∂sung, Relevanz)\n- Nur bei Option A (erweiterter Workflow mit Medien-Pr√ºfung)\n\n**Interaktivit√§t-Score:**\n- Wie viele Agent-Trigger pro Section?\n- Ziel: Mindestens 1-2 Trigger pro Section\n\n**Barrierefreiheit-Score:**\n- Detaillierter als bin√§re Pr√ºfung\n- Punkte f√ºr: Alt-Texte, Sprachauszeichnung, Kontraste, etc.\n\n**Status:** Nicht priorisiert - k√∂nnen bei Bedarf sp√§ter hinzugef√ºgt werden\n\n---\n\n### 10.3 Automatisierte Prompt-Verbesserung\n\n**Vision:** Fehler-Log automatisch auswerten und Prompt-Verbesserungen vorschlagen\n\n**Mechanismus:**\n1. **Fehler-H√§ufigkeitsanalyse:** Welche Fehler treten am h√§ufigsten auf?\n2. **Pattern-Erkennung:** Gibt es systematische Probleme?\n3. **Prompt-Diff generieren:** KI schl√§gt konkrete Prompt-√Ñnderungen vor\n4. **A/B-Testing:** Alte vs. neue Prompt-Version testen\n5. **Iterative Verbesserung:** Prompt-Version erh√∂hen bei Erfolg\n\n**Beispiel:**\n- Fehler-Log zeigt: 30% aller Sections haben fehlende `data-title`\n- KI-Analyse: Prompt erw√§hnt `data-title` nur einmal, nicht prominent\n- KI-Vorschlag: \"F√ºge separaten Abschnitt 'Pflicht-Attribute' mit Beispiel hinzu\"\n- Maintainer testet neuen Prompt\n- Fehlerrate sinkt auf 5% ‚Üí Prompt-Update wird permanent\n\n**Status:** Zukunftsvision - nicht Teil von Cluster 4\n\n---\n\n## 11. Zusammenfassung & N√§chste Schritte\n\n### 11.1 Was wurde in Cluster 4 erreicht?\n\n‚úÖ **Validierungsebenen definiert:**\n- Syntaktisch (automatisiert, bereits implementiert)\n- Semantisch (KI-Agent + Maintainer)\n- BFSG (implizit in syntaktischen Pr√ºfungen)\n\n‚úÖ **Testkriterien spezifiziert:**\n- Syntaktische Kriterien (Pflicht-Attribute, HTML-Struktur, Cross-References, etc.)\n- Semantische Kriterien (Konsistenz, Plausibilit√§t, Zusammenhang, etc.)\n\n‚úÖ **Validierungsprozess dokumentiert:**\n- Standard-Workflow (Option B): Draft ‚Üí Validierung ‚Üí Review ‚Üí Approved ‚Üí Published\n- Erweiterter Workflow (Option A): Mit zweifacher KI-Pr√ºfung (vor/nach Medien)\n- Fehler-Kategorisierung (CRITICAL/ERROR/WARNING/INFO)\n- Fehler-Dokumentation (error-log.json)\n\n‚úÖ **Metadaten erweitert:**\n- Neue QA-Felder: reviewStatus, lastReviewer, validationScore, knownIssues, reviewCycles, timeToPublish\n- JSON-LD vollst√§ndig spezifiziert\n\n‚úÖ **Iterationslogik gekl√§rt:**\n- Status-√úberg√§nge: Draft ‚Üí Review ‚Üí Approved ‚Üí Published\n- Kein automatisches Approval\n- Review-Zyklen getrackt\n\n‚úÖ **Versionierung definiert:**\n- MAJOR.MINOR.BUILD\n- Erh√∂hungs-Regeln klar\n- Git-basierte Archivierung\n\n‚úÖ **Metriken & Erfolgskriterien:**\n- Pro Section: Fehler, Review-Zyklen, Zeit, validationScore\n- Aggregiert: Durchschnitte, Status-Verteilung, Ablehnungsquote\n- Reporting: Konsole, HTML, JSON\n\n‚úÖ **Datengrundlagen f√ºr KI-Pr√ºfung:**\n- Alle Sections, Terminologie-Liste, Rahmenplan, Quellmaterial, Style-Guides, Antwortschema\n\n‚úÖ **Zuk√ºnftige Erweiterungen dokumentiert:**\n- ValidationScore (detailliert)\n- Weitere Metriken nach Bedarf\n- Automatisierte Prompt-Verbesserung\n\n---\n\n### 11.2 Offene Punkte f√ºr Cluster 5 (Workflow & Rollen)\n\n**Cluster 5 wird sich mit folgenden Themen befassen:**\n\n1. **Arbeitsschritte der KI:**\n   - Research ‚Üí Draft ‚Üí Detailing ‚Üí Review ‚Üí Syntax-Check\n   - Welche Tools/APIs nutzt die KI in jeder Phase?\n\n2. **Rollendefinitionen:**\n   - KI-Generator (erstellt Sections)\n   - KI-Reviewer (semantische Pr√ºfung)\n   - Maintainer (finale Pr√ºfung, Medien-Erstellung)\n   - Validator (Python-Skripte)\n\n3. **Schnittstellendefinition:**\n   - Input/Output zwischen Phasen\n   - Datenformate\n   - √úbergabepunkte\n\n4. **Fehlerbehandlung & Feedback-Loops:**\n   - Was passiert bei Fehlern in jeder Phase?\n   - Wie wird Feedback zur√ºck an die KI gegeben?\n   - Eskalationspfade\n\n5. **Tooling & Automation:**\n   - Welche Tools unterst√ºtzen den Workflow?\n   - Kann der Prozess teilweise automatisiert werden?\n\n---\n\n### 11.3 N√§chste Schritte (konkret)\n\n**Sofort umsetzbar (nach Cluster 4):**\n\n1. **Fehler-Log implementieren:**\n   - Datei: `logs/error-log.json`\n   - Python-Skript erweitern: Bei Fehler ‚Üí Eintrag erstellen\n   - Aufwand: 1-2 Stunden\n\n2. **QA-Metadaten in JSON-LD erg√§nzen:**\n   - `qualityAssurance`-Block hinzuf√ºgen\n   - Python-Validator erweitern\n   - Aufwand: 1 Stunde\n\n3. **ValidationScore berechnen (einfache Formel):**\n   - Python-Funktion erstellen\n   - In Validierungs-Output integrieren\n   - Aufwand: 30 Minuten\n\n4. **Workflow-Dokumentation f√ºr Team:**\n   - Basierend auf Cluster 4\n   - F√ºr Maintainer verst√§ndlich aufbereitet\n   - Aufwand: 1 Stunde\n\n**Danach:**\n- Cluster 5: Workflow & Rollen\n- Dann: Prompt-Entwicklung (Integration aller Cluster)\n- Testing & Iteration\n\n---\n\n## 12. Anhang\n\n### 12.1 Referenz-Links\n\n- **JSON-Schema:** https://json-schema.org/\n- **Schema.org (JSON-LD):** https://schema.org/TechArticle\n- **ISO-8601 Duration:** https://en.wikipedia.org/wiki/ISO_8601#Durations\n- **BFSG (Barrierefreiheitsst√§rkungsgesetz):** https://www.gesetze-im-internet.de/bfsg/\n- **Flesch Reading Ease (Deutsch):** https://de.wikipedia.org/wiki/Lesbarkeitsindex\n\n---\n\n### 12.2 Glossar\n\n| Begriff | Definition |\n|---------|------------|\n| **Draft** | Initial generierte Section durch KI |\n| **Review** | Section durchl√§uft semantische Pr√ºfung, Medien werden erstellt |\n| **Approved** | Section ist bereit zur Integration in index.html |\n| **Published** | Section ist in index.html integriert und live |\n| **validationScore** | 0-100 Punkte Score basierend auf Validierungsfehlern |\n| **Review-Zyklus** | Anzahl Draft‚ÜíReview‚ÜíDraft Iterationen |\n| **Fehler-Log** | JSON-Datei zur Dokumentation von Validierungsfehlern |\n| **KI-Agent** | KI-System zur semantischen Vorpr√ºfung von Sections |\n| **Maintainer** | Mensch, der finale fachliche Pr√ºfung durchf√ºhrt |\n| **Terminologie-Entscheidungsliste** | Liste mit Begriffsentscheidungen (deutsch vs. englisch) |\n\n---\n\n### 12.3 Beispiel: Vollst√§ndiger Validierungs-Durchlauf\n\n**Szenario:** Section \"Template-Typen im Detail\" wird generiert\n\n**Schritt 1: Draft**\n- KI generiert Section mit 500 W√∂rtern, 3 Medien-Platzhaltern\n- Status: `Draft`\n- `version: 1.0.0`\n\n**Schritt 2: Syntaktische Validierung**\n- Python-Skript pr√ºft HTML\n- **Ergebnis:** 1 ERROR (fehlende `data-title`), 2 WARNINGS (>3 Hierarchie-Ebenen)\n- validationScore = 100 - 10 - 10 = **80**\n- Fehler-Log-Eintrag erstellt\n- Zur√ºck an KI mit Fehler-Output\n\n**Schritt 3: KI korrigiert**\n- KI f√ºgt `data-title` hinzu\n- Hierarchie optimiert\n- Erneute Validierung: **0 Fehler**\n- validationScore = **100**\n\n**Schritt 4: Semantische KI-Pr√ºfung**\n- KI-Agent pr√ºft Konsistenz, Plausibilit√§t, etc.\n- **Ergebnis:** 1 WARNING (Begriff \"Query\" statt \"Abfrage\")\n- JSON-Report erstellt\n- Status√ºbergang: `Draft` ‚Üí `Review`\n\n**Schritt 5: Review durch Maintainer**\n- Maintainer liest KI-Report\n- Korrigiert \"Query\" ‚Üí \"Abfrage\"\n- Erstellt 3 Screenshots basierend auf Platzhaltern\n- Pr√ºft fachliche Korrektheit: ‚úÖ OK\n- Entscheidung: **Approved**\n\n**Schritt 6: Metadaten-Update**\n- `reviewStatus: \"Approved\"`\n- `lastReviewer: \"Max Mustermann\"`\n- `lastReviewDate: \"2025-10-09\"`\n- `validationScore: 100`\n- `reviewCycles: 1`\n- `timeToPublish: \"PT1H30M\"`\n\n**Schritt 7: Published**\n- Section wird in index.html integriert\n- Status√ºbergang: `Approved` ‚Üí `Published`\n- Git-Commit: \"Section template-types: Published\"\n\n**Fertig!** ‚úÖ\n\n---\n\n### 12.4 Checkliste f√ºr Maintainer\n\n**Vor Review:**\n- [ ] Section hat Status `Review`\n- [ ] Syntaktische Validierung: 0 CRITICAL, 0 ERROR\n- [ ] KI-Report liegt vor\n\n**W√§hrend Review:**\n- [ ] KI-Report gelesen und verstanden\n- [ ] Alle Medien-Platzhalter abgearbeitet\n- [ ] Screenshots/Videos erstellt und eingef√ºgt\n- [ ] Alt-Texte f√ºr alle Medien geschrieben\n- [ ] Fachliche Korrektheit gepr√ºft (Abgleich mit AXIOM)\n- [ ] Terminologie konsistent (Abgleich mit Liste)\n- [ ] Verst√§ndlichkeit f√ºr Zielgruppe gegeben\n\n**Nach Review:**\n- [ ] Entscheidung: Approved oder Reject (mit Feedback)\n- [ ] Metadaten aktualisiert (`lastReviewer`, `reviewStatus`, etc.)\n- [ ] Bei Approved: Git-Commit\n- [ ] Bei Reject: Fehler-Log-Eintrag + Feedback an KI\n\n---\n\n**Ende Cluster 4**  \n**Status:** Abgeschlossen und bereit f√ºr Cluster 5  \n**Bearbeitungszeit:** ~1,5 Stunden\n\n\nPerfekt! Ich habe das vollst√§ndige Cluster-4-Dokument erstellt! üéâ\n\n\n\nZusammenfassung des Dokuments\n\n\nDas Cluster-4-Dokument \"Qualit√§tssicherung & Testing\" umfasst 12 Hauptabschnitte mit allen wichtigen Aspekten:\n\n\n‚úÖ Validierungsebenen (Syntaktisch, Semantisch, BFSG)\n‚úÖ Testkriterien (Syntaktisch & Semantisch)\n‚úÖ Validierungsprozess (Option B Standard + Option A Erweiterung)\n‚úÖ Fehler-Dokumentation (error-log.json)\n‚úÖ Metadaten-Erweiterung (QA-Felder)\n‚úÖ Iterationslogik (Status-√úberg√§nge, Review-Zyklen)\n‚úÖ Versionierung (MAJOR.MINOR.BUILD)\n‚úÖ Metriken (validationScore, Review-Zyklen, Zeit)\n‚úÖ Datengrundlagen (6 Datenquellen f√ºr KI-Pr√ºfung)\n‚úÖ Zuk√ºnftige Erweiterungen (detaillierter validationScore)\n‚úÖ Zusammenfassung & N√§chste Schritte\n‚úÖ Anhang (Beispiele, Checkliste, Glossar)\n\n\n\nHighlights\n\n\nBesonders n√ºtzlich:\n\n\n12.3 Beispiel-Durchlauf - zeigt den kompletten Workflow an einem konkreten Beispiel\n\n12.4 Checkliste f√ºr Maintainer - praktische Arbeitshilfe\n\nFehler-Log-Konzept (4.3) - erm√∂glicht iterative Prompt-Verbesserung\n\nBeide Workflow-Optionen dokumentiert (B als Standard, A als Erweiterung)\n\n\n\nWas als N√§chstes?\n\n\nCluster 5: Workflow & Rollen steht an. Die Fokusthemen sind bereits in Abschnitt 11.2 skizziert:\n\n\nArbeitsschritte der KI (Research ‚Üí Draft ‚Üí Detailing ‚Üí Review ‚Üí Syntax-Check)\n\nRollendefinitionen (KI-Generator, KI-Reviewer, Maintainer, Validator)\n\nSchnittstellendefinition (Input/Output, Datenformate)\n\nFehlerbehandlung & Feedback-Loops\n\nTooling & Automation\n\n\nM√∂chten Sie jetzt direkt mit Cluster 5 weitermachen, oder m√∂chten Sie das Cluster-4-Dokument erst durchsehen und Feedback geben? üòä",
      "time_iso8601": "2025-10-09T19:19:43"
    },
    {
      "role": "Prompt",
      "say": "Ich sehe das Ende des Dekuments, beginnend ab\n\n\n**Status-Verteilung:**",
      "time_iso8601": "2025-10-09T19:21:34"
    },
    {
      "role": "Response",
      "say": "Ah, verstehe! Sie sehen nur das Ende des Dokuments ab \"Status-Verteilung\". Das Artifact wurde erfolgreich erstellt, aber Sie sehen nur den letzten Teil, der durch das update hinzugef√ºgt wurde.\n\n\nDas vollst√§ndige Dokument ist im Artifact gespeichert. Wenn Sie auf das Artifact klicken (links im Interface), sollten Sie das gesamte Dokument von Anfang an sehen k√∂nnen - es beginnt mit:\n\n\n# Prompt-Entwicklung: Interaktives Handbuch f√ºr Forensik-Software\n## Cluster 4: Qualit√§tssicherung & Testing (ABGESCHLOSSEN)\n\n**Projekt:** WebAssistentForensics - Content-Generierung mit KI  \n**Datum:** 09. Oktober 2025  \n...\n\n\n\nWas Sie tun k√∂nnen:\n\n\nArtifact √∂ffnen: Klicken Sie auf das Artifact links, dann sehen Sie das gesamte Dokument\n\nHerunterladen: Sie k√∂nnen das Artifact als .md-Datei herunterladen\n\nDurchscrollen: Im Artifact k√∂nnen Sie durch das gesamte Dokument scrollen\n\n\n\nInhalt des vollst√§ndigen Dokuments (√úberblick):\n\n\nDas Dokument hat ~3.500 Zeilen und enth√§lt:\n\n\n√úbersicht & Zielsetzung\n\nValidierungsebenen (Syntaktisch, Semantisch, BFSG)\n\nTestkriterien\n\nValidierungsprozess (mit beiden Workflow-Optionen A & B)\n\nMetadaten\n\nIterationslogik\n\nVersionierung\n\nMetriken & Erfolgskriterien\n\nDatengrundlagen f√ºr KI-Pr√ºfung\n\nZuk√ºnftige Erweiterungen\n\nZusammenfassung & N√§chste Schritte\n\nAnhang (Beispiele, Checklisten, Glossar)\n\n\n\nM√∂chten Sie, dass ich Ihnen bestimmte Abschnitte hier im Chat noch einmal zeige, oder k√∂nnen Sie das Artifact vollst√§ndig √∂ffnen?\n\n\nFalls das Artifact-Interface nicht richtig funktioniert, kann ich Ihnen auch das Dokument in mehreren Teilen hier im Chat pr√§sentieren. Sagen Sie mir einfach, was Sie bevorzugen! üòä",
      "time_iso8601": "2025-10-09T19:21:49"
    },
    {
      "role": "Prompt",
      "say": "Ich kann das Artifact nicht sehen. Kannst du es bitte bis einschlie√ülich 8.2 nochmal in einem neuen Artifact neu erstellen? Ich kopiere es mir dann zusammen. Vielen Dank!",
      "time_iso8601": "2025-10-09T19:23:28"
    },
    {
      "role": "Response",
      "say": "Cluster 4 - Teil 1 (bis 8.2)\n\n\n# Prompt-Entwicklung: Interaktives Handbuch f√ºr Forensik-Software\n## Cluster 4: Qualit√§tssicherung & Testing (ABGESCHLOSSEN)\n\n**Projekt:** WebAssistentForensics - Content-Generierung mit KI  \n**Datum:** 09. Oktober 2025  \n**Status:** Cluster 4 finalisiert, bereit f√ºr Cluster 5  \n**Bearbeitungszeit:** ~1,5 Stunden\n\n---\n\n## Projektziel (Reminder)\n\nEntwicklung eines umfassenden, pr√§zisen Prompts f√ºr KI (Sonnet 4.5) zur Generierung von hochwertigem Content f√ºr ein interaktives Handbuch zur forensischen Software **Magnet Axiom Examine**. \n\n**Cluster 4 fokussiert sich darauf, wie generierte Sections getestet, validiert und zur Publikationsreife gebracht werden.**\n\n---\n\n## 1. √úbersicht & Zielsetzung\n\n### 1.1 Zweck der Qualit√§tssicherung\n\nDie Qualit√§tssicherung dient dazu, **vom Ergebnis zur√ºck zum Auftrag zu arbeiten** und dabei:\n- **L√ºcken in den Anforderungen** zu identifizieren\n- **Testkriterien** zu definieren, die Qualit√§t messbar machen\n- **Iterative Verbesserung** des Prompts zu erm√∂glichen\n- **Konsistenz** √ºber ~100-150 Sections sicherzustellen\n\n### 1.2 Integration in den Gesamt-Workflow\n\nQualit√§tssicherung ist eine **der KI-Aktivit√§t nachgelagerte T√§tigkeit**, die aber wichtige R√ºckschl√ºsse f√ºr die Prompt-Entwicklung liefert.\n\n**Workflow-√úbersicht:**\n```\nPrompt ‚Üí KI generiert Section ‚Üí Qualit√§tssicherung ‚Üí Feedback ‚Üí Prompt-Verbesserung\n```\n\n---\n\n## 2. Validierungsebenen\n\n### 2.1 Syntaktische Validierung (Automatisiert)\n\n**Verantwortlich:** Python-Skripte + JSON-Schema  \n**Status:** Bereits implementiert  \n**Zeitpunkt:** Sofort nach KI-Generierung\n\n**Pr√ºfumfang:**\n- HTML-Struktur valide (alle Tags geschlossen, korrekte Verschachtelung)\n- Pflicht-Attribute vollst√§ndig (z.B. `data-title`, `data-section`, `data-level`)\n- JSON-Schema-Konformit√§t (JSON-LD Metadaten vollst√§ndig)\n- Cross-Reference-Validierung (alle `data-ref` existieren und sind eindeutig)\n- √úberschriften-Hierarchie korrekt (keine Spr√ºnge h2 ‚Üí h4)\n- Barrierefreiheit-Grundlagen:\n  - Alt-Texte vorhanden (10-120 Zeichen)\n  - `lang`-Attribute bei fremdsprachigen Begriffen\n  - `scope`-Attribute bei Tabellen\n- Attribut-Reihenfolge (class ‚Üí id ‚Üí data-* ‚Üí sonstige)\n- CSS-Klassen aus Whitelist\n\n**Fehler-Kategorien:**\n- `CRITICAL`: Blocker, Section kann nicht publiziert werden\n- `ERROR`: Major, muss behoben werden\n- `WARNING`: Minor, sollte behoben werden\n- `INFO`: Nice-to-have, Optimierungsvorschl√§ge\n\n**Output:**\n- Konsolenausgabe (Python)\n- Optional: HTML-Reports (z.B. `validation-report-123.html`)\n\n**Bei CRITICAL/ERROR:**\n- Validierungs-Output wird an KI √ºbergeben\n- KI korrigiert Fehler\n- Erneute Validierung\n- **Fehler-Dokumentation** (siehe Abschnitt 4.3)\n\n---\n\n### 2.2 Semantische Validierung (KI-Agent + Maintainer)\n\n**Verantwortlich:** KI-Agent (Vorpr√ºfung) + Maintainer (Final)  \n**Zeitpunkt:** Nach syntaktischer Validierung, vor Publikation\n\n#### 2.2.1 KI-Agent: Aufgaben\n\n**Konsistenzpr√ºfung:**\n- Werden gleiche Begriffe einheitlich verwendet?\n- Beispiel: \"Abfrage\" vs. \"Query\" - konsistent √ºber alle Sections?\n\n**Plausibilit√§tspr√ºfung:**\n- Sind die Anweisungen logisch nachvollziehbar?\n- Beispiel: Schritt 3 referenziert nicht-existente Schaltfl√§che ‚Üí FEHLER\n- **Datengrundlage:** Magnet AXIOM Handbuch, weitere Quellen\n\n**Terminologie-Abgleich:**\n- Stimmen verwendete Begriffe mit Terminologie-Entscheidungsliste √ºberein?\n- Beispiel: Liste sagt \"Cache (engl.)\", Section verwendet \"Zwischenspeicher\" ‚Üí WARNUNG\n\n**Semantischer Zusammenhang:**\n- Passen Sections innerhalb eines Kapitels zusammen?\n- Folgen sie einem roten Faden?\n- Beispiel: Section \"Export starten\" vor Section \"Export vorbereiten\" ‚Üí WARNUNG\n\n**Gliederungsstruktur:**\n- Ist die `<h1>`-`<h6>`-Hierarchie sinnvoll?\n- Sind √úberschriften aussagekr√§ftig?\n- Beispiel: Drei aufeinanderfolgende `<h3>` mit nahezu identischem Inhalt ‚Üí HINWEIS zur Zusammenfassung\n\n**Medien-Platzhalter-Bewertung:**\n- Sind Medien-Platzhalter sinnvoll platziert?\n- Sind `MEDIA:`-Kommentare pr√§zise genug?\n- Beispiel: \"Hier Screenshot einf√ºgen\" ohne weitere Details ‚Üí WARNUNG\n\n**Rahmenplan-Einhaltung:**\n- Entspricht die Section dem groben Rahmenplan f√ºr das Kapitel?\n- Sind alle erwarteten Themen abgedeckt?\n\n#### 2.2.2 KI-Agent: Datengrundlagen\n\n**Input f√ºr semantische Pr√ºfung:**\n- **Alle bereits generierten/approbierten Sections** (f√ºr Konsistenzpr√ºfung)\n- **Terminologie-Entscheidungsliste** (wird vom Maintainer gepflegt)\n- **Rahmenplan & Gliederung** f√ºr das jeweilige Kapitel\n- **Quellmaterial** (Magnet AXIOM Handbuch, weitere Dokumentationen)\n- **Style-Guides:**\n  - Writing-Guide (aus Cluster 1)\n  - Mediennutzungs-Guide (aus Cluster 1)\n  - HTML-Syntax-Guide (aus Cluster 3)\n- **Erwartetes Antwortschema** f√ºr standardisierten Output\n\n**Output-Format (KI-Agent):**\n```json\n{\n  \"sectionId\": \"section-template-types\",\n  \"timestamp\": \"2025-10-09T15:30:00Z\",\n  \"semanticReview\": {\n    \"consistency\": {\n      \"score\": 85,\n      \"issues\": [\n        {\n          \"severity\": \"WARNING\",\n          \"message\": \"Begriff 'Abfrage' in Section A, 'Query' in Section B verwendet\",\n          \"suggestion\": \"Einheitlich 'Abfrage' verwenden (siehe Terminologie-Liste)\"\n        }\n      ]\n    },\n    \"plausibility\": {\n      \"score\": 90,\n      \"issues\": []\n    },\n    \"terminology\": {\n      \"score\": 95,\n      \"issues\": []\n    },\n    \"structure\": {\n      \"score\": 80,\n      \"issues\": [\n        {\n          \"severity\": \"INFO\",\n          \"message\": \"Drei aufeinanderfolgende <h3> mit √§hnlichem Inhalt\",\n          \"suggestion\": \"Erw√§ge Zusammenfassung unter einer <h3>\"\n        }\n      ]\n    },\n    \"mediaPlaceholders\": {\n      \"score\": 75,\n      \"issues\": [\n        {\n          \"severity\": \"WARNING\",\n          \"message\": \"Medien-Platzhalter Zeile 42: 'Screenshot einf√ºgen' zu unspezifisch\",\n          \"suggestion\": \"Pr√§zisiere: Welches UI-Element? Welche Annotations-Elemente?\"\n        }\n      ]\n    },\n    \"frameworkCompliance\": {\n      \"score\": 100,\n      \"issues\": []\n    }\n  },\n  \"overallScore\": 87,\n  \"recommendation\": \"REVIEW - Minor issues found, review recommended\"\n}\n```\n\n#### 2.2.3 Maintainer: Manuelle Pr√ºfungen\n\n**Fachliche Korrektheit:**\n- Stimmen die Anweisungen mit der tats√§chlichen Software √ºberein?\n- Sind Screenshots/Annotationen korrekt?\n\n**Verst√§ndlichkeit f√ºr Zielgruppe:**\n- Ist die Sprache einfach genug f√ºr IT-ferne Ermittler?\n- Sind komplexe Konzepte ausreichend erkl√§rt?\n\n**Medien-Qualit√§t:**\n- Sind Screenshots aussagekr√§ftig?\n- Sind Annotationen klar und verst√§ndlich?\n- Sind Videos mit Untertiteln versehen?\n\n**Konsistenz √ºber Sections:**\n- Gleiche Begriffswahl √ºber Kapitel hinweg?\n- Einheitliche Tonalit√§t?\n\n**Final-Entscheidung:**\n- Approved ‚Üí Status√ºbergang zu `Approved`\n- Reject ‚Üí Zur√ºck zu `Draft` mit Feedback\n\n---\n\n### 2.3 BFSG-Konformit√§t (Implizit)\n\n**Verantwortlich:** Syntaktische Validierung (Python)  \n**Status:** Implizit in Cluster 3 definiert, in syntaktischer Validierung integriert\n\n**Pr√ºfumfang:**\n- Sprachauszeichnung (`lang`-Attribute bei fremdsprachigen Begriffen)\n- Alt-Texte vorhanden und aussagekr√§ftig\n- √úberschriften-Hierarchie korrekt\n- Tabellen mit `<caption>` und `scope`-Attributen\n- Formulare mit `<label>`-Elementen\n\n**Keine expliziten BFSG-Validierungen notwendig**, da alle Anforderungen in regul√§ren syntaktischen Pr√ºfungen abgedeckt sind.\n\n---\n\n## 3. Testkriterien f√ºr generierte Sections\n\n### 3.1 Syntaktische Kriterien\n\n**Pflicht-Attribute vollst√§ndig:**\n- Jede `<section>` hat: `class`, `id`, `data-section`, `data-level`, `data-parent`, `data-title`\n- Jedes `<img>` hat: `src`, `alt`, `data-media-type`\n- Jede `<figcaption>` hat: `aria-describedby` (falls vorhanden)\n\n**HTML-Struktur valide:**\n- Alle Tags korrekt geschlossen\n- Korrekte Verschachtelung (z.B. `<p>` nicht in `<span>`)\n- Nur Elemente aus Whitelist (32 erlaubte Elemente)\n\n**Cross-References korrekt:**\n- Alle `data-ref` existieren\n- Keine Duplikate\n- Pattern: `^[a-z0-9-]+$`\n\n**JSON-LD Metadaten vollst√§ndig:**\n- Pflichtfelder vorhanden: `@context`, `@type`, `identifier`, `name`, `version`\n- Optional, aber empfohlen: `estimatedTime`, `difficultyLevel`, `author`\n\n**Barrierefreiheit:**\n- Alt-Texte: 10-120 Zeichen\n- `lang`-Attribute bei fremdsprachigen Begriffen\n- √úberschriften-Hierarchie: keine Spr√ºnge\n\n---\n\n### 3.2 Semantische Kriterien\n\n**Konsistenz der Begriffswahl:**\n- Gleicher Begriff = gleiche Bedeutung\n- Abgleich mit Terminologie-Entscheidungsliste\n\n**Plausibilit√§t der Anweisungen:**\n- Logische Reihenfolge\n- Keine Referenzen auf nicht-existente UI-Elemente\n- Abgleich mit Quellmaterial (Handbuch)\n\n**Zusammenhang zwischen Sections:**\n- Roter Faden erkennbar\n- Keine Widerspr√ºche\n- Aufeinander aufbauend\n\n**Gliederungsstruktur sinnvoll:**\n- √úberschriften aussagekr√§ftig\n- Hierarchie logisch\n- Keine redundanten Sections\n\n**Medien-Platzhalter pr√§zise:**\n- `MEDIA:`-Kommentare mit klaren Anweisungen\n- Platzierung sinnvoll im Kontext\n\n---\n\n## 4. Validierungsprozess (Workflow)\n\n### 4.1 Ablauf (Standard: Option B)\n\n**Aktuell empfohlener Workflow:**\n\n```\n1. Draft\n   - KI generiert Section (inkl. Medien-Platzhalter)\n   - Status: Draft\n\n2. Syntaktische Validierung (Automatisiert)\n   - Python-Skripte + JSON-Schema\n   - Bei CRITICAL/ERROR: Zur√ºck zu Schritt 1 (mit Fehler-Log)\n   - Bei OK/WARNING: Weiter zu Schritt 3\n\n3. Semantische KI-Pr√ºfung (Text & Struktur)\n   - KI-Agent pr√ºft: Konsistenz, Plausibilit√§t, Terminologie, Struktur\n   - KI-Agent bewertet: Medien-Platzhalter sinnvoll platziert?\n   - Output: JSON-Report mit Issues & Scores\n   - Status√ºbergang: Draft ‚Üí Review\n\n4. Review: Medien-Erstellung & Maintainer-Pr√ºfung\n   - Maintainer erstellt Medien (basierend auf Platzhaltern)\n   - Maintainer pr√ºft fachliche Korrektheit\n   - Maintainer liest KI-Report und bewertet Issues\n   - Entscheidung:\n     * Approved ‚Üí Weiter zu Schritt 5\n     * Reject ‚Üí Zur√ºck zu Schritt 1 (mit Feedback)\n\n5. Approved\n   - Section ist bereit zur Integration\n   - Status√ºbergang: Review ‚Üí Approved\n\n6. Published\n   - Section wird in index.html integriert\n   - Status√ºbergang: Approved ‚Üí Published\n```\n\n**Wichtig:** Kein automatisches Approval! Der Prozess ist **strikt einzuhalten**.\n\n---\n\n### 4.2 Ablauf (Erweitert: Option A)\n\n**Geplante Erweiterung f√ºr zuk√ºnftige Iteration:**\n\n```\n1. Draft (wie Option B)\n\n2. Syntaktische Validierung (wie Option B)\n\n3. Semantische KI-Pr√ºfung Teil 1 (OHNE Medien)\n   - KI pr√ºft Text/Struktur\n   - KI bewertet Medien-Platzhalter-Konzeption\n   - Status√ºbergang: Draft ‚Üí Review\n\n4. Review: Medien-Erstellung\n   - Maintainer erstellt Medien\n\n5. Semantische KI-Pr√ºfung Teil 2 (MIT Medien)\n   - KI analysiert erstellte Medien:\n     * Screenshot zeigt relevanten UI-Bereich?\n     * Annotationen klar und verst√§ndlich?\n     * Alt-Text passt zum Bild?\n     * Medien passt zur Textbeschreibung?\n   - Output: JSON-Report Teil 2\n\n6. Maintainer Final-Pr√ºfung\n   - Liest beide KI-Reports\n   - Entscheidet: Approved oder Reject\n\n7. Approved ‚Üí Published (wie Option B)\n```\n\n**Vorteil:** KI pr√ºft Konzeption UND Umsetzung  \n**Nachteil:** Zwei KI-Pr√ºfungen = mehr Aufwand\n\n**Empfehlung:** Starten mit Option B, sp√§ter Upgrade auf Option A wenn Mehrwert erkennbar.\n\n---\n\n### 4.3 Fehler-Dokumentation (Fehler-Log)\n\n**Zweck:**\n- Fehler dokumentieren, um der KI zu helfen, Fehler beim n√§chsten Mal nicht zu wiederholen\n- Wiederkehrende Fehler identifizieren\n- Prompt iterativ verbessern\n\n**Format:** JSON-Datei (`error-log.json`)\n\n**Beispiel-Struktur:**\n```json\n{\n  \"errorLog\": [\n    {\n      \"timestamp\": \"2025-10-09T15:30:00Z\",\n      \"sectionId\": \"section-template-types\",\n      \"buildNumber\": 123,\n      \"errorType\": \"MISSING_ATTRIBUTE\",\n      \"severity\": \"CRITICAL\",\n      \"errorDetails\": \"Pflicht-Attribut 'data-title' fehlt bei <section> (Zeile 5)\",\n      \"kiResponse\": \"KI hat vergessen, data-title zu setzen\",\n      \"resolution\": \"Maintainer hat data-title='Template-Typen' manuell erg√§nzt\",\n      \"preventionNote\": \"Prompt muss data-title als PFLICHT-Attribut deutlicher hervorheben - Beispiel hinzuf√ºgen\",\n      \"promptVersion\": \"v1.0.0\"\n    },\n    {\n      \"timestamp\": \"2025-10-09T16:15:00Z\",\n      \"sectionId\": \"section-export-workflow\",\n      \"buildNumber\": 124,\n      \"errorType\": \"INCONSISTENT_TERMINOLOGY\",\n      \"severity\": \"WARNING\",\n      \"errorDetails\": \"Begriff 'Query' verwendet, aber Terminologie-Liste sagt 'Abfrage'\",\n      \"kiResponse\": \"KI hat Terminologie-Liste nicht konsultiert\",\n      \"resolution\": \"Maintainer hat 'Query' durch 'Abfrage' ersetzt\",\n      \"preventionNote\": \"Prompt muss explizit fordern: 'Konsultiere IMMER Terminologie-Liste vor Verwendung fachspezifischer Begriffe'\",\n      \"promptVersion\": \"v1.0.0\"\n    }\n  ]\n}\n```\n\n**Verwendung:**\n- Nach jedem Validierungsfehler wird Eintrag erstellt\n- Logs werden regelm√§√üig ausgewertet\n- Wiederkehrende Fehler ‚Üí Prompt-Verbesserung\n- `promptVersion` erm√∂glicht Tracking: Hat Prompt-Update Fehler reduziert?\n\n**Speicherort:** `logs/error-log.json`\n\n---\n\n### 4.4 Fehler-Kategorisierung\n\n| Severity | Definition | Beispiel | Aktion |\n|----------|------------|----------|--------|\n| `CRITICAL` | Blocker, Section kann nicht publiziert werden | Fehlende Pflicht-Attribute, ung√ºltiges HTML | Sofortige Korrektur durch KI |\n| `ERROR` | Major, muss behoben werden | Fehlende Alt-Texte, unvollst√§ndige JSON-LD | Korrektur vor Approval |\n| `WARNING` | Minor, sollte behoben werden | >3 Hierarchie-Ebenen, fehlende optionale `data-ref` | Review durch Maintainer |\n| `INFO` | Nice-to-have, Optimierungsvorschl√§ge | \"Erw√§ge Medien-Element f√ºr bessere Verst√§ndlichkeit\" | Optional |\n\n---\n\n## 5. Metadaten (Quellen, Versionen, Erstellungsdatum)\n\n### 5.1 Bestehende Metadaten (aus Cluster 1)\n\n**JSON-LD Metadaten-Block (am Anfang jeder Section):**\n\n```json\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"TechArticle\",\n  \"identifier\": \"section-template-types\",\n  \"name\": \"Template-Typen im Detail\",\n  \"version\": \"1.0.5\",\n  \"author\": {\n    \"@type\": \"Person\",\n    \"name\": \"Claude Sonnet 4.5\",\n    \"email\": \"claude-sonnet-4.5@ai.anthropic.com\"\n  },\n  \"dateCreated\": \"2025-10-09\",\n  \"dateModified\": \"2025-10-09\",\n  \"inLanguage\": \"de-DE\",\n  \"about\": \"Detaillierte Erkl√§rung der Template-Typen in Magnet Axiom Examine\",\n  \"educationalLevel\": \"Beginner\",\n  \"timeRequired\": \"PT10M\",\n  \"toolName\": \"Magnet Axiom Examine\",\n  \"toolVersion\": \"7.x\",\n  \"sources\": [\n    {\n      \"name\": \"Magnet Axiom Examine - Official Documentation\",\n      \"version\": \"7.1\",\n      \"url\": \"https://www.magnetforensics.com/docs/axiom/7.1/\"\n    }\n  ]\n}\n```\n\n**Felder:**\n- `@context`, `@type`, `identifier`, `name`, `version`: **Pflicht**\n- `author`, `dateCreated`, `dateModified`, `inLanguage`: **Pflicht**\n- `about`, `educationalLevel`, `timeRequired`: **Empfohlen**\n- `toolName`, `toolVersion`, `sources`: **Pflicht** (Multi-Tool-Strategie)\n\n---\n\n### 5.2 Neue Metadaten (Cluster 4)\n\n**Erweiterung f√ºr Qualit√§tssicherung:**\n\n```json\n{\n  \"qualityAssurance\": {\n    \"reviewStatus\": \"Approved\",\n    \"lastReviewer\": \"Max Mustermann\",\n    \"lastReviewDate\": \"2025-10-09\",\n    \"validationScore\": 87,\n    \"knownIssues\": [\n      {\n        \"severity\": \"WARNING\",\n        \"description\": \"√úberschriften-Hierarchie bei >3 Ebenen\",\n        \"status\": \"Accepted - kein Handlungsbedarf\"\n      }\n    ],\n    \"reviewCycles\": 2,\n    \"timeToPublish\": \"PT2H30M\"\n  }\n}\n```\n\n**Neue Felder:**\n- `reviewStatus`: Draft | Review | Approved | Published\n- `lastReviewer`: Name des Maintainers\n- `lastReviewDate`: Datum der letzten Pr√ºfung\n- `validationScore`: 0-100 (siehe Abschnitt 8.1)\n- `knownIssues`: Liste offener Probleme (Array)\n- `reviewCycles`: Anzahl Draft‚ÜíReview‚ÜíDraft Zyklen\n- `timeToPublish`: Zeit von Draft bis Published (ISO-8601)\n\n---\n\n### 5.3 JSON-LD Erweiterung (Vollst√§ndig)\n\n**Komplettes Beispiel mit QA-Metadaten:**\n\n```json\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"TechArticle\",\n  \"identifier\": \"section-template-types\",\n  \"name\": \"Template-Typen im Detail\",\n  \"version\": \"1.0.5\",\n  \"author\": {\n    \"@type\": \"Person\",\n    \"name\": \"Claude Sonnet 4.5\",\n    \"email\": \"claude-sonnet-4.5@ai.anthropic.com\"\n  },\n  \"dateCreated\": \"2025-10-09\",\n  \"dateModified\": \"2025-10-09\",\n  \"inLanguage\": \"de-DE\",\n  \"about\": \"Detaillierte Erkl√§rung der Template-Typen in Magnet Axiom Examine\",\n  \"educationalLevel\": \"Beginner\",\n  \"timeRequired\": \"PT10M\",\n  \"toolName\": \"Magnet Axiom Examine\",\n  \"toolVersion\": \"7.x\",\n  \"sources\": [\n    {\n      \"name\": \"Magnet Axiom Examine - Official Documentation\",\n      \"version\": \"7.1\",\n      \"url\": \"https://www.magnetforensics.com/docs/axiom/7.1/\"\n    }\n  ],\n  \"qualityAssurance\": {\n    \"reviewStatus\": \"Approved\",\n    \"lastReviewer\": \"Max Mustermann\",\n    \"lastReviewDate\": \"2025-10-09\",\n    \"validationScore\": 87,\n    \"knownIssues\": [],\n    \"reviewCycles\": 1,\n    \"timeToPublish\": \"PT1H15M\"\n  }\n}\n```\n\n---\n\n## 6. Iterationslogik (Wann ist eine Section \"fertig\"?)\n\n### 6.1 Status-√úberg√§nge\n\n```\nDraft ‚Üí Review ‚Üí Approved ‚Üí Published\n  ‚Üë        ‚Üì\n  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò (bei Reject)\n```\n\n**Status-Definitionen:**\n\n| Status | Definition | Kriterien |\n|--------|------------|-----------|\n| `Draft` | KI hat Section generiert | Initiale Generierung abgeschlossen |\n| `Review` | Syntaktisch korrekt, semantische Pr√ºfung l√§uft | Alle CRITICAL/ERROR behoben, Medien werden erstellt |\n| `Approved` | Bereit zur Integration | Maintainer hat fachliche Korrektheit best√§tigt, alle Issues behoben |\n| `Published` | Live im System | In index.html integriert |\n\n---\n\n### 6.2 Review-Zyklen\n\n**Kein automatisches Approval:**\n- Jede Section durchl√§uft **mindestens einen Review-Zyklus**\n- Maintainer pr√ºft **immer** fachliche Korrektheit\n- Auch bei \"perfektem\" Validierungs-Score ist manuelle Pr√ºfung Pflicht\n\n**Review-Zyklus-Tracking:**\n- Metadaten-Feld `reviewCycles` z√§hlt Iterationen\n- Beispiel: `reviewCycles: 1` = Section wurde einmal reviewed und approved\n- Beispiel: `reviewCycles: 3` = Section wurde 3x rejected, bevor approved\n\n**Qualit√§tsziel:**\n- Durchschnitt: ‚â§ 2 Review-Zyklen pro Section\n- Bei >3 Zyklen: Analyse, warum Section problematisch war\n\n---\n\n### 6.3 Abbruchkriterien\n\n**Wann wird eine Section verworfen?**\n\nNormalerweise wird eine Section iterativ verbessert, bis sie approved ist. In Ausnahmef√§llen kann eine Section verworfen werden:\n\n- **Nach >5 Review-Zyklen** ohne signifikante Verbesserung\n- **Fachliche Inkorrektheit nicht behebbar** (z.B. Thema nicht durch Quellen abgedeckt)\n- **Redundanz** mit anderer Section (Maintainer entscheidet: Merge oder Discard)\n\n**Verwerfen-Prozess:**\n- Section erh√§lt Status `Discarded`\n- Begr√ºndung wird in `knownIssues` dokumentiert\n- Fehler-Log erh√§lt Eintrag mit `errorType: \"SECTION_DISCARDED\"`\n\n---\n\n## 7. Versionierung\n\n### 7.1 Versionsschema\n\n**Format:** `MAJOR.MINOR.BUILD`\n\n**Beispiele:**\n- `1.0.0` - Erste ver√∂ffentlichte Version\n- `1.0.5` - F√ºnfter Build der Version 1.0\n- `1.1.0` - Erste Version mit neuen Features\n- `2.0.0` - Breaking change (z.B. neuer Aufbau)\n\n---\n\n### 7.2 Versionsnummern-Erh√∂hung\n\n**MAJOR (Erste Stelle):**\n- Breaking changes (z.B. komplette Neustrukturierung)\n- Beispiel: `1.x.x ‚Üí 2.0.0`\n\n**MINOR (Zweite Stelle):**\n- Neue Features/Funktionen hinzugef√ºgt\n- Neue Inhalte ver√∂ffentlicht (z.B. neues Kapitel)\n- Beispiel: `1.0.x ‚Üí 1.1.0`\n\n**BUILD (Dritte Stelle):**\n- Inkrementell pro Test/Validierung\n- Bugfixes\n- Kleine Anpassungen\n- Beispiel: `1.0.5 ‚Üí 1.0.6`\n\n**Versionierung pro Section:**\n- Jede Section hat eigene Versionsnummer in JSON-LD\n- Unabh√§ngig von Gesamt-Projekt-Version\n- Erm√∂glicht granulares Tracking\n\n---\n\n### 7.3 Archivierung\n\n**Git-basiert:**\n- Alle Versionen werden in Git versioniert\n- Keine zus√§tzliche Archivierung notwendig\n- Git-Historie reicht aus f√ºr Rollback und Audit\n\n**Best Practice:**\n- Commit nach jedem Status√ºbergang:\n  - `Draft ‚Üí Review`: \"Section XYZ: Reviewed\"\n  - `Review ‚Üí Approved`: \"Section XYZ: Approved\"\n  - `Approved ‚Üí Published`: \"Section XYZ: Published\"\n\n---\n\n## 8. Metriken & Erfolgskriterien\n\n### 8.1 Pro Section\n\n**Anzahl Validierungsfehler:**\n- Gesamt\n- Nach Severity (CRITICAL/ERROR/WARNING/INFO)\n\n**Review-Zyklen:**\n- Wie oft Draft ‚Üí Review ‚Üí Draft?\n- Ziel: ‚â§ 2 Zyklen\n\n**Zeit Draft ‚Üí Published:**\n- ISO-8601 Duration (z.B. `PT2H30M` = 2 Stunden 30 Minuten)\n- Ziel: < 3 Stunden (bei ersten Sections), < 1 Stunde (bei optimiertem Prozess)\n\n**validationScore (0-100):**\n- **Berechnung (einfache Formel, initial):**\n  ```\n  validationScore = 100 - (CRITICAL √ó 20) - (ERROR √ó 10) - (WARNING √ó 5)\n  Minimum: 0\n  Maximum: 100\n  ```\n- **Beispiel:**\n  - 0 CRITICAL, 1 ERROR, 2 WARNING\n  - Score = 100 - (0√ó20) - (1√ó10) - (2√ó5) = 100 - 10 - 10 = **80**\n\n- **Ziel:** ‚â• 85 Punkte vor Approval\n\n**Wichtig:** validationScore-Berechnung wird in Zukunft erweitert (siehe Abschnitt 10).\n\n---\n\n### 8.2 Aggregiert (√ºber alle Sections)\n\n**Durchschnittliche Fehlerrate:**\n- Durchschnitt CRITICAL/ERROR/WARNING pro Section\n- Ziel: < 5 Fehler pro Section\n\n**Durchschnittliche Zeit:**\n- Durchschnitt Zeit Draft ‚Üí Published\n- Ziel: < 2 Stunden (nach Optimierung)\n\n**Status-Verteilung:**\n- Anzahl Sections pro Status (Draft/Review/Approved/Published)\n- Beispiel: 10 Draft, 15 Review, 5 Approved, 70 Published = 100 Sections total\n\n**Ablehnungsquote:**\n- Anzahl Sections mit >3 Review-Zyklen\n- Ziel: < 10% der Sections",
      "time_iso8601": "2025-10-09T19:25:52"
    },
    {
      "role": "Prompt",
      "say": "Weiter",
      "time_iso8601": "2025-10-09T19:26:17"
    },
    {
      "role": "Response",
      "say": "Cluster 4 - Teil 2 (ab 8.3 bis Ende)\n\n\n## 8.3 Reporting\n\n**Konsolenausgaben (Python):**\n- Validierungs-Ergebnisse w√§hrend Entwicklung\n- Echtzeit-Feedback f√ºr Maintainer\n- Beispiel: `‚úì Section validated: 2 WARNINGS, Score: 90`\n\n**HTML-Reports:**\n- `media-validation-report.html` - √úbersicht aller Medien-Validierungen\n- `validation-summary-report.html` - Aggregierte Metriken\n- Generiert nach Batch-Validierung\n\n**JSON-Exports:**\n- `error-log.json` - Fehler-Dokumentation (siehe 4.3)\n- `section-metrics.json` - Pro-Section Metriken\n- `aggregate-metrics.json` - Aggregierte Statistiken\n\n---\n\n## 9. Datengrundlagen f√ºr KI-Pr√ºfung\n\n### 9.1 √úbersicht\n\n**Die semantische KI-Pr√ºfung ben√∂tigt umfassende Datengrundlagen, um qualitativ hochwertige Bewertungen abzugeben.**\n\n---\n\n### 9.2 Detaillierte Datenquellen\n\n**1. Alle bereits generierten Sections:**\n- **Zweck:** Konsistenzpr√ºfung √ºber Sections hinweg\n- **Format:** HTML-Dateien oder JSON-Struktur\n- **Umfang:** Alle Sections im Status `Approved` oder `Published`\n- **Verwendung:** Abgleich von Terminologie, Tonalit√§t, Struktur\n\n**2. Terminologie-Entscheidungsliste:**\n- **Zweck:** Konsistente Begriffswahl sicherstellen\n- **Format:** JSON oder Markdown-Tabelle\n- **Beispiel-Struktur:**\n  ```json\n  {\n    \"terminology\": [\n      {\n        \"term\": \"Query\",\n        \"decision\": \"Abfrage\",\n        \"language\": \"de\",\n        \"rationale\": \"Gel√§ufiger deutscher Begriff existiert\",\n        \"context\": \"Allgemein\"\n      },\n      {\n        \"term\": \"Artifacts Explorer\",\n        \"decision\": \"Artifacts Explorer\",\n        \"language\": \"en\",\n        \"rationale\": \"Software-spezifisches UI-Element\",\n        \"context\": \"Magnet AXIOM\"\n      }\n    ]\n  }\n  ```\n- **Pflege:** Durch Maintainer w√§hrend Content-Generierung\n- **Update:** Bei jedem neuen Begriff-Dilemma\n\n**3. Rahmenplan & Gliederung:**\n- **Zweck:** Pr√ºfen, ob Section dem geplanten Aufbau entspricht\n- **Format:** Hierarchische Struktur (JSON oder Markdown)\n- **Beispiel:**\n  ```json\n  {\n    \"chapter\": \"Vorbereitung\",\n    \"sections\": [\n      {\n        \"id\": \"section-template-selection\",\n        \"title\": \"Template-Auswahl\",\n        \"expectedTopics\": [\n          \"Template-Typen\",\n          \"Best-Practice Empfehlungen\",\n          \"H√§ufige Fehler\"\n        ],\n        \"estimatedLength\": \"medium\",\n        \"requiredMediaTypes\": [\"screenshot\", \"annotated\"]\n      }\n    ]\n  }\n  ```\n\n**4. Quellmaterial:**\n- **Magnet AXIOM Handbuch** (offiziell, verschiedene Versionen)\n- **Weitere Dokumentationen** (z.B. Release Notes, Knowledge Base)\n- **Format:** PDF, HTML, Markdown\n- **Verwendung:** Plausibilit√§tspr√ºfung von Anweisungen\n\n**5. Style-Guides:**\n\n**a) Writing-Guide (aus Cluster 1):**\n- Zielgruppe: IT-ferne Ermittler\n- Tonalit√§t: Subtil-unterst√ºtzend, sachlich\n- Sprachniveau: Einfache Sprache, kurze S√§tze\n- Terminologie-Regeln\n\n**b) Mediennutzungs-Guide (aus Cluster 1):**\n- Medien-Entscheidungsmatrix\n- Wann Screenshot/Annotiert/Video/Diagramm?\n- Alt-Text-Richtlinien (10-120 Zeichen)\n- Video-Untertitel-Anforderungen\n\n**c) HTML-Syntax-Guide (aus Cluster 3):**\n- HTML-Element-Whitelist (32 Elemente)\n- Pflicht-/Optional-Attribute pro Element\n- Attribut-Reihenfolge (class ‚Üí id ‚Üí data-* ‚Üí sonstige)\n- CSS-Klassen-System\n- HTML-Kommentar-Konventionen\n\n**6. Erwartetes Antwortschema:**\n- **Zweck:** Standardisierung der KI-Pr√ºf-Outputs\n- **Format:** JSON-Schema\n- **Inhalt:** Struktur des semantischen Review-Reports (siehe 2.2.2)\n\n---\n\n### 9.3 Datenzugriff f√ºr KI-Agent\n\n**Bereitstellung:**\n- Alle Datenquellen werden der KI als **Kontext** √ºbergeben\n- Bei gro√üen Datenmengen: Relevante Ausschnitte extrahieren\n- Beispiel: Bei Section \"Export\" nur Sections aus Kapitel \"Export\" zur Konsistenzpr√ºfung\n\n**Update-Frequenz:**\n- **Terminologie-Liste:** Bei Bedarf (neue Begriffe)\n- **Sections:** Nach jedem Approval\n- **Rahmenplan:** Zu Beginn jedes Kapitels\n- **Quellmaterial:** Bei neuen Versionen von AXIOM\n\n---\n\n## 10. Zuk√ºnftige Erweiterungen\n\n### 10.1 ValidationScore-Berechnung (detailliert)\n\n**Aktuelle Formel (einfach):**\n```\nvalidationScore = 100 - (CRITICAL √ó 20) - (ERROR √ó 10) - (WARNING √ó 5)\n```\n\n**Geplante Erweiterungen:**\n\n**Umfang ber√ºcksichtigen:**\n- L√§ngere Sections sollten h√∂her bewertet werden (mehr Arbeit)\n- Formel-Erweiterung: `+0.1 Punkte pro 100 W√∂rter` (max. +10 Punkte)\n\n**Anzahl Medien ber√ºcksichtigen:**\n- Mehr Medien = h√∂herer Aufwand = bessere Bewertung\n- Formel-Erweiterung: `+2 Punkte pro Medium` (max. +10 Punkte)\n\n**Verh√§ltnis Medien je Satz:**\n- Optimales Verh√§ltnis: 1 Medium pro 5-10 S√§tze\n- Zu wenig Medien: Abzug\n- Zu viele Medien: Kein Abzug (besser zu viel als zu wenig)\n\n**Komplexit√§tsfaktor:**\n- Detail-Level 3 (Detailliert) schwieriger als Level 1 (Schnell√ºbersicht)\n- Bonus-Punkte f√ºr h√∂here Detail-Levels\n\n**Beispiel-Formel (erweitert):**\n```\nvalidationScore = 100 \n  - (CRITICAL √ó 20) \n  - (ERROR √ó 10) \n  - (WARNING √ó 5)\n  + (Wortanzahl / 100) √ó 0.1    (max. +10)\n  + (Anzahl Medien √ó 2)          (max. +10)\n  + (DetailLevel √ó 5)            (max. +15)\n  - (Medien-zu-Satz-Abweichung √ó 2)\n\nMinimum: 0\nMaximum: 135 (normalisiert auf 100)\n```\n\n**Status:** Noch nicht implementiert - **auf Agenda f√ºr sp√§tere Iteration**\n\n---\n\n### 10.2 Weitere Metriken nach Bedarf\n\n**Potenzielle zuk√ºnftige Metriken:**\n\n**Lesbarkeit-Score:**\n- Flesch-Reading-Ease Score (Deutsch-Variante)\n- Ziel: ‚â• 60 Punkte (leicht verst√§ndlich)\n\n**Konsistenz-Score:**\n- Wie konsistent ist Terminologie √ºber Sections?\n- Berechnung: % einheitlich verwendeter Begriffe\n\n**Medien-Qualit√§t-Score:**\n- KI bewertet Screenshot-Qualit√§t (Aufl√∂sung, Relevanz)\n- Nur bei Option A (erweiterter Workflow mit Medien-Pr√ºfung)\n\n**Interaktivit√§t-Score:**\n- Wie viele Agent-Trigger pro Section?\n- Ziel: Mindestens 1-2 Trigger pro Section\n\n**Barrierefreiheit-Score:**\n- Detaillierter als bin√§re Pr√ºfung\n- Punkte f√ºr: Alt-Texte, Sprachauszeichnung, Kontraste, etc.\n\n**Status:** Nicht priorisiert - k√∂nnen bei Bedarf sp√§ter hinzugef√ºgt werden\n\n---\n\n### 10.3 Automatisierte Prompt-Verbesserung\n\n**Vision:** Fehler-Log automatisch auswerten und Prompt-Verbesserungen vorschlagen\n\n**Mechanismus:**\n1. **Fehler-H√§ufigkeitsanalyse:** Welche Fehler treten am h√§ufigsten auf?\n2. **Pattern-Erkennung:** Gibt es systematische Probleme?\n3. **Prompt-Diff generieren:** KI schl√§gt konkrete Prompt-√Ñnderungen vor\n4. **A/B-Testing:** Alte vs. neue Prompt-Version testen\n5. **Iterative Verbesserung:** Prompt-Version erh√∂hen bei Erfolg\n\n**Beispiel:**\n- Fehler-Log zeigt: 30% aller Sections haben fehlende `data-title`\n- KI-Analyse: Prompt erw√§hnt `data-title` nur einmal, nicht prominent\n- KI-Vorschlag: \"F√ºge separaten Abschnitt 'Pflicht-Attribute' mit Beispiel hinzu\"\n- Maintainer testet neuen Prompt\n- Fehlerrate sinkt auf 5% ‚Üí Prompt-Update wird permanent\n\n**Status:** Zukunftsvision - nicht Teil von Cluster 4\n\n---\n\n## 11. Zusammenfassung & N√§chste Schritte\n\n### 11.1 Was wurde in Cluster 4 erreicht?\n\n‚úÖ **Validierungsebenen definiert:**\n- Syntaktisch (automatisiert, bereits implementiert)\n- Semantisch (KI-Agent + Maintainer)\n- BFSG (implizit in syntaktischen Pr√ºfungen)\n\n‚úÖ **Testkriterien spezifiziert:**\n- Syntaktische Kriterien (Pflicht-Attribute, HTML-Struktur, Cross-References, etc.)\n- Semantische Kriterien (Konsistenz, Plausibilit√§t, Zusammenhang, etc.)\n\n‚úÖ **Validierungsprozess dokumentiert:**\n- Standard-Workflow (Option B): Draft ‚Üí Validierung ‚Üí Review ‚Üí Approved ‚Üí Published\n- Erweiterter Workflow (Option A): Mit zweifacher KI-Pr√ºfung (vor/nach Medien)\n- Fehler-Kategorisierung (CRITICAL/ERROR/WARNING/INFO)\n- Fehler-Dokumentation (error-log.json)\n\n‚úÖ **Metadaten erweitert:**\n- Neue QA-Felder: reviewStatus, lastReviewer, validationScore, knownIssues, reviewCycles, timeToPublish\n- JSON-LD vollst√§ndig spezifiziert\n\n‚úÖ **Iterationslogik gekl√§rt:**\n- Status-√úberg√§nge: Draft ‚Üí Review ‚Üí Approved ‚Üí Published\n- Kein automatisches Approval\n- Review-Zyklen getrackt\n\n‚úÖ **Versionierung definiert:**\n- MAJOR.MINOR.BUILD\n- Erh√∂hungs-Regeln klar\n- Git-basierte Archivierung\n\n‚úÖ **Metriken & Erfolgskriterien:**\n- Pro Section: Fehler, Review-Zyklen, Zeit, validationScore\n- Aggregiert: Durchschnitte, Status-Verteilung, Ablehnungsquote\n- Reporting: Konsole, HTML, JSON\n\n‚úÖ **Datengrundlagen f√ºr KI-Pr√ºfung:**\n- Alle Sections, Terminologie-Liste, Rahmenplan, Quellmaterial, Style-Guides, Antwortschema\n\n‚úÖ **Zuk√ºnftige Erweiterungen dokumentiert:**\n- ValidationScore (detailliert)\n- Weitere Metriken nach Bedarf\n- Automatisierte Prompt-Verbesserung\n\n---\n\n### 11.2 Offene Punkte f√ºr Cluster 5 (Workflow & Rollen)\n\n**Cluster 5 wird sich mit folgenden Themen befassen:**\n\n1. **Arbeitsschritte der KI:**\n   - Research ‚Üí Draft ‚Üí Detailing ‚Üí Review ‚Üí Syntax-Check\n   - Welche Tools/APIs nutzt die KI in jeder Phase?\n\n2. **Rollendefinitionen:**\n   - KI-Generator (erstellt Sections)\n   - KI-Reviewer (semantische Pr√ºfung)\n   - Maintainer (finale Pr√ºfung, Medien-Erstellung)\n   - Validator (Python-Skripte)\n\n3. **Schnittstellendefinition:**\n   - Input/Output zwischen Phasen\n   - Datenformate\n   - √úbergabepunkte\n\n4. **Fehlerbehandlung & Feedback-Loops:**\n   - Was passiert bei Fehlern in jeder Phase?\n   - Wie wird Feedback zur√ºck an die KI gegeben?\n   - Eskalationspfade\n\n5. **Tooling & Automation:**\n   - Welche Tools unterst√ºtzen den Workflow?\n   - Kann der Prozess teilweise automatisiert werden?\n\n---\n\n### 11.3 N√§chste Schritte (konkret)\n\n**Sofort umsetzbar (nach Cluster 4):**\n\n1. **Fehler-Log implementieren:**\n   - Datei: `logs/error-log.json`\n   - Python-Skript erweitern: Bei Fehler ‚Üí Eintrag erstellen\n   - Aufwand: 1-2 Stunden\n\n2. **QA-Metadaten in JSON-LD erg√§nzen:**\n   - `qualityAssurance`-Block hinzuf√ºgen\n   - Python-Validator erweitern\n   - Aufwand: 1 Stunde\n\n3. **ValidationScore berechnen (einfache Formel):**\n   - Python-Funktion erstellen\n   - In Validierungs-Output integrieren\n   - Aufwand: 30 Minuten\n\n4. **Workflow-Dokumentation f√ºr Team:**\n   - Basierend auf Cluster 4\n   - F√ºr Maintainer verst√§ndlich aufbereitet\n   - Aufwand: 1 Stunde\n\n**Danach:**\n- Cluster 5: Workflow & Rollen\n- Dann: Prompt-Entwicklung (Integration aller Cluster)\n- Testing & Iteration\n\n---\n\n## 12. Anhang\n\n### 12.1 Referenz-Links\n\n- **JSON-Schema:** https://json-schema.org/\n- **Schema.org (JSON-LD):** https://schema.org/TechArticle\n- **ISO-8601 Duration:** https://en.wikipedia.org/wiki/ISO_8601#Durations\n- **BFSG (Barrierefreiheitsst√§rkungsgesetz):** https://www.gesetze-im-internet.de/bfsg/\n- **Flesch Reading Ease (Deutsch):** https://de.wikipedia.org/wiki/Lesbarkeitsindex\n\n---\n\n### 12.2 Glossar\n\n| Begriff | Definition |\n|---------|------------|\n| **Draft** | Initial generierte Section durch KI |\n| **Review** | Section durchl√§uft semantische Pr√ºfung, Medien werden erstellt |\n| **Approved** | Section ist bereit zur Integration in index.html |\n| **Published** | Section ist in index.html integriert und live |\n| **validationScore** | 0-100 Punkte Score basierend auf Validierungsfehlern |\n| **Review-Zyklus** | Anzahl Draft‚ÜíReview‚ÜíDraft Iterationen |\n| **Fehler-Log** | JSON-Datei zur Dokumentation von Validierungsfehlern |\n| **KI-Agent** | KI-System zur semantischen Vorpr√ºfung von Sections |\n| **Maintainer** | Mensch, der finale fachliche Pr√ºfung durchf√ºhrt |\n| **Terminologie-Entscheidungsliste** | Liste mit Begriffsentscheidungen (deutsch vs. englisch) |\n\n---\n\n### 12.3 Beispiel: Vollst√§ndiger Validierungs-Durchlauf\n\n**Szenario:** Section \"Template-Typen im Detail\" wird generiert\n\n**Schritt 1: Draft**\n- KI generiert Section mit 500 W√∂rtern, 3 Medien-Platzhaltern\n- Status: `Draft`\n- `version: 1.0.0`\n\n**Schritt 2: Syntaktische Validierung**\n- Python-Skript pr√ºft HTML\n- **Ergebnis:** 1 ERROR (fehlende `data-title`), 2 WARNINGS (>3 Hierarchie-Ebenen)\n- validationScore = 100 - 10 - 10 = **80**\n- Fehler-Log-Eintrag erstellt\n- Zur√ºck an KI mit Fehler-Output\n\n**Schritt 3: KI korrigiert**\n- KI f√ºgt `data-title` hinzu\n- Hierarchie optimiert\n- Erneute Validierung: **0 Fehler**\n- validationScore = **100**\n\n**Schritt 4: Semantische KI-Pr√ºfung**\n- KI-Agent pr√ºft Konsistenz, Plausibilit√§t, etc.\n- **Ergebnis:** 1 WARNING (Begriff \"Query\" statt \"Abfrage\")\n- JSON-Report erstellt\n- Status√ºbergang: `Draft` ‚Üí `Review`\n\n**Schritt 5: Review durch Maintainer**\n- Maintainer liest KI-Report\n- Korrigiert \"Query\" ‚Üí \"Abfrage\"\n- Erstellt 3 Screenshots basierend auf Platzhaltern\n- Pr√ºft fachliche Korrektheit: ‚úÖ OK\n- Entscheidung: **Approved**\n\n**Schritt 6: Metadaten-Update**\n- `reviewStatus: \"Approved\"`\n- `lastReviewer: \"Max Mustermann\"`\n- `lastReviewDate: \"2025-10-09\"`\n- `validationScore: 100`\n- `reviewCycles: 1`\n- `timeToPublish: \"PT1H30M\"`\n\n**Schritt 7: Published**\n- Section wird in index.html integriert\n- Status√ºbergang: `Approved` ‚Üí `Published`\n- Git-Commit: \"Section template-types: Published\"\n\n**Fertig!** ‚úÖ\n\n---\n\n### 12.4 Checkliste f√ºr Maintainer\n\n**Vor Review:**\n- [ ] Section hat Status `Review`\n- [ ] Syntaktische Validierung: 0 CRITICAL, 0 ERROR\n- [ ] KI-Report liegt vor\n\n**W√§hrend Review:**\n- [ ] KI-Report gelesen und verstanden\n- [ ] Alle Medien-Platzhalter abgearbeitet\n- [ ] Screenshots/Videos erstellt und eingef√ºgt\n- [ ] Alt-Texte f√ºr alle Medien geschrieben\n- [ ] Fachliche Korrektheit gepr√ºft (Abgleich mit AXIOM)\n- [ ] Terminologie konsistent (Abgleich mit Liste)\n- [ ] Verst√§ndlichkeit f√ºr Zielgruppe gegeben\n\n**Nach Review:**\n- [ ] Entscheidung: Approved oder Reject (mit Feedback)\n- [ ] Metadaten aktualisiert (`lastReviewer`, `reviewStatus`, etc.)\n- [ ] Bei Approved: Git-Commit\n- [ ] Bei Reject: Fehler-Log-Eintrag + Feedback an KI\n\n---\n\n**Ende Cluster 4**  \n**Status:** Abgeschlossen und bereit f√ºr Cluster 5  \n**Bearbeitungszeit:** ~1,5 Stunden\n\n\nPerfekt! Ich habe nun das vollst√§ndige Cluster 4-Dokument in zwei Teilen erstellt:\n\n\nüìÑ Teil 1 (Abschnitte 1-8.2): Bereits erstellt\nüìÑ Teil 2 (Abschnitte 8.3-12.4): Gerade erstellt\n\n\n\nBeide Teile zusammen ergeben das vollst√§ndige Dokument:\n\n\nCluster 4: Qualit√§tssicherung & Testing\n\n\n‚úÖ Alle 12 Hauptabschnitte\n‚úÖ Vollst√§ndige Workflow-Beschreibungen (Option A & B)\n‚úÖ Fehler-Log-Konzept\n‚úÖ Metadaten-Erweiterungen\n‚úÖ Metriken & Reporting\n‚úÖ Beispiel-Durchlauf\n‚úÖ Maintainer-Checkliste\n\n\n\nWas als N√§chstes?\n\n\nCluster 4 ist abgeschlossen! üéâ\n\n\nM√∂chten Sie:\n\n\nCluster 5 (Workflow & Rollen) direkt beginnen?\n\nErst eine Pause machen?\n\nDas Dokument noch durchsehen und Feedback geben?\n\n\nSagen Sie mir einfach, wie Sie weitermachen m√∂chten! üòä",
      "time_iso8601": "2025-10-09T19:28:06"
    },
    {
      "role": "Prompt",
      "say": "Gut, dann √ºberarbeite bitte das Dokument  task3_draft.md dahingehend, dass es die Ergebnisse aus diesem Cluster 4 noch zusammenfasst und im Anschluss auf die Bearbeitung von Cluster 5 vorbereitet. VIelen Dank! Ich werde diese Arbeit dann in einem neuen Chat fortsetzen.",
      "time_iso8601": "2025-10-09T21:10:34"
    },
    {
      "role": "Response",
      "say": "project_knowledge_search\n\n\nRequest\n\n\n{\n  \"query\": \"task3_draft.md Cluster Continuation Prompt\",\n  \"max_text_results\": 15\n}\n\n\nResponse\n\n\ntask3-draft.md\n## N√É¬§chster Schritt: Cluster 5 * Workflow & Rollen\n* Arbeitsschritte der KI (Research √¢‚Ä†‚Äô Draft √¢‚Ä†‚Äô Detailing √¢‚Ä†‚Äô Review √¢‚Ä†‚Äô Syntax-Check)\n* Rollendefinitionen f√É¬ºr verschiedene Phasen, Der KI Agent als Author, Lektor und Editor\n* Schnittstellendefinition zwischen den Phasen, Welche Daten werden √É¬ºbergeben\n* Fehlerbehandlung und Feedback-Loops, bei Problemen bitte bei XY melden.\n\n\n---\n\n## Arbeitsweise\n\n* **Kleinschrittig vorgehen** (keine gro√É≈∏en Spr√É¬ºnge)\n* **Top-Down-Design** (vom Groben ins Detail)\n* **Gef√É¬ºhrte Fragen** stellen, bis 95% Klarheit erreicht ist\n* √É‚Äûnderungen nur **vorschlagen und begr√É¬ºnden**\n* Jede √É‚Äûnderung muss **durch mich verifiziert und akzeptiert** werden\n* Am Ende ein **Ergebnisdokument** erstellen (analog zu Cluster 1-3)\n\n---\n\n## Wichtige Projekt-Richtlinien\n\n### Textstil f√É¬ºr dich (KI):\n* Bleibe eng an meiner Vorgabe\n* F√É¬ºge keine zus√É¬§tzlichen Aspekte hinzu\n* Erst meine Aufgabe umsetzen, dann separat Verbesserungen vorschlagen\n* Verbesserungsvorschl√É¬§ge in 3 Abs√É¬§tzen erkl√É¬§ren: Vorteile, Technik, Aufwand\n* Vermeide Telegramstil\n* Hebe wichtige Aussagen durch **Fettmarkieren** hervor\n\n### Code-√É‚Äûnderungen:\n* Immer kleinschrittig und Schritt f√É¬ºr Schritt\n* Keine unerw√É¬ºnschten Nebeneffekte\n* CSS-Variablen `--variable*` bewahren und nutzen\n* Keine absoluten Gr√É¬∂√É≈∏en/Farben au√É≈∏erhalb der Themes\n* Immer den **aktuellen Code** aus dem Projekt-Dateispeicher als Basis verwenden\n* Jede √É‚Äûnderung begr√É¬ºnden\n* Mindestens einen Test vorschlagen\n\n---\n\n## Meine Frage\n\nBitte lies die sechs Dokumente im Projekt-Dateispeicher:\n1. `cluster1-final.md` (Inhaltliche Anforderungen)\n2. `cluster2_results.md` (Strukturelle Anforderungen)\n3. `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md` (BFSG Teil 1)\n4. `cluster3_BFSG-Barrierefreiheit-Content.md` (BFSG Teil 2)\n5. `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√É¬§ndigkeit.md` (HTML-Syntax)\n6. `cluster4_Qualit√É¬§tssicherung-Metadaten-Validierung.md` (Qualit√É¬§tssicherung Anforderungen)\n\n**Lass uns dann Cluster 5: Prompt-Entwicklung angehen.**\n\nStelle mir gef√É¬ºhrte Fragen, damit wir gemeinsam den Master-Prompt entwickeln k√É¬∂nnen. Wir gehen wie immer kleinschrittig vor und kl√É¬§ren zun√É¬§chst die grundlegende Struktur, bevor wir ins Detail gehen.\n\n---\n\n## Kontext-Informationen\n\n**Projekt:** WebAssistentForensics  \n**Ziel-Tool (initial):** Magnet AXIOM Examine  \n**Sp√É¬§tere Erweiterung:** X-Ways Forensics, Cellebrite Reader  \n**Haupt-Zielgruppe:** IT-ferne Polizei-Ermittler  \n**Content-Umfang:** ~100-150 Sections  \n**KI-Modell:** Claude Sonnet 4.5  \n**Validierung:** Python-basiert + JSON-Schema  \n\n---\n\n**Ich freue mich auf die Zusammenarbeit!**\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\n‚úÖ Inhaltliche Anforderungen (Cluster 1)\n2. ‚úÖ Strukturelle Anforderungen (Cluster 2)\n3. ‚úÖ Technische Anforderungen (Cluster 3)\n4. ‚è≥ Prompt-Entwicklung f√ºr KI (Cluster 4) **‚Üê JETZT DRAN**\n5. üîµ Qualit√§tssicherung & Testing (Cluster 5)\n6. üîµ Workflow & Rollen (Cluster 6)\n\n---\n\n## Aktueller Stand\n\nWir haben die **komplette Spezifikation** f√ºr die Content-Generierung dokumentiert:\n\n### Was ist fertig:\n\n**Inhaltlich (Cluster 1):**\n- Zielgruppe: IT-ferne Ermittler (Mittlere Reife, niedrige IT-Kenntnisse)\n- Detail-Level-System: 4 Stufen (Schnell, Standard, Detailliert, Show-Only)\n- Terminologie-Strategie: Deutsch bevorzugt, englische Fachbegriffe wo etabliert\n- Medien-Entscheidungsmatrix: Wann Screenshot/Annotiert/Video/Diagramm\n- Content-Type-System: instruction, explanation, visual, background, info, hint, attention, warning\n- Multi-Tool-Strategie: Tool-agnostisch mit tool-spezifischen Metadaten\n\n**Strukturell (Cluster 2):**\n- Hierarchische Struktur: 3-5 Ebenen (Topic ‚Üí Chapter ‚Üí Section ‚Üí Subsection ‚Üí Deep-Dive)\n- data-ref Granularit√§t & Namenskonventionen\n- JSON-LD Metadaten pro Section\n- Agent-Context-Block (einer pro Section, am Ende)\n- Navigation-Strategie: Freie Navigation\n\n**Technisch (Cluster 3):**\n- BFSG-konforme Barrierefreiheit (Sprachauszeichnung, Alt-Texte, √úberschriften-Hierarchie)\n- HTML-Element-Whitelist (32 erlaubte Elemente)\n- Pflicht-/Optional-Attribute pro Element\n- CSS-Klassen-System (Pflicht-Klassen, Review-Prozess)\n- Attribut-Reihenfolge & Formatierung (class ‚Üí id ‚Üí data-* ‚Üí sonstige)\n- Content-Type-Box-Entscheidungsmatrix (info/hint/attention/warning)\n- HTML-Kommentar-Konventionen (AGENT:/MEDIA:/NOTE:/TODO:/DECISION-REVIEW:)\n\n---\n\n## N√§chster Schritt: Cluster 4 - Prompt-Entwicklung\n\n### Ziel\n\nEntwicklung eines **vollst√§ndigen, pr√§zisen Master-Prompts** f√ºr Claude Sonnet 4.5 zur Generierung von hochwertigem Content f√ºr ~100-150 Sections.\n\nDer Prompt muss **alle Anforderungen aus Cluster 1-3 integrieren** und f√ºr die KI **direkt verwendbar** sein.\n\n### Aufgaben f√ºr Cluster 4\n\n**Phase A: Prompt-Struktur & Architektur**\n1. Aufbau des Master-Prompts (Abschnitte, Hierarchie)\n2. Informationsdichte vs. Verst√§ndlichkeit\n3. Kontext-Management (was muss immer dabei sein, was ist optional?)\n4. Modularer Aufbau (wiederverwendbare Komponenten)\n\n**Phase B: Prompt-Inhalte**\n1. Integration aller Anforderungen aus Cluster 1-3\n2. Entscheidungsb√§ume f√ºr KI (Content-Type, Media-Type, etc.)\n3. Beispiele & Counter-Beispiele\n4. Grenzfall-Behandlung\n\n**Phase C: Testing & Iteration**\n1. Test-Prompts erstellen (verschiedene Schwierigkeitsgrade)\n2. Generierte Sections validieren\n3. Prompt iterativ verbessern\n4.\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\n# Projekt-Fortsetzung: Cluster 4 - Prompt-Entwicklung f√ºr KI-Content-Generierung\n\nHallo! Ich arbeite am Projekt **WebAssistentForensics** und m√∂chte die Arbeit fortsetzen.\n\n## Kontext\n\nIch entwickle ein strukturiertes Wissenssystem f√ºr Polizeibeamte zu IT-Forensik-Themen. Das System basiert auf:\n- JSON-Schema-validiertem HTML-Content\n- Verschiedene Detail-Level (Basic, Best-Practice, Expert, Show-Only)\n- BFSG-konforme Barrierefreiheit\n- Python-basierte Validierung\n- KI-gest√ºtzte Content-Generierung (Claude Sonnet 4.5)\n\n## Bisheriger Fortschritt\n\n**Abgeschlossen:**\n- ‚úÖ **Cluster 1:** Inhaltliche Anforderungen (siehe `cluster1-final.md`)\n- ‚úÖ **Cluster 2:** Strukturelle Anforderungen (siehe `cluster2_results.md`)\n- ‚úÖ **Cluster 3:** Technische Anforderungen\n  - ‚úÖ **Teil A - Barrierefreiheit (BFSG):**\n    - Sprachauszeichnung (`lang`-Attribute): `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md`\n    - Alt-Texte & √úberschriften-Hierarchie: `cluster3_BFSG-Barrierefreiheit-Content.md`\n  - ‚úÖ **Teil B - HTML-Syntax & Attribut-Vollst√§ndigkeit:**\n    - Vollst√§ndige HTML-Element-Spezifikation: `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md`\n\n**Cluster-√úbersicht (Originalplanung):**\n1. ‚úÖ Inhaltliche Anforderungen (Cluster 1)\n2. ‚úÖ Strukturelle Anforderungen (Cluster 2)\n3. ‚úÖ Technische Anforderungen (Cluster 3)\n4. ‚è≥ Prompt-Entwicklung f√ºr KI (Cluster 4) **‚Üê JETZT DRAN**\n5. üîµ Qualit√§tssicherung & Testing (Cluster 5)\n6.\n\n\ntask2.md - Continuation Prompt f√ºr neuen Chat.md\nAufbau des Master-Prompts (Abschnitte, Hierarchie)\n2. Informationsdichte vs. Verst√§ndlichkeit\n3. Kontext-Management (was muss immer dabei sein, was ist optional?)\n4. Modularer Aufbau (wiederverwendbare Komponenten)\n\n**Phase B: Prompt-Inhalte**\n1. Integration aller Anforderungen aus Cluster 1-3\n2. Entscheidungsb√§ume f√ºr KI (Content-Type, Media-Type, etc.)\n3. Beispiele & Counter-Beispiele\n4. Grenzfall-Behandlung\n\n**Phase C: Testing & Iteration**\n1. Test-Prompts erstellen (verschiedene Schwierigkeitsgrade)\n2. Generierte Sections validieren\n3. Prompt iterativ verbessern\n4. Best Practices dokumentieren\n\n---\n\n## Arbeitsweise\n\n- **Kleinschrittig vorgehen** (keine gro√üen Spr√ºnge)\n- **Top-Down-Design** (vom Groben ins Detail)\n- **Gef√ºhrte Fragen** stellen, bis 95% Klarheit erreicht ist\n- √Ñnderungen nur **vorschlagen und begr√ºnden**\n- Jede √Ñnderung muss **durch mich verifiziert und akzeptiert** werden\n- Am Ende ein **Ergebnisdokument** erstellen (analog zu Cluster 1-3)\n\n---\n\n## Wichtige Projekt-Richtlinien\n\n### Textstil f√ºr dich (KI):\n- Bleibe eng an meiner Vorgabe\n- F√ºge keine zus√§tzlichen Aspekte hinzu\n- Erst meine Aufgabe umsetzen, dann separat Verbesserungen vorschlagen\n- Verbesserungsvorschl√§ge in 3 Abs√§tzen erkl√§ren: Vorteile, Technik, Aufwand\n- Vermeide Telegramstil\n- Hebe wichtige Aussagen durch **Fettmarkieren** hervor\n\n### Code-√Ñnderungen:\n- Immer kleinschrittig und Schritt f√ºr Schritt\n- Keine unerw√ºnschten Nebeneffekte\n- CSS-Variablen `--variable*` bewahren und nutzen\n- Keine absoluten Gr√∂√üen/Farben au√üerhalb der Themes\n- Immer den **aktuellen Code** aus dem Projekt-Dateispeicher als Basis verwenden\n- Jede √Ñnderung begr√ºnden\n- Mindestens einen Test vorschlagen\n\n### Debugging:\n- Nach Tests wird Debug-Output in `Debug-output.XXX` abgelegt (XXX = Buildnummer)\n- H√∂chste Buildnummer = aktuellster Debug-Output\n\n---\n\n## Meine Frage\n\nBitte lies die f√ºnf Dokumente im Projekt-Dateispeicher:\n1. `cluster1-final.md` (Inhaltliche Anforderungen)\n2. `cluster2_results.md` (Strukturelle Anforderungen)\n3. `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md` (BFSG Teil 1)\n4. `cluster3_BFSG-Barrierefreiheit-Content.md` (BFSG Teil 2)\n5. `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md` (HTML-Syntax)\n\n**Lass uns dann Cluster 4: Prompt-Entwicklung angehen.**\n\nStelle mir gef√ºhrte Fragen, damit wir gemeinsam den Master-Prompt entwickeln k√∂nnen. Wir gehen wie immer kleinschrittig vor und kl√§ren zun√§chst die grundlegende Struktur, bevor wir ins Detail gehen.\n\n---\n\n## Kontext-Informationen\n\n**Projekt:** WebAssistentForensics  \n**Ziel-Tool (initial):** Magnet AXIOM Examine  \n**Sp√§tere Erweiterung:** X-Ways Forensics, Cellebrite Reader  \n**Haupt-Zielgruppe:** IT-ferne Polizei-Ermittler  \n**Content-Umfang:** ~100-150 Sections  \n**KI-Modell:** Claude Sonnet 4.5  \n**Validierung:** Python-basiert + JSON-Schema  \n\n---\n\n**Ich freue mich auf die Zusammenarbeit!**\n\n\nContinuation Prompt f√ºr Chat 2 (Cluster 2).md\n# Continuation Prompt f√ºr Chat 2: Cluster 2 - Strukturelle Anforderungen\n\n## Kontext und Aufgabe\n\nWir befinden uns in der systematischen Entwicklung eines umfassenden Prompts f√ºr KI-gest√ºtzte Content-Generierung f√ºr ein interaktives Handbuch zur forensischen Software **Magnet Axiom Examine**. \n\n**Projektziel:** Entwicklung eines pr√§zisen, vollst√§ndigen Prompts f√ºr Sonnet 4.5 zur Generierung von hochwertigem Content f√ºr ~100-150 Sections.\n\n**Zeitrahmen:** 12 Stunden Gesamtaufwand (ca. 2 Stunden bereits investiert in Cluster 1)\n\n**Methodik:** Brainstorming ‚Üí Strukturierung ‚Üí Testing ‚Üí Iteration (Wirbelpoolverfahren)\n\n---\n\n## Status\n\n### Abgeschlossen: Cluster 1 - Inhaltliche Anforderungen\n\n**Wichtigste Ergebnisse aus Cluster 1:**\n\n1. **Zielgruppe:** IT-ferne Ermittler:innen (Mittlere Reife, eingeschr√§nkte IT-Kenntnisse)\n2. **Tonalit√§t:** Subtil-unterst√ºtzend, aber sachlich\n3. **Detail-Level:** 4 Stufen (Schnell√ºbersicht, Best-Practice, Detailliert, Show-Only)\n4. **Terminologie:** Deutsch bevorzugt, englische Fachbegriffe wo etabliert, KI f√ºhrt Terminologie-Liste\n5. **Medien-Entscheidung:** Hybrid-System mit Entscheidungsbaum (Screenshot/Annotiert/Video)\n6. **Content-Types:** `instruction`, `explanation`, `visual`, `background` (automatisch vergeben mit Grenzfall-Dokumentation)\n7. **Multi-Tool-Strategie:** Schema tool-agnostisch, Metadaten tool-spezifisch\n8. **Barrierefreiheit:** Videos mit KI-generierten Untertiteln (BFSG-konform)\n9. **Medien-Budget:** Keine Limitierung - was n√∂tig ist, wird gemacht\n\n**Vollst√§ndiges Dokument:** Siehe Artifact \"Cluster 1 - Inhaltliche Anforderungen (Abgeschlossen)\"\n\n---\n\n## Aktuell zu bearbeiten: Cluster 2 - Strukturelle Anforderungen\n\n### Fokusthemen f√ºr Cluster 2\n\n1. **Section-Hierarchie und Organisation**\n   - Wie tief geht die Verschachtelung? (Topics ‚Üí Sections ‚Üí Subsections?)\n   - Logische Struktur und Gruppierung\n   - Navigation zwischen Sections\n\n2. **data-ref Granularit√§t**\n   - Welche Elemente brauchen data-ref?\n   - Namenskonventionen\n   - Konsistenz √ºber Sections hinweg\n\n3. **IDs vs. data-ref vs. data-section**\n   - Unterschiede und Verwendungszwecke\n   - Wann wird was verwendet?\n   - Kombinationen und Redundanzen\n\n4. **Agent-Context-Blocks**\n   - Platzierung innerhalb Sections\n   - H√§ufigkeit (wie viele pro Section?)\n   - Trigger-Points definieren\n\n5.\n\n\ncluster4_Qualit√§tssicherung-Metadaten-Validierung.md\n3. **Prompt-Diff generieren:** KI schl√É¬§gt konkrete Prompt-√É‚Äûnderungen vor\n4. **A/B-Testing:** Alte vs. neue Prompt-Version testen\n5. **Iterative Verbesserung:** Prompt-Version erh√É¬∂hen bei Erfolg\n\n**Beispiel:**\n- Fehler-Log zeigt: 30% aller Sections haben fehlende `data-title`\n- KI-Analyse: Prompt erw√É¬§hnt `data-title` nur einmal, nicht prominent\n- KI-Vorschlag: \"F√É¬ºge separaten Abschnitt 'Pflicht-Attribute' mit Beispiel hinzu\"\n- Maintainer testet neuen Prompt\n- Fehlerrate sinkt auf 5% √¢‚Ä†‚Äô Prompt-Update wird permanent\n\n**Status:** Zukunftsvision - nicht Teil von Cluster 4\n\n---\n\n## 11. Zusammenfassung & N√É¬§chste Schritte\n\n### 11.1 Was wurde in Cluster 4 erreicht?\n\n√¢≈ì‚Ä¶ **Validierungsebenen definiert:**\n- Syntaktisch (automatisiert, bereits implementiert)\n- Semantisch (KI-Agent + Maintainer)\n- BFSG (implizit in syntaktischen Pr√É¬ºfungen)\n\n√¢≈ì‚Ä¶ **Testkriterien spezifiziert:**\n- Syntaktische Kriterien (Pflicht-Attribute, HTML-Struktur, Cross-References, etc.)\n- Semantische Kriterien (Konsistenz, Plausibilit√É¬§t, Zusammenhang, etc.)\n\n√¢≈ì‚Ä¶ **Validierungsprozess dokumentiert:**\n- Standard-Workflow (Option B): Draft √¢‚Ä†‚Äô Validierung √¢‚Ä†‚Äô Review √¢‚Ä†‚Äô Approved √¢‚Ä†‚Äô Published\n- Erweiterter Workflow (Option A): Mit zweifacher KI-Pr√É¬ºfung (vor/nach Medien)\n- Fehler-Kategorisierung (CRITICAL/ERROR/WARNING/INFO)\n- Fehler-Dokumentation (error-log.json)\n\n√¢≈ì‚Ä¶ **Metadaten erweitert:**\n- Neue QA-Felder: reviewStatus, lastReviewer, validationScore, knownIssues, reviewCycles, timeToPublish\n- JSON-LD vollst√É¬§ndig spezifiziert\n\n√¢≈ì‚Ä¶ **Iterationslogik gekl√É¬§rt:**\n- Status-√É≈ìberg√É¬§nge: Draft √¢‚Ä†‚Äô Review √¢‚Ä†‚Äô Approved √¢‚Ä†‚Äô Published\n- Kein automatisches Approval\n- Review-Zyklen getrackt\n\n√¢≈ì‚Ä¶ **Versionierung definiert:**\n- MAJOR.MINOR.BUILD\n- Erh√É¬∂hungs-Regeln klar\n- Git-basierte Archivierung\n\n√¢≈ì‚Ä¶ **Metriken & Erfolgskriterien:**\n- Pro Section: Fehler, Review-Zyklen, Zeit, validationScore\n- Aggregiert: Durchschnitte, Status-Verteilung, Ablehnungsquote\n- Reporting: Konsole, HTML, JSON\n\n√¢≈ì‚Ä¶ **Datengrundlagen f√É¬ºr KI-Pr√É¬ºfung:**\n- Alle Sections, Terminologie-Liste, Rahmenplan, Quellmaterial, Style-Guides, Antwortschema\n\n√¢≈ì‚Ä¶ **Zuk√É¬ºnftige Erweiterungen dokumentiert:**\n- ValidationScore (detailliert)\n- Weitere Metriken nach Bedarf\n- Automatisierte Prompt-Verbesserung\n\n---\n\n### 11.2 Offene Punkte f√É¬ºr Cluster 5 (Workflow & Rollen)\n\n**Cluster 5 wird sich mit folgenden Themen befassen:**\n\n1. **Arbeitsschritte der KI:**\n   - Research √¢‚Ä†‚Äô Draft √¢‚Ä†‚Äô Detailing √¢‚Ä†‚Äô Review √¢‚Ä†‚Äô Syntax-Check\n   - Welche Tools/APIs nutzt die KI in jeder Phase?\n\n2. **Rollendefinitionen:**\n   - KI-Generator (erstellt Sections)\n   - KI-Reviewer (semantische Pr√É¬ºfung)\n   - Maintainer (finale Pr√É¬ºfung, Medien-Erstellung)\n   - Validator (Python-Skripte)\n\n3. **Schnittstellendefinition:**\n   - Input/Output zwischen Phasen\n   - Datenformate\n   - √É≈ìbergabepunkte\n\n4. **Fehlerbehandlung & Feedback-Loops:**\n   - Was passiert bei Fehlern in jeder Phase?\n   - Wie wird Feedback zur√É¬ºck an die KI gegeben?\n   - Eskalationspfade\n\n5.\n\n\ntask3-draft.md\n* Section-Hierarchie und Navigation\n* data-ref Vergabelogik\n\n3. Technische Anforderungen\n* Medien-Anweisungen (Screenshots, annotierte Bilder, Videos)\n* Agent-Integration (Context-Blocks, Trigger-Points)\n* Barrierefreiheit (BFSG-Konformit√É¬§t)\n* HTML-Syntax und Attribut-Vollst√É¬§ndigkeit\n\n4. Qualit√É¬§tssicherung\n* Testkriterien f√É¬ºr generierte Sections\n* Validierungsprozess (syntaktisch + semantisch)\n* Metadaten (Quellen, Versionen, Erstellungsdatum)\n* Iterationslogik (wann ist eine Section \"fertig\"?)\n\n5. Workflow und Rollen\n* Arbeitsschritte der KI (Research √¢‚Ä†‚Äô Draft √¢‚Ä†‚Äô Detailing √¢‚Ä†‚Äô Review √¢‚Ä†‚Äô Syntax-Check)\n* Rollendefinitionen f√É¬ºr verschiedene Phasen\n* Schnittstellendefinition zwischen den Phasen\n* Fehlerbehandlung und Feedback-Loops\n\n## Bisheriger Fortschritt\n\n**Abgeschlossen:**\n\n* √¢≈ì‚Ä¶ **Cluster 1:** Inhaltliche Anforderungen (siehe `cluster1-final.md`)\n\n* √¢≈ì‚Ä¶ **Cluster 2:** Strukturelle Anforderungen (siehe `cluster2_results.md`)\n\n* √¢≈ì‚Ä¶ **Cluster 3:** Technische Anforderungen\n\n  * √¢≈ì‚Ä¶ **Teil A * Barrierefreiheit (BFSG):**\n\n    * Sprachauszeichnung (`lang`-Attribute): `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md`\n\n    * Alt-Texte & √É≈ìberschriften-Hierarchie: `cluster3_BFSG-Barrierefreiheit-Content.md`\n\n  * √¢≈ì‚Ä¶ **Teil B * HTML-Syntax & Attribut-Vollst√É¬§ndigkeit:**\n\n    * Vollst√É¬§ndige HTML-Element-Spezifikation: `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√É¬§ndigkeit.md`\n\n* √¢≈ì‚Ä¶ **Cluster 4:** Qualit√É¬§tssicherung\n* Anforderungen an die Qualit√É¬§tssicherung und deren Prozesse: `cluster4_Qualit√É¬§tssicherung-Metadaten-Validierung.md`\n\n**Cluster-√É≈ìbersicht (Originalplanung):**\n\n1. √¢≈ì‚Ä¶ Inhaltliche Anforderungen (Cluster 1)\n2. √¢≈ì‚Ä¶ Strukturelle Anforderungen (Cluster 2)\n3. √¢≈ì‚Ä¶ Technische Anforderungen (Cluster 3)\n4. √¢≈ì‚Ä¶ Qualit√É¬§tssicherung & Testing (Cluster 4)\n5. √¢¬è¬≥ Workflow & Rollen (Cluster 5) **√¢‚Ä†¬ê JETZT DRAN**\n\n---\n\n## Aktueller Stand\n\nWir haben die **komplette Spezifikation** f√É¬ºr die Content-Generierung dokumentiert:\n\n### Was ist fertig:\n\n**Inhaltlich (Cluster 1):**\n\n* Zielgruppe: IT-ferne Ermittler (Mittlere Reife, niedrige IT-Kenntnisse)\n* Detail-Level-System: 4 Stufen (Schnell, Standard, Detailliert, Show-Only)\n* Terminologie-Strategie: Deutsch bevorzugt, englische Fachbegriffe wo etabliert\n* Medien-Entscheidungsmatrix: Wann Screenshot/Annotiert/Video/Diagramm\n* Content-Type-System: instruction, explanation, visual, background, info, hint, attention, warning\n* Multi-Tool-Strategie: Tool-agnostisch mit tool-spezifischen Metadaten\n\n**Strukturell (Cluster 2):**\n\n* Hierarchische Struktur: 3-5 Ebenen (Topic √¢‚Ä†‚Äô Chapter √¢‚Ä†‚Äô Section √¢‚Ä†‚Äô Subsection √¢‚Ä†‚Äô Deep-Dive)\n* data-ref Granularit√É¬§t & Namenskonventionen\n* JSON-LD Metadaten pro Section\n* Agent-Context-Block (einer pro Section, am Ende)\n* Navigation-Strategie: Freie Navigation\n\n**Technisch (Cluster 3):**\n\n* BFSG-konforme Barrierefreiheit (Sprachauszeichnung, Alt-Texte, √É≈ìberschriften-Hierarchie)\n* HTML-Element-Whitelist (32 erlaubte Elemente)\n* Pflicht-/Optional-Attribute pro Element\n* CSS-Klassen-System (Pflicht-Klassen, Review-Prozess)\n* Attribut-Reihenfolge & Formatierung (class √¢‚Ä†‚Äô id √¢‚Ä†‚Äô data-* √¢‚Ä†‚Äô sonstige)\n* Content-Type-Box-Entscheidungsmatrix (info/hint/attention/warning)\n* HTML-Kommentar-Konventionen (AGENT:/MEDIA:/NOTE:/TODO:/DECISION-REVIEW:)\n\n**Qualit√É¬§tssicherung (Cluster 4):**\n* Bitte hier noch die Ergebnisse zusammenfassen.\n\n\ncluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md\nZusammenfassung & N√É¬§chste Schritte\n\n### 14.1 Was wurde erreicht?\n\n√¢≈ì‚Ä¶ **Vollst√É¬§ndige HTML-Element-Whitelist** (32 erlaubte Elemente)  \n√¢≈ì‚Ä¶ **Detaillierte Element-Spezifikationen** (Pflicht-/Optional-Attribute)  \n√¢≈ì‚Ä¶ **CSS-Klassen-System** (Pflicht-Klassen, Review-Prozess)  \n√¢≈ì‚Ä¶ **Attribut-Reihenfolge & Formatierung** (Konsistenz-Richtlinien)  \n√¢≈ì‚Ä¶ **JSON-LD Metadaten finalisiert** (KI-Berechnung, Autor)  \n√¢≈ì‚Ä¶ **Agent-Context-Block vollst√É¬§ndig spezifiziert**  \n√¢≈ì‚Ä¶ **Content-Type-Box-Entscheidungsmatrix** (info/hint/attention/warning)  \n√¢≈ì‚Ä¶ **HTML-Kommentar-Konventionen** (5 Kategorien)  \n√¢≈ì‚Ä¶ **KI-Checkliste & Prompt-Template**  \n√¢≈ì‚Ä¶ **Vollst√É¬§ndig annotiertes Beispiel**  \n\n### 14.2 N√É¬§chste Schritte (Implementierung)\n\n**Phase 1: Python-Validator erweitern** (Priorit√É¬§t 1)\n- Neue Validierungsregeln implementieren\n- CSS-Klassen-Pr√É¬ºfung\n- JSON-LD Metadaten-Validierung\n- Aufwand: 6-8 Stunden\n\n**Phase 2: JSON-Schema erweitern** (Priorit√É¬§t 1)\n- `main-content.schema.json` v2.0 erstellen\n- Neue Attribute definieren\n- Enum-Validierungen\n- Aufwand: 2-3 Stunden\n\n**Phase 3: CSS-Klassen definieren** (Priorit√É¬§t 2)\n- `styles.css` erweitern\n- `*-box`-Klassen stylen\n- Responsive Design\n- Aufwand: 4-6 Stunden\n\n**Phase 4: Migration bestehender Inhalte** (Priorit√É¬§t 2)\n- `index.html` anpassen\n- JSON-LD Metadaten hinzuf√É¬ºgen\n- Validierung durchf√É¬ºhren\n- Aufwand: 8-12 Stunden (abh√É¬§ngig von Anzahl Sections)\n\n**Phase 5: KI-Prompt finalisieren** (Priorit√É¬§t 3)\n- Master-Prompt erstellen\n- Test-Generierung durchf√É¬ºhren\n- Prompt iterativ verbessern\n- Aufwand: 6-10 Stunden\n\n### 14.3 Offene Punkte\n\n**Keine.** Alle Punkte aus Cluster 3 - Phase B sind vollst√É¬§ndig gekl√É¬§rt.\n\n**F√É¬ºr sp√É¬§tere Cluster (falls relevant):**\n- Detaillierte Agent-Integration-Spezifikation\n- Suchfunktion-Implementation\n- Glossar-Modul-Integration\n- Multi-Version-Management (f√É¬ºr verschiedene Tool-Versionen)\n\n---\n\n## 15.\n\n\ntask3-draft.md\n# Projekt-Fortsetzung: Cluster 4 * Prompt-Entwicklung f√É¬ºr KI-Content-Generierung\n\nHallo! Ich arbeite am Projekt **WebAssistentForensics** und m√É¬∂chte die Arbeit fortsetzen.\n\n## Kontext\n\nIch entwickle ein strukturiertes Wissenssystem f√É¬ºr Polizeibeamte zu IT-Forensik-Themen. Das System basiert auf:\n\n* JSON-Schema-validiertem HTML-Content\n* Verschiedene Detail-Level (Basic, Best-Practice, Expert, Show-Only)\n* BFSG-konforme Barrierefreiheit\n* Python-basierte Validierung\n* KI-gest√É¬ºtzte Content-Generierung (Claude Sonnet 4.5)\n\n## Woran wir gerade arbeiten\nDerzeit sind wir mit einem f√É¬ºnfstufigen Brainstorming besch√É¬§ftigt. Stufen 1 bis 4 haben wir abgeschlossen. Jetzt folgt Stufe 5 **Workflow und Rollen**:\n\n**Das ist unsere Roadmap f√É¬ºr das Brainstormin:**\n\n1. Inhaltliche Anforderungen\n* Fachliche Korrektheit und Quellenvalidierung\n* Verst√É¬§ndlichkeitsniveau (Zielgruppe: Polizeibeamte\n* unterschiedlicher IT-Kenntnisse)\n* Vollst√É¬§ndigkeit innerhalb der Detailgrade\n* Konsistenz in Terminologie und Struktur\n\n2. Strukturelle Anforderungen\n* Schema-Konformit√É¬§t (JSON-Validierung)\n* Detail-Level-Systematik (wann Level 1, 2, 3?)\n* Section-Hierarchie und Navigation\n* data-ref Vergabelogik\n\n3. Technische Anforderungen\n* Medien-Anweisungen (Screenshots, annotierte Bilder, Videos)\n* Agent-Integration (Context-Blocks, Trigger-Points)\n* Barrierefreiheit (BFSG-Konformit√É¬§t)\n* HTML-Syntax und Attribut-Vollst√É¬§ndigkeit\n\n4. Qualit√É¬§tssicherung\n* Testkriterien f√É¬ºr generierte Sections\n* Validierungsprozess (syntaktisch + semantisch)\n* Metadaten (Quellen, Versionen, Erstellungsdatum)\n* Iterationslogik (wann ist eine Section \"fertig\"?)\n\n5.\n\n\ncluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md\n- [ ] Alle Pflicht-Attribute gesetzt?\n- [ ] Kommentar eingef√É¬ºgt?\n\n**Medien:**\n- [ ] Alle Medien mit `data-media-type`?\n- [ ] Media-Platzhalter mit `MEDIA:`-Kommentar?\n- [ ] `<figcaption>` bei diagram/annotated/video/audio?\n- [ ] `aria-describedby` bei `<figcaption>`?\n\n**Links:**\n- [ ] Externe Links mit `rel` und `aria-label`?\n- [ ] Domain in Klammern im Linktext?\n\n**Tabellen:**\n- [ ] `<caption>` vorhanden?\n- [ ] `scope` bei allen `<th>`?\n\n**Grenzf√É¬§lle:**\n- [ ] Content-Type-Entscheidungen dokumentiert (bei Unsicherheit)?\n- [ ] `DECISION-REVIEW:`-Kommentar bei niedrigem Confidence?\n\n---\n\n### 11.2 Prompt-Template f√É¬ºr KI\n\n`‚Äã`‚Äã`markdown\n# Section-Generierung: {Section-Name}\n\n## Kontext\n\n**Hierarchie:**\n- Section-Level: {LEVEL}\n- Parent-Element: {PARENT_ID} (verwendet {PARENT_HEADING})\n- Erste √É≈ìberschrift dieser Section MUSS sein: {START_HEADING}\n\n**Inhaltliche Anforderungen:**\n- Zielgruppe: IT-ferne Ermittler (Mittlere Reife, niedrige IT-Kenntnisse)\n- Detail-Level: {LEVEL} (1=Schnell√É¬ºbersicht, 2=Best-Practice, 3=Detailliert)\n- Tonalit√É¬§t: Subtil-unterst√É¬ºtzend, sachlich\n- Terminologie: Deutsch bevorzugt, englische Fachbegriffe wo etabliert\n\n**Technische Anforderungen:**\n- Dokument: Cluster 3 - Phase B (HTML-Syntax & Attribut-Vollst√É¬§ndigkeit)\n- BFSG-konform (Barrierefreiheit)\n- JSON-LD Metadaten Pflicht\n- Agent-Context-Block Pflicht (am Ende)\n\n## Aufgabe\n\nErstelle eine vollst√É¬§ndige Section mit folgendem Inhalt:\n\n{INHALTLICHE VORGABE}\n\n## Anforderungen\n\n**HTML-Struktur:**\n- Element: `<section class=\"content-section\" id=\"section-{name}\" ...>`\n- Pflicht-Attribute: `data-section`, `data-level`, `data-parent`, `data-title`\n- Formatierung: 4 Spaces, mehrzeilig ab >3 Attributen\n- Attribut-Reihenfolge: class √¢‚Ä†‚Äô id √¢‚Ä†‚Äô data-* √¢‚Ä†‚Äô sonstige\n\n**JSON-LD Metadaten (am Anfang):**\n- Pflichtfelder: @context, @type, identifier, name, version\n- Berechne: estimatedTime (ISO-8601), difficultyLevel (Beginner/Intermediate/Advanced)\n- Autor: \"Claude Sonnet 4.5\" <claude-sonnet-4.5@ai.anthropic.com>\n\n**√É≈ìberschriften:**\n- Erste √É≈ìberschrift: {START_HEADING}\n- Keine Spr√É¬ºnge (h{N} √¢‚Ä†‚Äô h{N+1})\n- Alle mit `data-ref`\n\n**Medien:**\n- Entscheide: Screenshot, Annotiert, Video, Diagramm (siehe Entscheidungsbaum Cluster 1)\n- Falls ben√É¬∂tigt: `<button class=\"media-help-trigger\">` mit `MEDIA:`-Kommentar\n- `data-media-type` Pflicht\n- Alt-Texte max. 120 Zeichen\n\n**Content-Type-Boxen:**\n- Entscheide: info, hint, attention, warning (siehe Entscheidungsmatrix)\n- Pflicht-CSS-Klasse: info-box, hint-box, attention-box, warning-box\n- Bei Unsicherheit: `DECISION-REVIEW:`-Kommentar\n\n**Agent-Context-Block (am Ende):**\n`‚Äã`‚Äã`html\n<div class=\"agent-context-block\"\n     data-ref=\"agent-context-{section-name}\"\n     data-context-id=\"{section-name}-context\"\n     style=\"display: none;\">\n    <!-- Dynamisch vom Agent gef√É¬ºllt -->\n</div>\n`‚Äã`‚Äã`\n\n**Barrierefreiheit:**\n- Sprachauszeichnung: `<span lang=\"en\">` bei fremdsprachigen Begriffen\n- Alt-Texte: Zweckbeschreibend, max.\n\n\ncluster1-final.md\n'Magnet Axiom Examine')\"\n      },\n      \"toolVersion\": {\n        \"type\": \"string\",\n        \"description\": \"Version des Tools (z.B. '7.x')\"\n      },\n      \"sources\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": { \"type\": \"string\" },\n            \"version\": { \"type\": \"string\" },\n            \"url\": { \"type\": \"string\" }\n          }\n        }\n      },\n      \"created\": {\n        \"type\": \"string\",\n        \"format\": \"date\",\n        \"description\": \"Erstellungsdatum (YYYY-MM-DD)\"\n      },\n      \"lastUpdated\": {\n        \"type\": \"string\",\n        \"format\": \"date\",\n        \"description\": \"Letztes Update (YYYY-MM-DD)\"\n      },\n      \"promptVersion\": {\n        \"type\": \"string\",\n        \"description\": \"Version des Prompts, das zur Generierung verwendet wurde\"\n      }\n    }\n  },\n  \"media\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"type\": {\n        \"type\": \"string\",\n        \"enum\": [\"screenshot\", \"annotated-screenshot\", \"video\", \"diagram\", \"infographic\"]\n      },\n      \"src\": { \"type\": \"string\" },\n      \"alt\": { \"type\": \"string\" },\n      \"subtitles\": { \"type\": \"string\" },\n      \"transcript\": { \"type\": \"string\" },\n      \"instructions\": { \"type\": \"string\" }\n    }\n  }\n}\n`‚Äã`‚Äã`\n\n---\n\n## Zusammenfassung Cluster 1\n\n### Abgeschlossene Punkte\n\n√¢≈ì‚Ä¶ **1.1** - Zielgruppe und Verst√É¬§ndlichkeitsniveau  \n√¢≈ì‚Ä¶ **1.2** - Detail-Level-System (4 Stufen)  \n√¢≈ì‚Ä¶ **1.3** - Terminologie und Konsistenz  \n√¢≈ì‚Ä¶ **1.4** - Fachliche Korrektheit  \n√¢≈ì‚Ä¶ **1.5** - Vollst√É¬§ndigkeit  \n√¢≈ì‚Ä¶ **1.6** - Axiom-Versionierung und Metadaten  \n√¢≈ì‚Ä¶ **1.7** - Mehrsprachigkeit und Begriffswahl  \n√¢≈ì‚Ä¶ **1.8** - Multi-Tool-Strategie  \n√¢≈ì‚Ä¶ **1.9** - Medien-Pr√É¬§zisionsgrad und Entscheidungsmatrix  \n√¢≈ì‚Ä¶ **1.10** - Content-Type-Automatik (Hybrid-System)  \n√¢≈ì‚Ä¶ **1.11** - Video-Untertitel-System (BFSG)  \n\n### Offene Punkte f√É¬ºr sp√É¬§tere Cluster\n\n- Schema-Definition (Cluster 2)\n- Strukturelle Organisation (Cluster 2)\n- Technische Implementierung (Cluster 3)\n- Qualit√É¬§tssicherung und Testing (Cluster 4)\n- Workflow und Rollen (Cluster 5)\n\n---\n\n## N√É¬§chste Schritte\n\n**Cluster 2: Strukturelle Anforderungen**\n\nFokus:\n- Section-Hierarchie und Navigation\n- data-ref Granularit√É¬§t\n- IDs vs. data-ref\n- Agent-Context-Blocks Platzierung\n- Schema-Definition und -Validierung\n\n---\n\n**Ende Cluster 1**  \n*Bearbeitungszeit: ~2 Stunden*  \n*Status: Abgeschlossen und bereit f√É¬ºr Cluster 2*\n\n\ncluster4_Qualit√§tssicherung-Metadaten-Validierung.md\n**QA-Metadaten in JSON-LD erg√É¬§nzen:**\n   - `qualityAssurance`-Block hinzuf√É¬ºgen\n   - Python-Validator erweitern\n   - Aufwand: 1 Stunde\n\n3. **ValidationScore berechnen (einfache Formel):**\n   - Python-Funktion erstellen\n   - In Validierungs-Output integrieren\n   - Aufwand: 30 Minuten\n\n4. **Workflow-Dokumentation f√É¬ºr Team:**\n   - Basierend auf Cluster 4\n   - F√É¬ºr Maintainer verst√É¬§ndlich aufbereitet\n   - Aufwand: 1 Stunde\n\n**Danach:**\n- Cluster 5: Workflow & Rollen\n- Dann: Prompt-Entwicklung (Integration aller Cluster)\n- Testing & Iteration\n\n---\n\n## 12. Anhang\n\n### 12.1 Referenz-Links\n\n- **JSON-Schema:** https://json-schema.org/\n- **Schema.org (JSON-LD):** https://schema.org/TechArticle\n- **ISO-8601 Duration:** https://en.wikipedia.org/wiki/ISO_8601#Durations\n- **BFSG (Barrierefreiheitsst√É¬§rkungsgesetz):** https://www.gesetze-im-internet.de/bfsg/\n- **Flesch Reading Ease (Deutsch):** https://de.wikipedia.org/wiki/Lesbarkeitsindex\n\n---\n\n### 12.2 Glossar\n\n| Begriff | Definition |\n|---------|------------|\n| **Draft** | Initial generierte Section durch KI |\n| **Review** | Section durchl√É¬§uft semantische Pr√É¬ºfung, Medien werden erstellt |\n| **Approved** | Section ist bereit zur Integration in index.html |\n| **Published** | Section ist in index.html integriert und live |\n| **validationScore** | 0-100 Punkte Score basierend auf Validierungsfehlern |\n| **Review-Zyklus** | Anzahl Draft√¢‚Ä†‚ÄôReview√¢‚Ä†‚ÄôDraft Iterationen |\n| **Fehler-Log** | JSON-Datei zur Dokumentation von Validierungsfehlern |\n| **KI-Agent** | KI-System zur semantischen Vorpr√É¬ºfung von Sections |\n| **Maintainer** | Mensch, der finale fachliche Pr√É¬ºfung durchf√É¬ºhrt |\n| **Terminologie-Entscheidungsliste** | Liste mit Begriffsentscheidungen (deutsch vs. englisch) |\n\n---\n\n### 12.3 Beispiel: Vollst√É¬§ndiger Validierungs-Durchlauf\n\n**Szenario:** Section \"Template-Typen im Detail\" wird generiert\n\n**Schritt 1: Draft**\n- KI generiert Section mit 500 W√É¬∂rtern, 3 Medien-Platzhaltern\n- Status: `Draft`\n- `version: 1.0.0`\n\n**Schritt 2: Syntaktische Validierung**\n- Python-Skript pr√É¬ºft HTML\n- **Ergebnis:** 1 ERROR (fehlende `data-title`), 2 WARNINGS (>3 Hierarchie-Ebenen)\n- validationScore = 100 - 10 - 10 = **80**\n- Fehler-Log-Eintrag erstellt\n- Zur√É¬ºck an KI mit Fehler-Output\n\n**Schritt 3: KI korrigiert**\n- KI f√É¬ºgt `data-title` hinzu\n- Hierarchie optimiert\n- Erneute Validierung: **0 Fehler**\n- validationScore = **100**\n\n**Schritt 4: Semantische KI-Pr√É¬ºfung**\n- KI-Agent pr√É¬ºft Konsistenz, Plausibilit√É¬§t, etc.\n\n\nTemplate: Prompt-Dokumentation.md\n# Prompt-Dokumentation Template\n\n**Dateiname:** `prompt_XXX_kurzbeschreibung.md`  \n**Format:** Markdown  \n**Speicherort:** `/project-diary/prompts/`\n\n---\n\n## Prompt Metadata\n\n**Prompt-ID:** XXX  \n**Datum:** TT.MM.JJJJ  \n**Uhrzeit:** HH:MM Uhr  \n**Tag:** X  \n**Bearbeiter:** [Name]  \n**KI-Modell:** Claude 3.5 Sonnet / GPT-4 / etc.  \n**Iteration:** X (falls mehrere Versuche)\n\n---\n\n## üìù Original-Prompt\n\n### Kontext (optional)\n*Beschreiben Sie den Kontext, in dem dieser Prompt gestellt wurde. Was war die Ausgangssituation?*\n\nBeispiel:\n> Nach Implementierung der Basis-Features sollte nun der Sp√ºrhund-Assistent konzipiert werden. Ziel war es, ein situationsabh√§ngiges Assistenz-System zu entwickeln.\n\n### Der Prompt\n\n`‚Äã`‚Äã`\n[Hier den exakten Prompt einf√ºgen, wie er an die KI gegeben wurde]\n\nBeispiel:\nAls n√§chsten Schritt m√∂chte ich einen interaktiven Begleiter haben. \nDieser soll situationsabh√§ngig durch den Leitfaden begleiten...\n`‚Äã`‚Äã`\n\n### Follow-up Prompts (falls vorhanden)\n\n**Prompt 1a:** (Verfeinerung/Nachfrage)\n`‚Äã`‚Äã`\n[Text des Follow-up-Prompts]\n`‚Äã`‚Äã`\n\n**Prompt 1b:** (Weitere Iteration)\n`‚Äã`‚Äã`\n[Text des Follow-up-Prompts]\n`‚Äã`‚Äã`\n\n---\n\n## üéØ Ziel des Prompts\n\n### Hauptziel\n*Was sollte mit diesem Prompt erreicht werden?*\n\nBeispiel:\n- Design-Konzept f√ºr Agent-System\n- Implementierung der Kern-Funktionalit√§t\n- Dokumentation der JSON-Struktur\n\n### Teil-Ziele\n1. [Erstes Teilziel]\n2. [Zweites Teilziel]\n3. [Drittes Teilziel]\n\n### Erwartete Outputs\n- [ ] Code-Snippets (HTML/CSS/JS)\n- [ ] Dokumentation\n- [ ] Konzept/Design\n- [ ] Entscheidungshilfe\n- [ ] Sonstiges: ___________\n\n---\n\n## üí¨ KI-Antwort\n\n### Zusammenfassung der Antwort\n*Kurze Zusammenfassung dessen, was die KI geantwortet hat (2-3 S√§tze)*\n\nBeispiel:\n> Die KI schlug eine modulare Architektur mit separaten Dateien (agent.css, agent.js) vor und definierte eine JSON-basierte Dialogstruktur. Es wurden drei Haupt-Komponenten entworfen: Chat-Interface, Inline-Trigger und Kontext-Bl√∂cke.\n\n### Generierte Artifacts\n*Liste aller generierten Code-Artifacts/Dokumente*\n\n1. **agent.html** - HTML-Struktur f√ºr Agent-Komponenten\n2. **agent.css** - Styling (~600 Zeilen)\n3. **agent.js** - Funktionalit√§t (~700 Zeilen)\n4. **agent-json-structure.md** - JSON-Dokumentation\n\n### Wichtigste Erkenntnisse\n*Bullet-Points der wichtigsten Insights aus der Antwort*\n\n- [Erkenntnis 1]\n- [Erkenntnis 2]\n- [Erkenntnis 3]\n\n---\n\n## ‚úÖ Verwendung der Antwort\n\n### Direkt √ºbernommen\n*Was wurde 1:1 oder mit minimalen Anpassungen √ºbernommen?*\n\n- [ ] Code vollst√§ndig √ºbernommen\n- [ ] Code mit Anpassungen √ºbernommen (Details: _______)\n- [ ] Konzept/Ideen √ºbernommen\n- [ ] Nur als Inspiration genutzt\n\n**Details:**\n[Beschreibung was √ºbernommen wurde und warum]\n\n### Angepasst/Modifiziert\n*Was wurde angepasst und warum?*\n\n| Original | Anpassung | Begr√ºndung |\n|----------|-----------|------------|\n| [Code/Konzept] | [√Ñnderung] | [Warum ge√§ndert] |\n\n### Nicht verwendet\n*Was wurde vorgeschlagen aber nicht verwendet?\n\n\nContinuation Prompt f√ºr Chat 2 (Cluster 2).md\n### Technische Anforderungen\n\n- HTML5 konform\n- Barrierefreiheit (BFSG)\n- CSS-Variablen f√ºr Theming\n- JavaScript-API-Kompatibilit√§t (Navigation, History, etc.)\n\n---\n\n## Offene Fragen aus Cluster 1 (Kontext f√ºr Cluster 2)\n\n1. **Schema-Struktur:** Wie sieht das JSON-Schema f√ºr main-content aus?\n2. **Navigation:** Lineare Progression oder freie Navigation?\n3. **Metadaten-Platzierung:** Wo im JSON? Globale vs. Section-spezifische Metadaten?\n\n---\n\n## Arbeitsweise\n\n**Im Brainstorming:**\n- Ich sammle alle deine Inputs systematisch\n- Ich erg√§nze eigene Vorschl√§ge und Analysen\n- Ich strukturiere alles in √ºbersichtliche Kategorien\n- Ich stelle gezielte Kl√§rungsfragen\n\n**Dokumentation:**\n- Alle Punkte werden in einem strukturierten Markdown-Dokument erfasst\n- Am Ende von Cluster 2 erstelle ich ein vollst√§ndiges Artifact\n- Dokumentation ist projektreif und versioniert\n\n**Tonalit√§t:**\n- Konstruktiv und pr√§zise\n- Selbstreflektierend (ich zeige auch Grenzen und Unsicherheiten auf)\n- Partnerschaftlich (wir entwickeln gemeinsam die beste L√∂sung)\n\n---\n\n## Einstiegsfragen f√ºr Cluster 2\n\nBitte starte mit einer oder mehreren dieser Fragen, oder gib eigene Schwerpunkte vor:\n\n### 1. Section-Hierarchie\n\n**Aktuell beobachtet:** Flache Struktur (eine Ebene Sections)\n\n**Frage:** Soll es eine **hierarchische Struktur** geben?\n- Beispiel: `Topics` (Oberebene) ‚Üí `Sections` (Unterebene) ‚Üí `Subsections`?\n- Oder bleibt es bei einer flachen Liste von Sections?\n- Wie wird die Navigation strukturiert? (Tree-View? Linear?)\n\n### 2. Schema-Definition Priorit√§t\n\n**Frage:** Sollen wir **zuerst das JSON-Schema** definieren, oder erst die konzeptionellen Anforderungen sammeln und dann das Schema ableiten?\n\nMein Vorschlag: **Erst Konzept, dann Schema** - aber ich bin offen f√ºr deine Pr√§ferenz.\n\n### 3. Granularit√§t von data-ref\n\n**Frage:** Wie detailliert sollen data-ref Attribute sein?\n\n**Option A (Minimal):** Nur Sections, Headings, wichtige Container\n**Option B (Standard):** + alle Paragraphen, Listen, Info-Boxen\n**Option C (Maximal):** + jedes Listen-Item, jeder Span mit Agent-Trigger\n\nWelche Option ist f√ºr dein Projekt richtig?\n\n### 4. Navigation-Logik\n\n**Frage:** Wie sollen Anwender durch den Content navigieren?\n\n- Nur √ºber Navigation-Sidebar?\n- \"Weiter\"/\"Zur√ºck\"-Buttons zwischen Sections?\n- Inhaltsverzeichnis am Anfang?\n- Breadcrumb-Navigation (schon vorhanden)?\n- Auto-Scroll beim Wechsel?\n\n---\n\n## Los geht's!\n\n**Bitte gib mir gr√ºnes Licht und starte mit deinen Gedanken zu Cluster 2.**\n\nIch bin bereit, alles systematisch zu erfassen und am Ende ein vollst√§ndiges, strukturiertes Dokument zu erstellen.\n\n\nContinuation Prompt f√ºr Chat 2 (Cluster 2).md\n(Topics ‚Üí Sections ‚Üí Subsections?)\n   - Logische Struktur und Gruppierung\n   - Navigation zwischen Sections\n\n2. **data-ref Granularit√§t**\n   - Welche Elemente brauchen data-ref?\n   - Namenskonventionen\n   - Konsistenz √ºber Sections hinweg\n\n3. **IDs vs. data-ref vs. data-section**\n   - Unterschiede und Verwendungszwecke\n   - Wann wird was verwendet?\n   - Kombinationen und Redundanzen\n\n4. **Agent-Context-Blocks**\n   - Platzierung innerhalb Sections\n   - H√§ufigkeit (wie viele pro Section?)\n   - Trigger-Points definieren\n\n5. **Schema-Definition**\n   - JSON-Schema f√ºr main-content\n   - Validierungsregeln\n   - Erweiterbarkeit\n\n---\n\n## Wichtige Projekt-Kontext-Informationen\n\n### Bestehende Architektur (aus index.html)\n\n**Aktuelle Struktur:**\n`‚Äã`‚Äã`html\n<section class=\"content-section\" \n         id=\"section-intro\" \n         data-section=\"intro\"\n         data-title=\"√úberblick\">\n    \n    <div class=\"detail-level-1\" data-ref=\"intro-basic\">\n        <h2 data-ref=\"heading\">√úberblick</h2>\n        <p data-ref=\"intro-text\">...</p>\n    </div>\n    \n    <div class=\"detail-level-2\" data-ref=\"intro-standard\">\n        <p data-ref=\"step1-explanation\">...</p>\n    </div>\n    \n    <div class=\"agent-context-block\"\n         data-ref=\"agent-context-templates\"\n         data-context-id=\"template-usage\"\n         style=\"display: none;\">\n        <!-- Dynamisch gef√ºllt -->\n    </div>\n</section>\n`‚Äã`‚Äã`\n\n**Beobachtete Patterns:**\n- `id=\"section-{name}\"` f√ºr Sections\n- `data-section=\"{name}\"` f√ºr Navigation\n- `data-title=\"...\"` f√ºr Breadcrumb/Navigation\n- `data-ref=\"...\"` f√ºr granulare Element-Referenzierung\n- `class=\"detail-level-1/2/3\"` f√ºr Detail-Steuerung\n- `data-content-type=\"...\"` (neu, aus Cluster 1)\n\n### Verwandte Schemas (im Projekt vorhanden)\n\n- **agent-dialogs.schema.json** (Agent-System, bereits definiert)\n- **main-content.schema.json** (FEHLT - muss definiert werden!)\n\n### Technische Anforderungen\n\n- HTML5 konform\n- Barrierefreiheit (BFSG)\n- CSS-Variablen f√ºr Theming\n- JavaScript-API-Kompatibilit√§t (Navigation, History, etc.)\n\n---\n\n## Offene Fragen aus Cluster 1 (Kontext f√ºr Cluster 2)\n\n1. **Schema-Struktur:** Wie sieht das JSON-Schema f√ºr main-content aus?\n2. **Navigation:** Lineare Progression oder freie Navigation?\n3. **Metadaten-Platzierung:** Wo im JSON? Globale vs. Section-spezifische Metadaten?\n\n\nPerfekt! Ich habe die Datei task3_draft.md gefunden. Jetzt erstelle ich eine aktualisierte Version, die:\n\n\nCluster 4 (Qualit√§tssicherung) als abgeschlossen markiert\n\nErgebnisse aus Cluster 4 zusammenfasst\n\nAuf Cluster 5 (Workflow & Rollen) vorbereitet\n\n\ntask4.md - Continuation Prompt f√ºr Cluster 5\n\n\n# Projekt-Fortsetzung: Cluster 5 - Workflow & Rollen\n\nHallo! Ich arbeite am Projekt **WebAssistentForensics** und m√∂chte die Arbeit fortsetzen.\n\n## Kontext\n\nIch entwickle ein strukturiertes Wissenssystem f√ºr Polizeibeamte zu IT-Forensik-Themen. Das System basiert auf:\n- JSON-Schema-validiertem HTML-Content\n- Verschiedene Detail-Level (Basic, Best-Practice, Expert, Show-Only)\n- BFSG-konforme Barrierefreiheit\n- Python-basierte Validierung\n- KI-gest√ºtzte Content-Generierung (Claude Sonnet 4.5)\n\n---\n\n## Woran wir gerade arbeiten\n\nDerzeit sind wir mit einem **f√ºnfstufigen Brainstorming** besch√§ftigt. **Stufen 1 bis 4 haben wir abgeschlossen.** Jetzt folgt Stufe 5: **Workflow & Rollen**.\n\n### Roadmap f√ºr das Brainstorming\n\n1. ‚úÖ **Inhaltliche Anforderungen**\n   - Fachliche Korrektheit und Quellenvalidierung\n   - Verst√§ndlichkeitsniveau (Zielgruppe: Polizeibeamte unterschiedlicher IT-Kenntnisse)\n   - Vollst√§ndigkeit innerhalb der Detailgrade\n   - Konsistenz in Terminologie und Struktur\n\n2. ‚úÖ **Strukturelle Anforderungen**\n   - Schema-Konformit√§t (JSON-Validierung)\n   - Detail-Level-Systematik (wann Level 1, 2, 3?)\n   - Section-Hierarchie und Navigation\n   - data-ref Vergabelogik\n\n3. ‚úÖ **Technische Anforderungen**\n   - Medien-Anweisungen (Screenshots, annotierte Bilder, Videos)\n   - Agent-Integration (Context-Blocks, Trigger-Points)\n   - Barrierefreiheit (BFSG-Konformit√§t)\n   - HTML-Syntax und Attribut-Vollst√§ndigkeit\n\n4. ‚úÖ **Qualit√§tssicherung & Testing**\n   - Testkriterien f√ºr generierte Sections\n   - Validierungsprozess (syntaktisch + semantisch)\n   - Metadaten (Quellen, Versionen, Erstellungsdatum)\n   - Iterationslogik (wann ist eine Section \"fertig\"?)\n\n5. ‚è≥ **Workflow & Rollen** **‚Üê JETZT DRAN**\n   - Arbeitsschritte der KI (Research ‚Üí Draft ‚Üí Detailing ‚Üí Review ‚Üí Syntax-Check)\n   - Rollendefinitionen f√ºr verschiedene Phasen\n   - Schnittstellendefinition zwischen den Phasen\n   - Fehlerbehandlung und Feedback-Loops\n\n---\n\n## Bisheriger Fortschritt\n\n**Abgeschlossen:**\n\n- ‚úÖ **Cluster 1:** Inhaltliche Anforderungen (siehe `cluster1-final.md`)\n- ‚úÖ **Cluster 2:** Strukturelle Anforderungen (siehe `cluster2_results.md`)\n- ‚úÖ **Cluster 3:** Technische Anforderungen\n  - ‚úÖ **Teil A - Barrierefreiheit (BFSG):**\n    - Sprachauszeichnung (`lang`-Attribute): `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md`\n    - Alt-Texte & √úberschriften-Hierarchie: `cluster3_BFSG-Barrierefreiheit-Content.md`\n  - ‚úÖ **Teil B - HTML-Syntax & Attribut-Vollst√§ndigkeit:**\n    - Vollst√§ndige HTML-Element-Spezifikation: `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md`\n- ‚úÖ **Cluster 4:** Qualit√§tssicherung & Testing (siehe `cluster4_Qualit√§tssicherung-Metadaten-Validierung.md`)\n\n---\n\n## Aktueller Stand\n\nWir haben die **komplette Spezifikation** f√ºr die Content-Generierung dokumentiert:\n\n### Was ist fertig:\n\n**Inhaltlich (Cluster 1):**\n- Zielgruppe: IT-ferne Ermittler (Mittlere Reife, niedrige IT-Kenntnisse)\n- Detail-Level-System: 4 Stufen (Schnell, Standard, Detailliert, Show-Only)\n- Terminologie-Strategie: Deutsch bevorzugt, englische Fachbegriffe wo etabliert\n- Medien-Entscheidungsmatrix: Wann Screenshot/Annotiert/Video/Diagramm\n- Content-Type-System: instruction, explanation, visual, background, info, hint, attention, warning\n- Multi-Tool-Strategie: Tool-agnostisch mit tool-spezifischen Metadaten\n\n**Strukturell (Cluster 2):**\n- Hierarchische Struktur: 3-5 Ebenen (Topic ‚Üí Chapter ‚Üí Section ‚Üí Subsection ‚Üí Deep-Dive)\n- data-ref Granularit√§t & Namenskonventionen\n- JSON-LD Metadaten pro Section\n- Agent-Context-Block (einer pro Section, am Ende)\n- Navigation-Strategie: Freie Navigation\n\n**Technisch (Cluster 3):**\n- BFSG-konforme Barrierefreiheit (Sprachauszeichnung, Alt-Texte, √úberschriften-Hierarchie)\n- HTML-Element-Whitelist (32 erlaubte Elemente)\n- Pflicht-/Optional-Attribute pro Element\n- CSS-Klassen-System (Pflicht-Klassen, Review-Prozess)\n- Attribut-Reihenfolge & Formatierung (class ‚Üí id ‚Üí data-* ‚Üí sonstige)\n- Content-Type-Box-Entscheidungsmatrix (info/hint/attention/warning)\n- HTML-Kommentar-Konventionen (AGENT:/MEDIA:/NOTE:/TODO:/DECISION-REVIEW:)\n\n**Qualit√§tssicherung (Cluster 4):**\n- **Validierungsebenen definiert:**\n  - Syntaktisch (Python-Skripte + JSON-Schema, automatisiert)\n  - Semantisch (KI-Agent Vorpr√ºfung + Maintainer Final-Pr√ºfung)\n  - BFSG-Konformit√§t (implizit in syntaktischen Pr√ºfungen)\n- **Testkriterien spezifiziert:**\n  - Syntaktisch: Pflicht-Attribute, HTML-Struktur, Cross-References, Barrierefreiheit\n  - Semantisch: Konsistenz, Plausibilit√§t, Terminologie, Zusammenhang, Gliederung\n- **Validierungsprozess (2 Optionen):**\n  - Option B (Standard): Draft ‚Üí Validierung ‚Üí Review (Medien) ‚Üí Approved ‚Üí Published\n  - Option A (Erweitert): Mit zweifacher KI-Pr√ºfung (vor/nach Medien-Erstellung)\n- **Fehler-Kategorisierung:** CRITICAL / ERROR / WARNING / INFO\n- **Fehler-Log-System:** JSON-basierte Dokumentation (error-log.json) f√ºr iterative Prompt-Verbesserung\n- **Metadaten erweitert:**\n  - Neue QA-Felder: reviewStatus, lastReviewer, validationScore, knownIssues, reviewCycles, timeToPublish\n  - JSON-LD vollst√§ndig spezifiziert\n- **Status-√úberg√§nge:** Draft ‚Üí Review ‚Üí Approved ‚Üí Published (kein automatisches Approval)\n- **Versionierung:** MAJOR.MINOR.BUILD (Git-basiert)\n- **Metriken:**\n  - Pro Section: Validierungsfehler, Review-Zyklen, Zeit, validationScore (0-100)\n  - Aggregiert: Durchschnitte, Status-Verteilung, Ablehnungsquote\n- **Datengrundlagen f√ºr KI-Pr√ºfung:**\n  - Alle approbierten Sections, Terminologie-Entscheidungsliste, Rahmenplan & Gliederung\n  - Quellmaterial (AXIOM Handbuch), Style-Guides, Antwortschema\n\n---\n\n## N√§chster Schritt: Cluster 5 - Workflow & Rollen\n\n### Ziel\n\nDefinition der **konkreten Arbeitsabl√§ufe und Verantwortlichkeiten** bei der KI-gest√ºtzten Content-Generierung f√ºr ~100-150 Sections.\n\nCluster 5 fokussiert sich auf das **\"Wie\"** der Umsetzung:\n- Welche Schritte durchl√§uft die KI?\n- Wer ist wof√ºr verantwortlich?\n- Wie kommunizieren die verschiedenen Akteure/Systeme?\n- Was passiert bei Fehlern?\n\n---\n\n### Aufgaben f√ºr Cluster 5\n\n**1. Arbeitsschritte der KI:**\n- Detaillierte Phasen: Research ‚Üí Draft ‚Üí Detailing ‚Üí Review ‚Üí Syntax-Check\n- Was macht die KI in jeder Phase konkret?\n- Welche Inputs/Outputs hat jede Phase?\n- Welche Tools/APIs nutzt die KI?\n- Zeitabsch√§tzungen pro Phase\n\n**2. Rollendefinitionen:**\n- **KI-Generator:** Erstellt initiale Sections (Draft)\n- **KI-Reviewer:** Semantische Vorpr√ºfung (Konsistenz, Plausibilit√§t, etc.)\n- **Maintainer:** Finale fachliche Pr√ºfung, Medien-Erstellung, Approval\n- **Validator:** Python-Skripte f√ºr syntaktische Pr√ºfung\n- Weitere Rollen (falls notwendig)\n\n**3. Schnittstellendefinition:**\n- Input/Output zwischen Phasen\n- Datenformate (JSON, HTML, Reports)\n- √úbergabepunkte und Trigger\n- Kommunikationsprotokolle\n\n**4. Fehlerbehandlung & Feedback-Loops:**\n- Was passiert bei syntaktischen Fehlern? (Automatische Korrektur durch KI)\n- Was passiert bei semantischen Problemen? (Feedback an KI, erneute Generierung)\n- Was passiert bei Reject durch Maintainer? (Dokumentation, Prompt-Verbesserung)\n- Eskalationspfade bei wiederholten Fehlern\n\n**5. Tooling & Automation:**\n- Welche Tools unterst√ºtzen den Workflow?\n- Kann der Prozess (teilweise) automatisiert werden?\n- Welche manuellen Schritte sind unvermeidlich?\n- CI/CD-Integration m√∂glich?\n\n---\n\n## Arbeitsweise\n\n- **Kleinschrittig vorgehen** (keine gro√üen Spr√ºnge)\n- **Top-Down-Design** (vom Groben ins Detail)\n- **Gef√ºhrte Fragen** stellen, bis 95% Klarheit erreicht ist\n- √Ñnderungen nur **vorschlagen und begr√ºnden**\n- Jede √Ñnderung muss **durch mich verifiziert und akzeptiert** werden\n- Am Ende ein **Ergebnisdokument** erstellen (analog zu Cluster 1-4)\n\n---\n\n## Wichtige Projekt-Richtlinien\n\n### Textstil f√ºr dich (KI):\n- Bleibe eng an meiner Vorgabe\n- F√ºge keine zus√§tzlichen Aspekte hinzu\n- Erst meine Aufgabe umsetzen, dann separat Verbesserungen vorschlagen\n- Verbesserungsvorschl√§ge in 3 Abs√§tzen erkl√§ren: Vorteile, Technik, Aufwand\n- Vermeide Telegramstil\n- Hebe wichtige Aussagen durch **Fettmarkieren** hervor\n\n### Code-√Ñnderungen:\n- Immer kleinschrittig und Schritt f√ºr Schritt\n- Keine unerw√ºnschten Nebeneffekte\n- CSS-Variablen `--variable*` bewahren und nutzen\n- Keine absoluten Gr√∂√üen/Farben au√üerhalb der Themes\n- Immer den **aktuellen Code** aus dem Projekt-Dateispeicher als Basis verwenden\n- Jede √Ñnderung begr√ºnden\n- Mindestens einen Test vorschlagen\n\n### Debugging:\n- Nach Tests wird Debug-Output in `Debug-output.XXX` abgelegt (XXX = Buildnummer)\n- H√∂chste Buildnummer = aktuellster Debug-Output\n\n---\n\n## Meine Frage\n\nBitte lies die **sechs Dokumente** im Projekt-Dateispeicher:\n1. `cluster1-final.md` (Inhaltliche Anforderungen)\n2. `cluster2_results.md` (Strukturelle Anforderungen)\n3. `cluster3_BFSG-Sprachauszeichnung-Richtlinien.md` (BFSG Teil 1)\n4. `cluster3_BFSG-Barrierefreiheit-Content.md` (BFSG Teil 2)\n5. `cluster3_Phase-B_HTML-Syntax-und-Attribut-Vollst√§ndigkeit.md` (HTML-Syntax)\n6. `cluster4_Qualit√§tssicherung-Metadaten-Validierung.md` (Qualit√§tssicherung)\n\n**Lass uns dann Cluster 5: Workflow & Rollen angehen.**\n\nStelle mir gef√ºhrte Fragen, damit wir gemeinsam den Workflow und die Rollen definieren k√∂nnen. Wir gehen wie immer kleinschrittig vor und kl√§ren zun√§chst die grundlegende Struktur, bevor wir ins Detail gehen.\n\n---\n\n## Kontext-Informationen\n\n**Projekt:** WebAssistentForensics  \n**Ziel-Tool (initial):** Magnet AXIOM Examine  \n**Sp√§tere Erweiterung:** X-Ways Forensics, Cellebrite Reader  \n**Haupt-Zielgruppe:** IT-ferne Polizei-Ermittler  \n**Content-Umfang:** ~100-150 Sections  \n**KI-Modell:** Claude Sonnet 4.5  \n**Validierung:** Python-basiert + JSON-Schema  \n\n---\n\n**Ich freue mich auf die Zusammenarbeit!**\n\n\nPerfekt! Ich habe das aktualisierte Dokument task4.md f√ºr Cluster 5 erstellt! üéâ\n\n\n\nWas ich ge√§ndert habe:\n\n\n‚úÖ Cluster 4 als abgeschlossen markiert (‚úÖ in der Roadmap und im \"Bisheriger Fortschritt\")\n\n\n‚úÖ Ergebnisse aus Cluster 4 zusammengefasst im Abschnitt \"Qualit√§tssicherung (Cluster 4)\" mit allen wichtigen Punkten:\n\n\nValidierungsebenen (Syntaktisch, Semantisch, BFSG)\n\nTestkriterien\n\nValidierungsprozess (Option A & B)\n\nFehler-Kategorisierung & Fehler-Log\n\nMetadaten-Erweiterungen\n\nStatus-√úberg√§nge & Versionierung\n\nMetriken\n\nDatengrundlagen f√ºr KI-Pr√ºfung\n\n\n‚úÖ Cluster 5 vorbereitet mit:\n\n\nZielbeschreibung\n\n5 konkrete Aufgabenbereiche (Arbeitsschritte, Rollen, Schnittstellen, Fehlerbehandlung, Tooling)\n\nVerweis auf alle 6 bisherigen Cluster-Dokumente\n\n\n\nDas Dokument ist bereit f√ºr den neuen Chat!\n\n\nSie k√∂nnen es direkt in Ihren neuen Chat kopieren, um mit Cluster 5: Workflow & Rollen zu beginnen.\n\n\nViel Erfolg bei der weiteren Arbeit! Sie haben bereits eine beeindruckende Menge an strukturierter Arbeit geleistet - die vier Cluster-Dokumente bilden eine solide Grundlage f√ºr die Content-Generierung. üòä",
      "time_iso8601": "2025-10-09T21:12:12"
    }
  ]
}